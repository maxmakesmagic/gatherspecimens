cdx:
  digest: VAOQZH256UEIHMAJCX4FZHGZ7OEWQL3C
  hash_raw_url: b8b3fd4cfaffe833fa27a0e39495154907b4c18b1b90e0ae168ab8a57ac14069
  id: 635082
  key: com,wizards)/magic/magazine/article.aspx?x=mtg/daily/li/223
  length: 18617
  mime_type: text/html
  raw_url: https://web.archive.org/web/20130101171348id_/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/li/223
  status_code: 200
  timestamp: 2013-01-01 17:13:48
  url: http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/li/223
  view_url: https://web.archive.org/web/20130101171348/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/li/223
memento:
  hash_raw_url: b8b3fd4cfaffe833fa27a0e39495154907b4c18b1b90e0ae168ab8a57ac14069
  html_content: 

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head><link href="/WebResource.axd?d=zWaAXrqjpiReL4-EfhoBrsA0e8xhDETmz7wTsEn3N6NzqWGmP7J6C0HklbmuEXV0OqpUUtIVis2BYKjZALaaduHR23ZGBVE_-bP3Gb78r9wOKqdYQEmvV8_e34EaUhBL0&amp;amp;t=634909158370017304" type="text/css" rel="stylesheet" /><link href="/Assets/site.css" type="text/css" rel="stylesheet" /><link href="/magic/styles.css" type="text/css" rel="stylesheet" /><link href="/Magic/Magazine/article.css" type="text/css" rel="stylesheet" /><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><meta name="Description" content="Wizards of the Coast" /><meta name="Keywords" content="magic, trading card games, dungeons, dragons, neopets, miniatures, roleplaying games, star wars, d20, d20 Modern, xiaolin showdown, kids next door, hecatomb, axis &amp; allies, avalon hill, mirrorstone, dreamblade, robo rally, monitor" /><title>
	Reasons : Daily MTG : Magic: The Gathering
</title>
    <script type="text/javascript" src="/Assets/scripts/prototype.js"></script>
    <script type="text/javascript" src="/Assets/scripts/navigation.js"></script>
    <script type="text/javascript" src="/Assets/scripts/global.js"></script>
    <script type="text/javascript" src="/Assets/scripts/miscellaneous.js"></script>
    <link href="/Assets/print.css" type="text/css" rel="stylesheet" media="print" /><link href="/Assets/prototip.css" type="text/css" rel="stylesheet" /><link href="/Magic/Assets/favicon.ico" rel="shortcut icon" />
    <!--[if IE]><link href="/Assets/print_ie7.css" type="text/css" rel="stylesheet" media="print" /><![endif] -->
    <script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-15020098-1");
pageTracker._setDomainName(".wizards.com");
pageTracker._setAllowLinker(true);
pageTracker._trackPageview();
} catch(err) {}

function gaTrackEvent(brand, pageName, element) {
    pageTracker._trackEvent(brand, pageName, element);
}

function gaLink(url) {
    pageTracker._link(url);
}
</script><script src="/Assets/Scripts/prototip.js" type="text/javascript"></script><script src="/magic/navigation.js" type="text/javascript"></script><meta property="og:title" content="Reasons - " /><link rel="shortcut icon" href="/FavIcon.ico" type="image/x-icon"></link><style type="text/css">.GlobalSmartSearchBox .GlobalSearchLoading { background: url('/WebResource.axd?d=zWaAXrqjpiReL4-EfhoBrsA0e8xhDETmz7wTsEn3N6NzqWGmP7J6C0HklbmuEXV0OqpUUtIVis2BYKjZALaadqstviaMNU3y_CdeYrytuvBibOZIW3pHwHFwEGo7DNua0&amp;t=634909158370017304') no-repeat 5px 3px; }
.GlobalSmartSearchBox .GlobalSmartSearchBoxLeft { background:url('/WebResource.axd?d=zWaAXrqjpiReL4-EfhoBrsA0e8xhDETmz7wTsEn3N6NzqWGmP7J6C0HklbmuEXV0OqpUUtIVis2BYKjZALaadhYWQoVRf43lLDf7s2JwixCaXSLe4fPnL5oefZIOwLK00&amp;t=634909158370017304') repeat-y; }
.GlobalSmartSearchBox .GlobalSmartSearchBoxBottomLeft { background:url('/WebResource.axd?d=zWaAXrqjpiReL4-EfhoBrsA0e8xhDETmz7wTsEn3N6NzqWGmP7J6C0HklbmuEXV0OqpUUtIVis2BYKjZALaadolcjqp466PwM4oQHdkqat9iKBJAWqoPJzh-86zyuho20&amp;t=634909158370017304') no-repeat; }
.GlobalSmartSearchBox .GlobalSmartSearchBoxBottom { background:url('/WebResource.axd?d=zWaAXrqjpiReL4-EfhoBrsA0e8xhDETmz7wTsEn3N6NzqWGmP7J6C0HklbmuEXV0OqpUUtIVis2BYKjZALaadhYWQoVRf43lLDf7s2JwixCs-5Xfs2F4YaMEWn5lImMX0&amp;t=634909158370017304') repeat-x; }
.globalSearchControl .globalSearchControlTextBox { background:url('/WebResource.axd?d=zWaAXrqjpiReL4-EfhoBrsA0e8xhDETmz7wTsEn3N6NzqWGmP7J6C0HklbmuEXV0OqpUUtIVis2BYKjZALaadlhpUCs0e6GsjrW9XoJLrptGTIb4_Z2dfrPle3btAkqtsYlQASEKt0OSRuEeFBY3qg2&amp;t=634909158370017304') no-repeat; }
</style></head>
<body>
<form name="aspnetForm" method="post" action="Article.aspx?x=mtg%2fdaily%2fli%2f223" id="aspnetForm">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwULLTEyMjQwNTkzMDRkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYDBT1jdGwwMCRjdGwwMCRnbG9iYWxTbWFydFNlYXJjaCRnbG9iYWxTZWFyY2hDb250cm9sU3VibWl0QnV0dG9uBT9jdGwwMCRjdGwwMCRDb250ZW50UGxhY2VIb2xkZXIxJE1hZ2ljTGVmdE5hdmlnYXRpb24kU3RvcmVzUmFkaW8FP2N0bDAwJGN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkTWFnaWNMZWZ0TmF2aWdhdGlvbiRFdmVudHNSYWRpb59eju0G+haW3Hqpv73nxZoJXFS3" />


<script type="text/javascript">
//<![CDATA[
var origionalGlobalSmartSearchTextBoxValue = 'Search Wizards.com';var enableGlobalSmartSearch = false;var searchGatherer = false;var gathererBaseURL = 'http://gatherer.wizards.com';




function ClientIDs() {}
ClientIDs.GoogleAnalyticsCode = 'ctl00_ctl00_GoogleAnalyticsCode';
ClientIDs.form1 = 'aspnetForm';
ClientIDs.header = 'ctl00_ctl00_header';
ClientIDs.globalSmartSearch = 'ctl00_ctl00_globalSmartSearch';
ClientIDs.globalSearchControlSubmitButton = 'ctl00_ctl00_globalSmartSearch_globalSearchControlSubmitButton';
ClientIDs.ContentPlaceHolder1 = 'ctl00_ctl00_ContentPlaceHolder1';
ClientIDs.MagicTopNavigation = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation';
ClientIDs.topNavigation = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_topNavigation';
ClientIDs.multiverse = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_multiverse';
ClientIDs.tcg = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_tcg';
ClientIDs.magazine = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_magazine';
ClientIDs.dg = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_dg';
ClientIDs.merchandise = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_merchandise';
ClientIDs.HeaderAdSpace = 'ctl00_ctl00_ContentPlaceHolder1_HeaderAdSpace';
ClientIDs.topAdvertisementContent = 'ctl00_ctl00_ContentPlaceHolder1_topAdvertisementContent';
ClientIDs.mainContent = 'ctl00_ctl00_ContentPlaceHolder1_mainContent';
ClientIDs.Article = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article';
ClientIDs.articleTop = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_articleTop';
ClientIDs.ArticleType = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_ArticleType';
ClientIDs.headerPanel = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_headerPanel';
ClientIDs.ArticleSubHeading = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_ArticleSubHeading';
ClientIDs.ArticleHeading = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_ArticleHeading';
ClientIDs.ArticleByline = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_ArticleByline';
ClientIDs.socialbar = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_socialbar';
ClientIDs.TwitterShare = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_TwitterShare';
ClientIDs.GooglePlusOne = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_GooglePlusOne';
ClientIDs.iframeFacebook = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_iframeFacebook';
ClientIDs.linksPanel = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_linksPanel';
ClientIDs.HeadingLinks = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_HeadingLinks';
ClientIDs.EmailFriend = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_EmailFriend';
ClientIDs.MessageBoard = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_MessageBoard';
ClientIDs.PrintFriendly = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_PrintFriendly';
ClientIDs.AuthorImageContainer = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_AuthorImageContainer';
ClientIDs.AuthorImage = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_AuthorImage';
ClientIDs.archiveSection = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_archiveSection';
ClientIDs.TypeArchive = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_TypeArchive';
ClientIDs.AuthorArchive = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_AuthorArchive';
ClientIDs.contentBlock = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_contentBlock';
ClientIDs.footerPanel = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_footerPanel';
ClientIDs.MessageBoardFooter = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_MessageBoardFooter';
ClientIDs.emailFooter = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_emailFooter';
ClientIDs.AuthorEmailFoooter = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_AuthorEmailFoooter';
ClientIDs.TypeArchiveFooter = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_TypeArchiveFooter';
ClientIDs.ErrorMessage = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_ErrorMessage';
ClientIDs.SideAdSpace = 'ctl00_ctl00_ContentPlaceHolder1_SideAdSpace';
ClientIDs.rightAdvertisementContent = 'ctl00_ctl00_ContentPlaceHolder1_rightAdvertisementContent';
ClientIDs.sideContent = 'ctl00_ctl00_ContentPlaceHolder1_sideContent';
ClientIDs.MagicLeftNavigation = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation';
ClientIDs.leftNav = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_leftNav';
ClientIDs.tier1 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_tier1';
ClientIDs.planeswalkers = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_planeswalkers';
ClientIDs.Literal1 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal1';
ClientIDs.colors = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_colors';
ClientIDs.A14 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A14';
ClientIDs.A15 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A15';
ClientIDs.Literal2 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal2';
ClientIDs.A16 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A16';
ClientIDs.Literal3 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal3';
ClientIDs.A17 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A17';
ClientIDs.Literal4 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal4';
ClientIDs.A18 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A18';
ClientIDs.Literal5 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal5';
ClientIDs.A19 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A19';
ClientIDs.Literal6 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal6';
ClientIDs.planes = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_planes';
ClientIDs.A20 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A20';
ClientIDs.Literal7 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal7';
ClientIDs.A21 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A21';
ClientIDs.Literal8 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal8';
ClientIDs.A22 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A22';
ClientIDs.Literal9 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal9';
ClientIDs.A23 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A23';
ClientIDs.Literal10 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal10';
ClientIDs.A24 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A24';
ClientIDs.Literal11 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal11';
ClientIDs.A25 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A25';
ClientIDs.Literal12 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal12';
ClientIDs.A26 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A26';
ClientIDs.Literal13 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal13';
ClientIDs.A27 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A27';
ClientIDs.Literal14 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal14';
ClientIDs.A28 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A28';
ClientIDs.Literal15 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal15';
ClientIDs.newToMagic = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_newToMagic';
ClientIDs.A29 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A29';
ClientIDs.Literal16 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal16';
ClientIDs.A30 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A30';
ClientIDs.Literal17 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal17';
ClientIDs.A31 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A31';
ClientIDs.Literal18 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal18';
ClientIDs.A32 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A32';
ClientIDs.Literal19 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal19';
ClientIDs.products = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_products';
ClientIDs.A1 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A1';
ClientIDs.Literal23 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal23';
ClientIDs.A5 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A5';
ClientIDs.A3 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A3';
ClientIDs.Literal24 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal24';
ClientIDs.A12 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A12';
ClientIDs.Literal25 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal25';
ClientIDs.Literal22 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal22';
ClientIDs.Literal20 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal20';
ClientIDs.Literal21 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal21';
ClientIDs.Literal28 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal28';
ClientIDs.Literal26 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal26';
ClientIDs.Literal27 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal27';
ClientIDs.A8 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A8';
ClientIDs.Literal29 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal29';
ClientIDs.tournaments = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_tournaments';
ClientIDs.A4 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A4';
ClientIDs.Literal30 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal30';
ClientIDs.A9 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A9';
ClientIDs.Literal31 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal31';
ClientIDs.resources = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_resources';
ClientIDs.columns = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_columns';
ClientIDs.A10 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A10';
ClientIDs.features = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_features';
ClientIDs.news = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_news';
ClientIDs.event = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_event';
ClientIDs.downloads = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_downloads';
ClientIDs.Literal32 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal32';
ClientIDs.mol = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_mol';
ClientIDs.dotp = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_dotp';
ClientIDs.Literal33 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal33';
ClientIDs.Literal34 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal34';
ClientIDs.Literal35 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Literal35';
ClientIDs.tactics = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_tactics';
ClientIDs.licensedproducts = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_licensedproducts';
ClientIDs.publishing = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_publishing';
ClientIDs.A6 = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A6';
ClientIDs.tier1Japanese = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_tier1Japanese';
ClientIDs.LeftNavJapanese = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_LeftNavJapanese';
ClientIDs.IntlNews = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_IntlNews';
ClientIDs.ENNews = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_ENNews';
ClientIDs.pwpHoverButton = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_pwpHoverButton';
ClientIDs.CommunityButton = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_CommunityButton';
ClientIDs.MagicLocator = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_MagicLocator';
ClientIDs.StoresRadio = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_StoresRadio';
ClientIDs.EventsRadio = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_EventsRadio';
ClientIDs.Address = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Address';
ClientIDs.Search = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Search';
ClientIDs.TwitterWidget = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_TwitterWidget';
ClientIDs.twitterwidgetembed = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_twitterwidgetembed';
ClientIDs.twitterwidgetusername = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_twitterwidgetusername';
ClientIDs.japaneseSocialMedia = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_japaneseSocialMedia';
ClientIDs.MagicFooter = 'ctl00_ctl00_MagicFooter';
ClientIDs.pnlFooter = 'ctl00_ctl00_MagicFooter_pnlFooter';
ClientIDs.LanguageLink = 'ctl00_ctl00_MagicFooter_LanguageLink';
ClientIDs.pnlJapaneseFooterNav = 'ctl00_ctl00_MagicFooter_pnlJapaneseFooterNav';
ClientIDs.CopyrightYear = 'ctl00_ctl00_MagicFooter_CopyrightYear';
ClientIDs.litTermsEnglish = 'ctl00_ctl00_MagicFooter_litTermsEnglish';
ClientIDs.litTermsJapanese = 'ctl00_ctl00_MagicFooter_litTermsJapanese';
ClientIDs.affiliates = 'ctl00_ctl00_affiliates';
ClientIDs.esrbLogo = 'ctl00_ctl00_esrbLogo';
ClientIDs.affiliatesDuels = 'ctl00_ctl00_affiliatesDuels';
var textBoxHash = new Hash( {  } );//]]>
</script>

<script src="../../Assets/Scripts/languages.js" type="text/javascript"></script>
<script type="text/javascript">
//<![CDATA[
//]]>
</script>

<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="/wEWBwKSscyhBwLJ/Pq1CgLhgdzuCALQiaCwDwKkk8qOBQKJyNzvAgKK8LikCDxCL4CsVwZ2xlLcL6AeUeS7LKfk" />

<div id="container">
    <div id="glow">
        <div id="glowStatic">
	        <div id="wrap">
        		
		        <div class="hidden"><a href="#MasterMainContent" title="skip to content">skip to content</a></div>
        		
		        <div id="ctl00_ctl00_header">
        			
			        <div id="mainNav">
				        <!-- Top-level menus (if we were using them) -->
				        <a href="/" title="Click to return to the Wizards.com home page.">Wizards of the Coast</a>
			        </div><!-- /mainNav -->

			        <!-- Wizards Logo -->
			        <h1 id="WizardsLogo">
				        <a href="/" title="Click to return to the Wizards.com home page.">
				            <img src="/Assets/images/wotc_logo.png" alt="Wizards of the Coast" />
				        </a>				                     
			        </h1>
			               			
		        </div><!-- /header -->
        		
		        <!-- Main Content -->
		        <div id="MasterMainContent">
			        <!-- this needs to be here for IE6 for some strange reason -->
   			        <div id="ctl00_ctl00_globalSmartSearch" SearchButtonText="Search" style="position:absolute; top:5px; right:25px; z-index:3;">
	<div class="globalSearchControl">
		<div class="globalSearchControlTextBox"><input name="ctl00$ctl00$globalSmartSearch$ctl02" type="text" maxlength="100" id="SearchBox" onfocus="FocusSearchTextBox(event, this);" onblur="UnfocusSearchTextBox(event, this);" autocomplete="off" value="Search Wizards.com" /></div><div class="globalSearchControlSubmitButton"><input type="image" name="ctl00$ctl00$globalSmartSearch$globalSearchControlSubmitButton" id="ctl00_ctl00_globalSmartSearch_globalSearchControlSubmitButton" src="/WebResource.axd?d=zWaAXrqjpiReL4-EfhoBrsA0e8xhDETmz7wTsEn3N6NzqWGmP7J6C0HklbmuEXV0OqpUUtIVis2BYKjZALaadp0VFPruyxNKF4XqNBwT9aQraqxeZgDjFQ0minqFykYD0&amp;amp;t=634909158370017304" border="0" /></div>
	</div><script type="text/javascript" src="/WebResource.axd?d=zWaAXrqjpiReL4-EfhoBrsA0e8xhDETmz7wTsEn3N6NzqWGmP7J6C0HklbmuEXV0OqpUUtIVis2BYKjZALaaduHR23ZGBVE_-bP3Gb78r9ysg6312TLAIBhhwRs-ZLs00&amp;amp;t=634909158370017304"></script>
</div>
   			        
			        

	<div id="bannerGraphic">
	    <h2 id="MagicLogo">
	        <a href="/Magic/" title="Click to return to the Magic: The Gathering home page.">
	            <img src="/Magic/Assets/magic_logo.png" alt="Magic: The Gathering" />
	        </a>
	    </h2>
	</div>
	
	<div id="wrapper">
	
	    


<div id="topNav">
    <ul id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_topNavigation">
        <li id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_multiverse">
            <a href="../Multiverse/Default.aspx" class="multiverse" title="The Multiverse">
                The Multiverse
            </a>
        </li>
        <li id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_tcg">
            <a href="../TCG/Default.aspx" class="tcg" title="Trading Card Game">
                Trading Card Game
            </a>
        </li>
        <li id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_magazine" class="active">
            <a href="Default.aspx" title="Daily MTG" class="magazine">
                Daily MTG
            </a>
        </li>
        <li id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_dg">
            <a href="../Digital/Default.aspx" class="dg" title="Digital Games">
                Digital Games
            </a>
        </li>

        <li id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_merchandise">
            <a href="../Merchandise/Default.aspx" onclick="gaTrackEvent('Magic', 'MagicWeb-TopNav', 'Merchandise');" class="merchandise" title="Merchandise" alt="Merchandise">
                Merchandise
            </a>
        </li>
    </ul>
</div><!-- /topNav -->
        
        <div id="ctl00_ctl00_ContentPlaceHolder1_HeaderAdSpace">
	
            <div id="adspaceRow">
                <div adrotator="true">
  <!--PWP SURVEY -->
  <div style="display:none;" ad="true">
    <p>
      <a target="_blank" href="http://study.cmbinfo.com/1?10002">
        <img src="http://media.wizards.com/images/magic/daily/ads/20121214_survey_728.jpg" />
      </a>
    </p>
  </div>
  <span />
  <!--FNM-->
  <div style="display:none;" ad="true">
    <p>
      <a target="_blank" href="/Magic/TCG/Events.aspx?x=events/magic/fnm">
        <img src="http://media.wizards.com/images/magic/daily/ads/20121203_fnm_728.jpg" />
      </a>
    </p>
  </div>
  <span />
  <!--MTGO Survey-->
  <span />
  <!--DGM PTQ-->
  <div style="display:none;" ad="true">
    <p>
      <a target="_blank" href="http://www.wizards.com/Magic/TCG/Events.aspx?x=mtgcom/events/ptq">
        <img src="http://media.wizards.com/images/magic/daily/ads/20121116_DGMPTQ_728.jpg" />
      </a>
    </p>
  </div>
  <span />
  <!--Gate Crash Qualifiers-->
  <span />
  <!--RTRLeague-->
  <span />
  <!-- GUILD SHIRT / HATS-->
  <div style="display:none;" ad="true">
    <p>
      <a target="_blank" href="http://www.mtgmerch.com">
        <img src="http://media.wizards.com/images/magic/daily/ads/RTR_ShirtHat_Golgari_Banner.jpg" />
      </a>
    </p>
  </div>
  <span />
  <div style="display:none;" ad="true">
    <p>
      <a target="_blank" href="http://www.mtgmerch.com">
        <img src="http://media.wizards.com/images/magic/daily/ads/RTR_ShirtHat_Selesnya_Banner.jpg" />
      </a>
    </p>
  </div>
  <span />
  <!-- MTGO Cube -->
  <div style="display:none;" ad="true">
    <p>
      <a target="_blank" href="http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/other/11272012d">
        <img src="http://media.wizards.com/images/magic/daily/ads/Cube_2012_Banner.jpg" />
      </a>
    </p>
  </div>
  <span />
  <!-- *********************************************************************** 2013 Banner Ads *********************************************************************** -->
  <!-- GTC Prerelease-->
  <div style="display:none;" ad="true">
    <p>
      <a target="_blank" href="http://www.wizards.com/Magic/TCG/Events.aspx?x=mtgcom/events/prerelease-facts">
        <img src="http://media.wizards.com/images/magic/daily/ads/GTC_PRE_Banner.png" />
      </a>
    </p>
  </div>
  <span />
  <!-- MTGO GTC <show start="1/28/2013" end="2/8/2013"> <p> <link type="newwindow" href="http://www.wizards.com/Magic/TCG/Events.aspx?x=mtgcom/events/"> <img src="http://media.wizards.com/images/magic/daily/ads/GTC_PRE_Banner.png"/> </link> </p> </show>-->
  <!-- PT GTC <show start="2/11/2012" end="2/17/2013"> <p> <link type="newwindow" href="http://www.wizards.com/Magic/TCG/Events.aspx?x=mtgcom/events/"> <img src="http://media.wizards.com/images/magic/daily/ads/GTC_PRE_Banner.png"/> </link> </p> </show>-->
  <!-- GTC LEAGUE BEGIN -->
  <div style="display:none;" ad="true">
    <p>
      <a target="_blank" href="http://www.wizards.com/Magic/TCG/Events.aspx?x=mtgcom/events/league-facts">
        <img src="http://media.wizards.com/images/magic/daily/ads/GTC_League_Start_Banner.png" />
      </a>
    </p>
  </div>
  <span />
  <!-- GTC LEAGUE ONGOING-->
  <span />
  <!-- GTC GAMEDAY-->
  <span />
  <!-- FNM GTC -->
  <div style="display:none;" ad="true">
    <p>
      <a target="_blank" href="http://www.wizards.com/Magic/tcg/events.aspx?x=events/magic/fnm">
        <img src="http://media.wizards.com/images/magic/daily/ads/GTC_FNM_Banner.png" />
      </a>
    </p>
  </div>
  <span />
</div>
<!--NEEDED BANNERS FOR 2013 (in code but commented out) MTGO GTC (1/28 - 2/8) PT GTC (2/11 - 2/17)-->
            </div>
        
</div>
        
		<div id="centerColumn">
		     
      <!-- start -->
    <div id="content"  >
        <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_articleTop" class="article-top">
    <h3><img src="/Magic/Magazine/Images/article_Limited_Information.gif" alt="Limited_Information" /></h3>
</div>
<div class="center-content">
    <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_Article">
	
        <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_headerPanel" class="heading">
            <div class="description">
				<div class="articleSubHeading">
					
				</div>
                <h4> Reasons</h4>
                <h5 class="byline"> Steve Sadin<br />Wednesday, November 28, 2012</h5>
                <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_socialbar" class="socialbar">
                    <div class="socialnetwork">
                        <a href="http://twitter.com/share" data-url="http://www.wizards.com/magic/magazine/article.aspx?x=mtg/daily/li/223"
                            class="twitter-share-button" data-count="horizontal">Tweet</a>
                    </div>
                    <div class="socialnetwork">
                        <g:plusone href="http://www.wizards.com/magic/magazine/article.aspx?x=mtg/daily/li/223" size="medium"
                            count="true"></g:plusone>
                    </div>
                    <div class="socialnetwork">
                        <iframe id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_iframeFacebook" scrolling="no" frameborder="0" style="border: none;
                            overflow: hidden; width: 100px; height: 21px;" allowtransparency="true" src="http://www.facebook.com/plugins/like.php?href=http://www.wizards.com/magic/magazine/article.aspx?x=mtg/daily/li/223&amp;send=false&amp;layout=button_count&amp;width=100&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=tahoma&amp;height=21"></iframe>
                    </div>
                    <div class="clear">
                    </div>
                </div>
                <script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
                <script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
            </div>
            <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_linksPanel" class="links">
                <ul id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_HeadingLinks" class="heading-links">
                    <!--
                    <li class="addbutton">
                        <script type="text/javascript">var addthis_pub="wizardsweb";</script>
                        <a href="http://www.addthis.com/bookmark.php?v=20" 
                           onmouseover="return addthis_open(this, '', '[URL]', '[TITLE]')" 
                           onmouseout="addthis_close()" 
                           onclick="return addthis_sendto()"><img src="http://s7.addthis.com/static/btn/lg-addthis-en.gif" width="125" height="16" alt="Bookmark and Share" style="border:0"/></a>
                        <script type="text/javascript" src="http://s7.addthis.com/js/200/addthis_widget.js"></script>
                    </li>
                    -->
                    <!--<li></li>-->
                    <li><a href="http://community.wizards.com/go/thread/view/75842/29513323/11282012_LI:_Reasons" title="Click to visit the message boards." target="_blank"><img src="/Magic/Assets/icon_boards.gif" alt="Boards" /></a></li>
                    <li>
                        <a id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_PrintFriendly" title="Click to view printer friendly page." href="/Magic/Magazine/Article.aspx?x=mtg/daily/li/223&amp;print=true"><img src="/Magic/Assets/icon_print.gif" alt="Print" /></a></li>
                </ul>
                <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_AuthorImageContainer" class="author-image">
                    <img src="/magic/images/mtgcom/authorpics/authorpic_stevesadin.jpg" alt="Author Image" onerror="this.onerror=null; this.src='/magic/images/mtgcom/authorpics/author__missing.jpg'"/>
                </div>
                <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_archiveSection">
                    <ul id="archive-links">
                        <li><a href="/Magic/Magazine/Archive.aspx?tag=limitedinformation&description=Limited Information" title="Click to visit the 'Limited Information' archive.">Limited Information Archive </a></li>
                        <li><a href="/Magic/Magazine/Archive.aspx?author=Steve Sadin" title="Click to visit the 'Steve Sadin' archive.">Steve Sadin Archive </a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="article-content">
            <p>
  <img border="0" align="left" src="/magic/images/dropcap_B.jpg" alt="The letter B!" />ooster drafts can be very daunting for experienced and inexperienced <b>Magic</b> players alike. I've seen many players, particularly players who aren't very familiar with a set yet, get overwhelmed while they're drafting and begin taking cards seemingly at random rather than taking a little bit of time to critically evaluate their choices. </p>
<p>Does this sound like something that happens to you?</p>
<p>Don't panic.</p>
<div align="center">
  <img class="article-image" border="0" src="http://media.wizards.com/images/magic/daily/li/li223_i_said_dont_panic.jpg" width="620" align="center" />
</div>
<p align="right" class="small">
  <a class="nodec" keyName="name" keyValue="Golgari_Decoy" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Golgari Decoy</a> | Art by <a href="http://gatherer.wizards.com/pages/search/default.aspx?output=spoiler&amp;method=visual&amp;action=advanced&amp;artist=[%22marco nelor%22]">Marco Nelor</a></p>
<p>As long as you make sure the cards that you draft, and then ultimately put in your deck, are being selected for a (preferably good) reason, then at the very least you will be able to learn a lot from the experience.</p>
<p>Once you're familiar with a draft format you're going to be able to quickly rifle through every pack and reduce your choices down to one of just a couple of options without needing to read every card. And if you just need to choose between two or three cards, you should have plenty of time to make a decision.</p>
<p>However, until you personally feel comfortable drafting a set you may need to figure out some shortcuts that will allow you to remain levelheaded, and able to think critically, while the draft is taking place.</p>
<p>One shortcut I still use whenever a set is brand-new (and I'm still trying to learn what the cards literally do as well as how good they are) is to hone in on two colors early and just stick with them throughout the entirety of the draft.</p>
<p>Sure, this shortcut will probably lead you to miss out on some good opportunities that a player who has already drafted the set twenty times could have found, but if you're able to recognize your own limitations with a set, and give yourself a little bit of time to learn what you're doing without feeling overwhelmed, then pretty soon you'll be the player who (almost) always drafts a great deck.</p>
<h3>Understand, Identify, Decide</h3>
<p>In order to consistently succeed at Booster Draft you need to be able to:</p>
<div style="margin-left:15px;">
  <ul>
    <li>Literally understand what the cards do</li>
    <li>Identify why/when cards are good</li>
    <li>Understand what your deck needs</li>
    <li>Confidently (and strategically) decide when to commit to your colors</li>
  </ul>
</div>
<p>
  <b>Literally understand what the cards do</b>
</p>
<p> Until you know what most (or preferably all) of the cards in a set do, you're inevitably going to be at a disadvantage. Fortunately, the only thing you need to do to make this disadvantage disappear is to play more <b>Magic</b> and/or to study the current <a href="http://www.wizards.com/magic/tcg/article.aspx?x=mtg/tcg/returntoravnica/cig#">Card Image Gallery</a>. </p>
<p>
  <b>Identify why/when cards are good</b>
</p>
<p> Sacrifices will inevitably need to be made when you're playing Limited. If you're drafting Rakdos and you choose to prioritize the best three-mana creatures, like <a class="nodec" keyName="name" keyValue="Dead_Reveler" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Dead Reveler</a>s and <a class="nodec" keyName="name" keyValue="Splatter_Thug" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Splatter Thug</a>, you run the risk of drafting a deck that doesn't have very many one- and two-mana creatures in it. And if you take a <a class="nodec" keyName="name" keyValue="Frostburn_Weird" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Frostburn Weird</a> over a <a class="nodec" keyName="name" keyValue="Teleportal" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Teleportal</a> because you need another good creature, you may very well end up in situations where you're cursing the fact that you just don't have any way to break through your opponent's defenses (possibly ignoring the fact that you never would have lived to see that game state occur had it not been for the impact of your <a class="nodec" keyName="name" keyValue="Frostburn_Weird" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Frostburn Weird</a>). </p>
<table align="center" cellpadding="15">
  <tr>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Dead_Reveler" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Dead Reveler&amp;options=" alt="Dead Reveler" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Frostburn_Weird" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Frostburn Weird&amp;options=" alt="Frostburn Weird" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
  </tr>
</table>
<br clear="all" />
<p>However, as long as you can identify why (and when) a card should be good, you will be able to consistently make good (if not the very best) choices while you're drafting.</p>
<div style="margin-left:15px;">
  <ul>
    <li>
      <b>Versatile</b>
    </li>
  </ul>
</div>
<p>Cards that perform well in a variety of different situations tend to be very desirable.</p>
<p>
  <a class="nodec" keyName="name" keyValue="Stab_Wound" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Stab Wound</a>, <a class="nodec" keyName="name" keyValue="New_Prahv_Guildmage" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">New Prahv Guildmage</a>, <a class="nodec" keyName="name" keyValue="Dreg_Mangler" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Dreg Mangler</a>, <a class="nodec" keyName="name" keyValue="Annihilating_Fire" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Annihilating Fire</a>, and <a class="nodec" keyName="name" keyValue="Arrest" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Arrest</a> are all great cards that excel both early and late in the game. And while it might not be on quite the level of the aforementioned cards, <a class="nodec" keyName="name" keyValue="Frostburn_Weird" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Frostburn Weird</a> also fits this bill very nicely because of its ability to stand up to creatures that cost as much as four or five mana AND act as a potent offensive threat when necessary. </p>
<table align="center" cellpadding="15">
  <tr>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Stab_Wound" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Stab Wound&amp;options=" alt="Stab Wound" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Dreg_Mangler" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Dreg Mangler&amp;options=" alt="Dreg Mangler" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
  </tr>
</table>
<br clear="all" />
<p>However, you should be careful not to overvalue these cards too much when you're actually playing your games.</p>
<p> If you don't have any other way to stop your opponent's <a class="nodec" keyName="name" keyValue="Rakdos_Cackler" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Rakdos Cackler</a> for the foreseeable future it's perfectly all right to use an <a class="nodec" keyName="name" keyValue="Annihilating_Fire" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Annihilating Fire</a> to kill it. If taking out your opponent's <a class="nodec" keyName="name" keyValue="Rakdos_Cackler" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Rakdos Cackler</a> is going to save you 6 (or more) life over the span of the game, and you have a way to eventually assert control, then that play can prove very fruitful for you. </p>
<div style="margin-left:15px;">
  <ul>
    <li>
      <b>Situational, but extremely potent under the right circumstances</b>
    </li>
  </ul>
</div>
<p> Finishers like <a class="nodec" keyName="name" keyValue="Teleportal" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Teleportal</a>, explicitly narrow answers like <a class="nodec" keyName="name" keyValue="Sundering_Growth" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Sundering Growth</a>, expensive threats like <a class="nodec" keyName="name" keyValue="Chaos_Imps" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Chaos Imps</a> or <a class="nodec" keyName="name" keyValue="Horncaller[s_Chant" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Horncaller's Chant</a>,and heck... in extremely rare circumstances, even life gain cards such as <a class="nodec" keyName="name" keyValue="Heroes[_Reunion" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Heroes' Reunion</a>... all have the ability to do great things for you, but only under the right circumstances. </p>
<table align="center" cellpadding="15">
  <tr>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Sundering_Growth" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Sundering Growth&amp;options=" alt="Sundering Growth" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Chaos_Imps" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Chaos Imps&amp;options=" alt="Chaos Imps" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
  </tr>
</table>
<br clear="all" />
<p>And if you clog your deck with too many situational cards, you're inevitably going to end up dying with a lot of spells in your hand.</p>
<p>When you're drafting, you should always make it a point to limit the number of situational cards in your deck—both to minimize the potential liability that comes along with playing cards that won't always do much (or anything) for you, and to maximize their effectiveness when they do become relevant.</p>
<p> So while <a class="nodec" keyName="name" keyValue="Teleportal" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Teleportal</a> is obviously a very strong card, you probably don't want to play a deck with three <a class="nodec" keyName="name" keyValue="Teleportal" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Teleportal</a>s and two <a class="nodec" keyName="name" keyValue="Blustersquall" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Blustersquall</a>s lest you get blown out any time your opponent draws a couple of removal spells or you simply don't draw very many creatures (a very likely proposition when you're playing a deck with five cards that do little but clear a path for your creatures...). </p>
<table align="center" cellpadding="15">
  <tr>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Teleportal" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Teleportal&amp;options=" alt="Teleportal" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Blustersquall" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Blustersquall&amp;options=" alt="Blustersquall" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
  </tr>
</table>
<br clear="all" />
<p> And while <a class="nodec" keyName="name" keyValue="Sundering_Growth" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Sundering Growth</a> is a very strong sideboard option, artifacts and enchantments just aren't plentiful enough in <i>Return to Ravnica</i> Limited for you to justify spending an early pick, or a main deck slot, on this extremely situational answer. </p>
<p>Then we get to the expensive cards.</p>
<p> From one perspective, <a class="nodec" keyName="name" keyValue="Explosive_Impact" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Explosive Impact</a> is an incredibly versatile card that can be splashed in almost any deck. It can be used to kill almost any creature in the format (including many creatures that have been enchanted with Auras like <a class="nodec" keyName="name" keyValue="Pursuit_of_Flight" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Pursuit of Flight</a> or <a class="nodec" keyName="name" keyValue="Knightly_Valor" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Knightly Valor</a>) AND it can be used as a finisher, dealing that last chunk of damage that you need to finish off your opponent. </p>
<div class=" revealer magic-card-center">
  <div>
    <a keyName="name" keyValue="Explosive_Impact" onclick="autoCardWindow(this)" href="javascript:void()">
      <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Explosive Impact&amp;options=" alt="Explosive Impact" class="magic-card" />
    </a>
  </div>
</div>
<br />
<p>But you can't just ignore a card's cost.</p>
<p> Regardless of their abstract quality, six and seven mana spells are inevitably narrow because of their prohibitive costs. Yes, <a class="nodec" keyName="name" keyValue="Isperia,_Supreme_Judge" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Isperia, Supreme Judge</a> is a game-dominating mythic rare that's tough to kill, makes attacking a nightmarish proposition for your foe, and is a fast clock all by itself. </p>
<div class=" revealer magic-card-center">
  <div>
    <a keyName="name" keyValue="Isperia,_Supreme_Judge" onclick="autoCardWindow(this)" href="javascript:void()">
      <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Isperia, Supreme Judge&amp;options=" alt="Isperia, Supreme Judge" class="magic-card" />
    </a>
  </div>
</div>
<br />
<p>But it still costs six mana.</p>
<p> The very fact that <a class="nodec" keyName="name" keyValue="Isperia,_Supreme_Judge" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Isperia, Supreme Judge</a> costs six mana should lead you to devalue (or completely ignore) <a class="nodec" keyName="name" keyValue="Skyline_Predator" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Skyline Predator</a>s and other expensive spells since you can really only afford to play two, or maybe three, six+-mana cards in most decks. (There are, of course, exceptions to this rule, but most of them require you to be playing a deck with eighteen lands in a relatively slow format.) </p>
<div style="margin-left:15px;">
  <ul>
    <li>
      <b>Synergistic</b>
    </li>
  </ul>
</div>
<p> Some cards, such as <a class="nodec" keyName="name" keyValue="Ethereal_Armor" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Ethereal Armor</a>, combo very well with additional copies of themselves or with other similar cards. No, the first <a class="nodec" keyName="name" keyValue="Ethereal_Armor" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Ethereal Armor</a> in your deck isn't going to do much—but each subsequent copy you get will make them all dramatically more effective. By a similar notion, the more token generators and populate cards you grab, the better each subsequent token generator and populate card you take will be. </p>
<table align="center" cellpadding="15">
  <tr>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Ethereal_Armor" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Ethereal Armor&amp;options=" alt="Ethereal Armor" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Eyes_in_the_Skies" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Eyes in the Skies&amp;options=" alt="Eyes in the Skies" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
  </tr>
</table>
<br clear="all" />
<p>Making sure your cards play well together tends to be a lot more important than making sure you have the best collection of abstractly powerful cards that you could possibly get your hands on.</p>
<p> So if you're drafting an aggressive Rakdos deck and you're consistently picking up cheap aggressive creatures, removal spells, and ways to punch through additional damage like <a class="nodec" keyName="name" keyValue="Traitorous_Instinct" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Traitorous Instinct</a>, then your deck is probably going to end up being pretty good. However, an extremely expensive (but nonetheless powerful) card like <a class="nodec" keyName="name" keyValue="Utvara_Hellkite" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Utvara Hellkite</a> is just going to be a distraction and a liability for you... </p>
<table align="center" cellpadding="15">
  <tr>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Traitorous_Instinct" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Traitorous Instinct&amp;options=" alt="Traitorous Instinct" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
    <td align="center">
      <div class=" revealer magic-card-center">
        <div>
          <a keyName="name" keyValue="Utvara_Hellkite" onclick="autoCardWindow(this)" href="javascript:void()">
            <img border="0" src="http://gatherer.wizards.com/Handlers/Image.ashx?size=small&amp;type=card&amp;name=Utvara Hellkite&amp;options=" alt="Utvara Hellkite" class="magic-card" />
          </a>
        </div>
      </div>
    </td>
  </tr>
</table>
<br clear="all" />
<p> ...but if you're drafting a control deck full of <a class="nodec" keyName="name" keyValue="Axebane_Guardian" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Axebane Guardian</a>s and other defenders, then <a class="nodec" keyName="name" keyValue="Utvara_Hellkite" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Utvara Hellkite</a> will become an extremely desirable finisher for you, while <a class="nodec" keyName="name" keyValue="Traitorous_Instinct" onmouseover="OpenTip(event, this)" onclick="autoCardWindow(this)" href="javascript:void()">Traitorous Instinct</a> should be pretty much unplayable since you'll be winning with big swings, not small chunks of damage. </p>
<p>
  <b>Understanding what your deck needs</b>
</p>
<p>For starters, you need sixteen to eighteen lands of various colors so you can actually cast your spells in a timely manner. Then you need somewhere in the range of twelve to eighteen creatures so you can regularly establish a board presence and eventually kill your opponents. You need at least two-thirds of your spells to cost four or less. And you want to snag as much good removal as you possibly can so you can regularly deal with your opponent's best cards.</p>
<p> Beyond those rules of thumb, much of the information that is going to be relevant for you is deck- and/or format-specific. After all, simply knowing that the speed of <i>Return to Ravnica</i> booster drafts makes it difficult for players to draft dedicated control decks won't do much to help you once <i>Gatecrash</i> rolls in. </p>
<p> In order to learn more about what the decks of <i>Return to Ravnica</i> should prioritize, check out these articles: </p>
<blockquote>
  <ul>
    <li>The Decks of <i>Return to Ravnica</i>, Part 1: <a href="http://www.wizards.com/magic/magazine/article.aspx?x=mtg/daily/li/218">Izzet and Golgari</a> (note that much of the Golgari information in this article is outdated)</li>
    <li> The Decks of <i>Return to Ravnica</i>, Part 2: <a href="http://www.wizards.com/magic/magazine/article.aspx?x=mtg/daily/li/219">Aggressive White Decks</a> (including Boros and Orzhov)</li>
    <li>The Decks of <i>Return to Ravnica</i>, Part 3: <a href="http://www.wizards.com/magic/magazine/article.aspx?x=mtg/daily/li/220">Rakdos and Dedicated Control</a></li>
    <li>
      <a href="http://www.wizards.com/magic/magazine/article.aspx?x=mtg/daily/li/222">Speed and the Gs</a>: An Updated Guide to Golgari and Gruul</li>
  </ul>
</blockquote>
<p>
  <b>Confidently (and strategically) decide when to commit to your colors</b>
</p>
<p>Once you know what all of the cards in the set do and which cards fit best in which decks, and you have a good sense of how all of the decks in the format work, you're going to have a ton of options at your disposal at pretty much all times...</p>
<p>But how, and when, do you choose?</p>
<p>That's a question that even the top players in the world constantly struggle with.</p>
<p> Two weeks ago, I laid out my <a href="http://www.wizards.com/magic/magazine/article.aspx?x=mtg/daily/li/221"><i>Return to Ravnica</i> Booster Draft Roadmap</a> and, hopefully, that can be of some help to you. </p>
<p>But keep in mind that no matter how many drafts you do, there are always going to be more questions for you to ask.</p>
<p>And you're just going to get better and better at asking the right ones.</p>
<!-- FNM Start -->
<div style="width:620px; position:relative;">
  <style type="text/css"> .eslmini-main { height: 32px; } .eslmini-textinput{ background: none repeat scroll 0 0 transparent; border: 0 none; color: #D1D1D1; float: left; font-family: Arial; font-size: 13px; font-weight: bold; height: 32px; line-height: 30px; width: 166px; } .eslmini-button{cursor: pointer;float: left;height: 32px;} .eslmini-inputholder{ background-image: url("http://www.wizards.com/mtg/images/widgets/storelocator/SmallStoreLocator_Background_SinglePixel.png"); background-repeat: repeat; float: left; height: 32px; margin: 0; } .eslmini-buttonholder{ background: transparent url('http://www.wizards.com/mtg/images/widgets/storelocator/SmallStoreLocatorGOButton_Static.png'); height: 32px; width: 42px; float:left; } .eslmini-holder{ position:absolute; top:430px; left:31px; } </style>
  <script language="javascript" type="text/javascript"> function AddSearchTerm() { eventString = 'FM'; promoString = ''; var wizardsModuleWidgetSearchTerm=document.getElementById('txtWizardsModuleWidgetSearch'); if (wizardsModuleWidgetSearchTerm.value=='') { wizardsModuleWidgetSearchTerm.focus(); return false; } var wizardsModuleWidgetSearchURLEndpoint='http://locator.wizards.com/deeplink/widget.aspx?p='; wizardsModuleWidgetSearchURLEndpoint += encodeURIComponent(wizardsModuleWidgetSearchTerm.value) + '&amp;et=' + eventString + ',&amp;pm=' + promoString + ',&amp;a=search&amp;brand=magic'; window.parent.location=wizardsModuleWidgetSearchURLEndpoint; } function InputTextClicked(){ document.getElementById('txtWizardsModuleWidgetSearch').style.color ="#000000"; document.getElementById('txtWizardsModuleWidgetSearch').value=""; } function searchKeyPress(e) { if (e.keyCode == 13) { AddSearchTerm(); return false; } } </script>
  <div class="eslmini-holder">
    <div class="eslmini-main">
      <img src="http://www.wizards.com/mtg/images/widgets/storelocator/SmallStoreLocator_Background_Left.png" style="float:left;" />
      <div class="eslmini-inputholder">
        <input id="txtWizardsModuleWidgetSearch" onkeypress="return searchKeyPress(event);" onfocus="javascript: InputTextClicked();" type="text" value="Location" class="eslmini-textinput" />
      </div>
      <div id="eslmini-buttonholder" class="eslmini-buttonholder">
        <img class="eslmini-button" src="http://www.wizards.com/mtg/images/widgets/storelocator/EN_SmallStoreLocatorGOText.png" onMouseOver=" document.getElementById('eslmini-buttonholder').style.backgroundImage = 'url(http://www.wizards.com/mtg/images/widgets/storelocator/SmallStoreLocatorGOButton_Active.png)'; " onMouseOut=" document.getElementById('eslmini-buttonholder').style.backgroundImage = 'url(http://www.wizards.com/mtg/images/widgets/storelocator/SmallStoreLocatorGOButton_static.png)'; " onClick="javascript: AddSearchTerm();" />
      </div>
    </div>
  </div>
  <div style="float: left; width: 620px;">
    <img src="http://media.wizards.com/images/magic/daily/footers/EN_RTR_ArticleFooter_FNM_Top.jpg" style="float:left;" />
  </div>
  <a href="http://www.wizards.com/magic/tcg/productarticle.aspx?x=mtg/tcg/returntoravnica/productinfo">
    <img src="http://media.wizards.com/images/magic/daily/footers/EN_RTR_ArticleFooter_FNM_Button01_Static.jpg" style="float:left;" onmouseover="this.src='http://media.wizards.com/images/magic/daily/footers/EN_RTR_ArticleFooter_FNM_Button01_Active.jpg';" onmouseout="this.src='http://media.wizards.com/images/magic/daily/footers/EN_RTR_ArticleFooter_FNM_Button01_Static.jpg';" />
  </a>
  <a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?action=advanced&amp;set=[%22Return%20to%20Ravnica%22]">
    <img src="http://media.wizards.com/images/magic/daily/footers/EN_RTR_ArticleFooter_FNM_Button02_Static.jpg" style="float:left;" onmouseover="this.src='http://media.wizards.com/images/magic/daily/footers/EN_RTR_ArticleFooter_FNM_Button02_Active.jpg';" onmouseout="this.src='http://media.wizards.com/images/magic/daily/footers/EN_RTR_ArticleFooter_FNM_Button02_Static.jpg';" />
  </a>
</div>
<br />
        </div>
        <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_footerPanel" class="article-footer">
            <ul class="footer-links">
                <li><a href="http://community.wizards.com/go/thread/view/75842/29513323/11282012_LI:_Reasons" title="Click to visit the message boards." target="_blank"><img src="/Magic/Assets/icon_discuss.gif" alt="" /><span class="text">Discuss on the message boards</span></a></li>
                <li id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_emailFooter" class="email"><a href="/company/emailtoauthor.asp?author=Steve Sadin&amp;headline=Reasons" target="_blank" onclick="window.open('/company/emailtoauthor.asp?author=Steve Sadin&amp;headline=Reasons', 'authorEmailWindow', 'left=150, top=50, screenX=200, screenY=100, resizable=yes, scrollbars=no, toolbar=no, width=455, height=500'); return false" title="Click to send email to the author."><img alt="Email the Author" src="/Magic/Assets/icon_respond.gif" /> <span class="text">Respond via email</span></a></li>
                <li><a href="/Magic/Magazine/Archive.aspx?tag=limitedinformation&description=Limited Information" title="Click to visit the 'Limited Information' Archive."><img src="/mtg/images/magazine/archive/LimitedInformation_small.jpg" alt="" /><span class="text">Limited InformationArchive </span></a></li>
            </ul>
        </div>
    
</div>
    
</div>
<script type="text/javascript">

    if (/Firefox[\/\s](\d+\.\d+)/.test(navigator.userAgent)) {
        $$('div.center-content')[0].style.backgroundAttachment = "scroll";

    }  
</script>
<div class="article-bottom">
</div>

     
    </div><!-- /content --> 

		</div><!-- /centerColumn -->
		
		<div id="ctl00_ctl00_ContentPlaceHolder1_SideAdSpace">
	
	        <div id="rightColumn">
               <div class="sideAd">
                    <div adrotator="true">
  <span />
  <span />
  <span />
  <span />
  <span />
  <span />
  <div style="display:none;" ad="true">
    <p>
      <a target="_blank" href="http://www.wizards.com/Magic/TCG/Events.aspx?x=mtgcom/events/ptq">
        <img src="http://media.wizards.com/images/magic/daily/ads/20121116_DGMPTQ_160.png" />
      </a>
    </p>
  </div>
  <span />
  <span />
  <span />
  <span />
  <span />
  <span />
  <span />
  <span />
  <span />
  <span />
  <span />
</div>
                </div>
                
		        

	        </div><!-- /rightColumn -->
	    
</div>
		
	</div><!-- /wrapper -->
	
	


<div id="leftColumn">
    <div id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_leftNav">
        <div id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_tier1">
            <ul id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_multiverse" class="tier1 multiverse hidden">
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_planeswalkers" class="parent">
                <span></span>
                    <a href="../Multiverse/planeswalkers.aspx" class="planeswalkers" title="Planeswalkers">
                        Planeswalkers
                    </a>
                    <ul>
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/ajani" title="Ajani Goldmane">Ajani Goldmane
                            </a>
                        </li>
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/chandra" title="Chandra Nalaar">Chandra Nalaar
                            </a>
                        </li>
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/elspeth" title="Elspeth Tirel">Elspeth Tirel
                            </a>
                        </li>
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/garruk" title="Garruk Wildspeaker">Garruk Wildspeaker
                            </a>
                        </li> 
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/gideon" title="Gideon Jura">Gideon Jura
                            </a>
                        </li>
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/jace" title="Jace Beleren">Jace Beleren
                            </a>
                        </li>
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/karn" title="Karn">Karn
                            </a>
                        </li>
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/koth" title="Koth the Hammer">Koth of the Hammer
                            </a>
                        </li>
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/liliana" title="Liliana Vess">Liliana Vess
                            </a>
                        </li>           
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/nicolbolas" title="Nicol">Nicol Bolas
                            </a>
                        </li>                     
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/nissa" title="Nissa Revane">Nissa Revane
                            </a>
                        </li>                            
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/sarkhan" title="Sarkhan Vol">Sarkhan Vol
                            </a>
                        </li>
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/sorin" title="Sorin Markov">Sorin Markov
                            </a>
                        </li> 
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/tamiyo" title="Tamiyo">Tamiyo
                            </a>
                        </li>
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/tezzeret" title="Tezzeret">Tezzeret
                            </a>
                        </li>           
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/tibalt" title="Tibalt">Tibalt
                            </a>
                        </li>                                                                                       
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/venser" title="Venser">Venser
                            </a>
                        </li>                    
                        <li>
                            <a href="../Multiverse/planeswalkers.aspx?x=mtg/multiverse/planeswalkers/vraska" title="Vraska">Vraska
                            </a>
                        </li>                    
                
                                   
                                        
                    </ul>
                </li>
            <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_colors" class="parent">
            <span></span>
                <a href="../Multiverse/Colors.aspx" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A14" title="The Five Colors" class="colors">
                    The Five Colors
                </a>
                <ul>
                    <li>
                        <a href="../Multiverse/Colors.aspx?color=white" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A15" title="White">
                            White
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Colors.aspx?color=blue" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A16" title="Blue">
                            Blue
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Colors.aspx?color=black" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A17" title="Black">
                            Black
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Colors.aspx?color=red" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A18" title="Red">
                            Red
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Colors.aspx?color=green" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A19" title="Green">
                            Green
                        </a>
                    </li>
                </ul>
            </li>
            <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_planes" class="parent">
            <span></span>
                <a href="../Multiverse/Planes.aspx" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A20" class="planes" title="Planes of Existence">
                    Planes of Existence
                </a>
                <ul>
                    <li>
                        <a href="../Multiverse/Planes.aspx?plane=innistrad" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A21" title="Innistrad">
                            Innistrad
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Planes.aspx?plane=mirrodin" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A22" title="Mirrodin">
                            Mirrodin
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Planes.aspx?plane=zendikar" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A23" title="Zendikar">
                            Zendikar
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Planes.aspx?plane=alara" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A24" title="Alara">
                            Alara
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Planes.aspx?plane=lorwyn_shadowmoor" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A25" title="Lorwyn/Shadowmoor">
                            Lorwyn/Shadowmoor
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Planes.aspx?plane=dominaria" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A26" title="Dominaria">
                            Dominaria
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Planes.aspx?plane=ravnica" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A27" title="Ravnica">
                            Ravnica
                        </a>
                    </li>
                    <li>
                        <a href="../Multiverse/Planes.aspx?plane=kamigawa" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A28" title="Kamigawa">
                            Kamigawa
                        </a>
                    </li>
                </ul>
            </li>
        </ul>
            <ul id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_tcg" class="tier1 tcg hidden">
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_newToMagic" class="parent">
                <span></span>
                    <a href="../TCG/NewtoMagic.aspx" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A29" class="new" title="New to Magic">
                        New to Magic
                    </a>
                    <ul>
                        <li>
                            <a href="../TCG/NewtoMagic.aspx?x=mtg/tcg/newtomagic/whatismagic" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A30" title="What is Magic?">
                                What is Magic?
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/NewtoMagic.aspx?x=mtg/tcg/newtomagic/gamebasics" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A31" title="Basics of the Game">
                                Basics of the Game
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/NewtoMagic.aspx?x=mtg/tcg/newtomagic/learntoplay" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A32" title="Learn to Play">
                                Learn to Play
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/NewtoMagic.aspx?x=mtg/tcg/newtomagic/gettingstarted" title="Getting Started">
                                Getting Started
                            </a>
                        </li>
                    </ul>
                </li>
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_products" class="parent">
                <span></span>
                    <a href="../TCG/Products.aspx" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A1" class="products" title="Products">
                        Products
                    </a>
                                    <ul>
                    <li>
                        <a href="../tcg/products.aspx?x=mtg/tcg/products/returntoravnica" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A5" title="Return to Ravnica">
                            Return to Ravnica
                        </a>
                        <ul>

                            <li>
                                <a href="../tcg/article.aspx?x=mtg/tcg/returntoravnica/cig" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A3" title="Card Image Gallery">
                                    Card Image Gallery
                                </a>
                            </li>

                            

                            <li>
                                <a href="../tcg/productarticle.aspx?x=mtg/tcg/returntoravnica/productinfo" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A12" title="Product Information">
                                    Product Information
                                </a>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <a href="../tcg/products.aspx?x=mtg/tcg/products/magic2013" title="Magic 2013 Core Set">
                            Magic 2013 Core Set
                        </a>
                    </li>
                    <li>
                        <a href="../tcg/productarticle.aspx?x=mtg/tcg/izzetvsgolgari/productinfo" title="Izzet vs. Golgari">
                            Izzet vs. Golgari
                        </a>
                    </li>
                    

                    <li>
                        <a href="../tcg/productarticle.aspx?x=mtg/tcg/ftvrealms/productinfo" title="From the Vault: Realms">
                            From the Vault: Realms
                        </a>
                    </li>


                    <li>
                        <a href="../tcg/products.aspx?x=mtg/tcg/products/avacynrestored" title="Avacyn Restored">
                            Avacyn Restored
                        </a>
                    </li>
                    <li>
                        <a href="../tcg/Products.aspx?x=mtg/tcg/products/darkascension" title="Dark Ascension">
                            Dark Ascension
                        </a>
                    </li>
                    <li>
                        <a href="../tcg/Products.aspx?x=mtg/tcg/products/innistrad" title="Innistrad">
                            Innistrad
                        </a>
                    </li>                    
                    
                    

  

                    <li>
                        <a href="../TCG/Article.aspx?x=mtg/tcg/products/allproducts" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A8" title="All Magic Card Sets">
                            All Magic Card Sets
                        </a>
                    </li>
                </ul>
            </li>
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_tournaments" class="parent">
                <span></span>
                    <a href="../TCG/Events.aspx" class="tournaments" title="Tournaments &amp; Events">
                        Tournaments & Events
                    </a>
                    <ul>
                        <li>
                            <a href="../planeswalkerpoints" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A4" title="Planeswalker Points">
                                Planeswalker Points
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Events.aspx?x=mtg/tcg/events/newtotournaments" title="New to Tournaments?">
                                New to Tournaments?
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Events.aspx?x=mtg/tcg/events/wpn" title="Wizards Play Network">
                                Wizards Play Network
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Events.aspx?x=events/magic/fnm" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A9" title="Friday Night Magic">
                                Friday Night Magic
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Events.aspx?x=mtg/tcg/events/newsetcelebration" title="New Set Celebrations">
                                New Set Celebrations
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Events.aspx?x=mtg/tcg/events/proplay" title="Pro Play">
                                Pro Play
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Events.aspx?x=mtg/tcg/events/schedule" title="Schedule">
                                Schedule
                            </a>
                        </li>
                        <li>
                            <a href="http://www.wizards.com/default.asp?x=dci/welcome" title="DCI Ratings and Rankings">
                                DCI Ratings and Rankings
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Events.aspx?x=judge/welcome" title="Judge Center">
                                Judge Center
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Events.aspx?x=mtg/tcg/events/conventions" title="Conventions">
                                Conventions
                            </a>
                        </li>
                        <li>
                            <a href="Events.aspx" title="Event Coverage">
                                Event Coverage
                            </a>
                        </li>
                    </ul>
                </li>
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_resources" class="parent">
                <span></span>
                    <a href="../TCG/Resources.aspx" class="resources" title="Resources">
                        Resources
                    </a>
                    <ul>
                        <li>
                            <a href="../TCG/Resources.aspx?x=magic/rules" title="Rules">
                                Rules
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Resources.aspx?x=magic/rules/faqs" title="Card Set FAQs">
                                Card Set FAQs
                            </a>
                        </li>
                        
                        <li>
                            <a href="../TCG/Resources.aspx?x=mtg/tcg/resources/formats" title="Formats">
                                Formats
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Resources.aspx?x=judge/resources/banned" title="Banned/Restricted Lists">
                                Banned/Restricted Lists
                            </a>
                        </li>
                        
                        <li>
                            <a href="../TCG/Resources.aspx?x=mtg/tcg/resources/tipsandtricks" title="Tips and Tricks">
                                Tips and Tricks
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Resources.aspx?x=mtg/tcg/resources/combos" title="Combos">
                                Combos
                            </a>
                        </li>
                        <li>
                            <a href="../TCG/Resources.aspx?x=mtg/tcg/resources/boosterdraftsimulator" title="Booster Draft Simulator">
                                Booster Draft Simulator
                            </a>
                        </li> 
                    </ul>
                </li>
            </ul>
            <ul id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_magazine" class="tier1 magazine">
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_columns" class="parent active">
                <span></span>
                    <a href="/Magic/Magazine/Archive.aspx?tag=Column" class="columns" title="Columns">
                        Columns
                    </a>
                    <ul>
                        <li>
                            <a href="Archive.aspx?tag=Making Magic&description=Making Magic" title="Making Magic">
                                Making Magic
                            </a>
                        </li>
                        <li>
                            <a href="Archive.aspx?tag=FromtheLab&description=House of Cards" title="From the Lab">
                                From the Lab
                            </a>
                        </li>                   
                        <li>
                            <a href="Archive.aspx?tag=Serious Fun&description=Serious Fun" title="Serious Fun">
                                Serious Fun
                            </a>
                        </li>
                        <li>
                            <a href="Archive.aspx?tag=ReConstructed&description=ReConstructed" title="ReConstructed">
                                ReConstructed
                            </a>
                        </li>
                        <li>
                            <a href="Archive.aspx?tag=Limited Information&description=Limited Information" title="Limited Information">
                                Limited Information
                            </a>
                        </li>
                        <li>
                            <a href="Archive.aspx?tag=Uncharted Realms&description=Uncharted Realms" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_A10" title="Uncharted Realms">
                                Uncharted Realms
                            </a>
                        </li>
                        <li>
                            <a href="Archive.aspx?tag=TopDecks&description=Swimming With Sharks" title="Top Decks">
                                Top Decks
                            </a>
                        </li>
                        <li>
                            <a href="Archive.aspx?tag=Perilous Research&description=Perilous Research" title="Perilous Research">
                                Perilous Research
                            </a>
                        </li>
                        <li>
                            <a href="Archive.aspx?tag=Latest Developments&description=Latest Developments" title="Latest Developments">
                                Latest Developments
                            </a>
                        </li>
                        <li>
                            <a href="Archive.aspx?tag=The Week That Was&description=The Week That Was" title="The Week That Was">
                                The Week That Was
                            </a>
                        </li>
					    <li>
						    <hr style="width:85%" />
					    </li>
                        <li>
                            <a href="Archive.aspx?tag=SavortheFlavor&description=Taste the Magic" title="Savor the Flavor">
                                Savor the Flavor
                            </a>
                        </li>
                         <li>
                            <a href="Archive.aspx?tag=Building on a Budget&description=Building on a Budget" title="Building on a Budget">
                                Building on a Budget
                            </a>
                        </li>
                    </ul>
                </li>
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_features">
                    <a href="Features.aspx?tag=Features&description=feature" class="features" title="Features">
                        Features
                    </a>
                </li>
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_news">
                    <a href="News.aspx?tag=News" class="news" title="News">
                        News
                    </a>
                </li>
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_event" class="parent">
                <span></span>
                    <a href="Events.aspx" class="event" title="Event Coverage">
                        Event Coverage
                    </a>
                    <ul>
                        <li>
                            <a href="Events.aspx?x=mtg/eventcoverage/main" title="Archive">
                                Archive
                            </a>
                        </li>
                        <li>
                            <a href="Events.aspx?x=mtg/daily/eventcoverage/decklists" title="Decklists">
                                Decklists
                            </a>
                        </li>
                        <li>
                            <a href="Events.aspx?x=mtgevent/webcast/home" title="Webcast">
                                Webcast
                            </a>
                        </li>
                        <li>
                            <a href="HallOfFame.aspx?x=mtgevent/hof/welcome" title="Pro Tour Hall of Fame">
                                Pro Tour Hall of Fame
                            </a>
                            <ul>
                                <li>
                                    <a href="HallOfFame.aspx?x=mtgevent/hof/rules" title="Rules">
                                        Rules
                                    </a>
                                </li>
                                <li>
                                    <a href="HallOfFame.aspx?x=mtgevent/hof/profiles" title="Profiles">
                                        Profiles
                                    </a>
                                </li>
                                <li>
                                    <a href="HallOfFame.aspx?x=mtgevent/hof/features" title="Features">
                                        Features
                                    </a>
                                </li>
                                <li>
                                    <a href="HallOfFame.aspx?x=mtgevent/hof/multimedia" title="Multimedia">
                                        Multimedia
                                    </a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a href="Events.aspx?x=protour/standings/ppc201314" title="Webcast">
                                2013-14 Pro Players Club Standings
                            </a>
                        </li>
                        <li>
                            <a href="Events.aspx?x=mtg/daily/eventcoverage/statistics" title="Webcast">
                                Statistics
                            </a>
                        </li>
                    </ul>
                </li>
                
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_downloads" class="parent">
                <span></span>
                    <a href="Downloads.aspx" class="downloads" title="Downloads">
                        Downloads
                    </a>
                    <ul>
                        <li>
                            <a href="Downloads.aspx?x=mtg/daily/downloads/wallpapers" title="Wallpapers">
                                Wallpapers
                            </a>
                        </li>
                        <li>
                            <a href="Downloads.aspx?tag=podcast&description=Podcast" title="Podcasts">
                                Podcasts
                            </a>
                        </li>
                        <li>
                            <a href="Downloads.aspx?x=mtgevent/webcast/archive" title="Video">
                                Video
                            </a>
                        </li>
                        <li>
                            <a href="../tcg/productarticle.aspx?x=mtg/tcg/magicthegatheringtoolbox/productinfo" title="MTG Toolbox">
                                MTG Toolbox
                            </a>
                        </li>
                    </ul>
                </li>
            </ul>
            <ul id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_dg" class="tier1 dg hidden">
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_mol" class="parent">
                <span></span>
                    <a href="../Digital/MagicOnline.aspx" title="Magic Online" class="mol">
                        Magic Online
                    </a>
                    <ul>
                        <li>
                            <a href="../Digital/MagicOnline.aspx?x=mtg/digital/magiconline/whatis" title="What is it?">
                                What is it?
                            </a>
                        </li>
                        <li>
                            <a href="../Digital/MagicOnline.aspx?x=mtg/digital/magiconline/howdoi" title="How do I use it?">
                                How do I use it?
                            </a>
                        </li>
                        <li>
                            <a href="../Digital/MagicOnline.aspx?x=mtg/digital/magiconline/whatshappening" title="What's Happening?">
                                What's Happening?
                            </a>
                        </li>
                        <li>
                            <a href="../Digital/MagicOnline.aspx?x=mtg/digital/magiconline/calendar" title="Calendar">
                                Calendar
                            </a>
                        </li>
                    </ul>
                </li>
            
                <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_dotp" class="parent">
                <span></span>
                    <a href="../Digital/DuelsOfThePlaneswalkers.aspx" title="Magic Online" class="dotp">
                        Duels of the Planeswalkers
                    </a>
                    <ul>
                        <li>
                            <a href="../Digital/DuelsOfThePlaneswalkers.aspx?x=mtg/digital/d13/whatis" title="What is Duels of the Planeswalkers?">
                                What is Duels of the Planeswalkers?
                            </a>
                        </li>
                        <li>
                            <a href="../Digital/DuelsOfThePlaneswalkers.aspx?x=mtg/digital/d13/faq" title="FAQ">
                                FAQ
                            </a>
                        </li>
                        <li>
                            <a href="../Digital/DuelsOfThePlaneswalkers.aspx?x=mtg/digital/dotp/links" title="Articles">
                                Articles
                            </a>
                        </li>
                    </ul>
                </li>
            
            <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_tactics">
                <a href="../tcg/productarticle.aspx?x=mtg/digital/mtgtactics/productinfo" title="Tactics" class="tactics">
                    Tactics
                </a>
            </li>
             
            
        </ul>
            
        </div>
        
        <ul class="tier2">
            
            
            
            <li style="padding-top: 18px;">
                <a href="../PlaneswalkerPoints" target="_blank" title="Click to visit the Planeswalker Points page" class="planeswalkerpoints">
                    <img class="static" src="/handlers/ResourceService.ashx?type=global&id=MagicChrome&key=ln_pwpoints_btn" 
                        alt="Planeswalker Points" />
                    <img src="/handlers/ResourceService.ashx?type=global&id=MagicChrome&key=ln_pwpoints_btn_ro" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_pwpHoverButton" class="active" style="display: none;" alt="Planeswalker Points" />
                </a>
            </li>
            
            
            <li>
                <a href="http://gatherer.wizards.com/" target="_blank" 
                    title="Click to visit the Gatherer Magic Card Database." class="gatherer">
                    <img src="/handlers/ResourceService.ashx?type=global&id=MagicChrome&key=ln_gatherer" 
                        alt="Gatherer: The Magic Card Database" />
                </a>
                
            </li>
            
            <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_CommunityButton">
                <a href="http://forums.gleemax.com/forumdisplay.php?f=131" target="_blank" 
                    title="Click to visit the Forums." class="forums">
                    <img src="/handlers/ResourceService.ashx?type=global&id=MagicChrome&key=ln_forums" 
                        alt="Forums: Connect with the Magic Community" />
                </a>
            </li>
            <li class="locator">
                <div id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_MagicLocator">
	
                    <em>Magic Locator</em>
                    <fieldset>
                        <label><input value="StoresRadio" name="ctl00$ctl00$ContentPlaceHolder1$MagicLeftNavigation$type" type="radio" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_StoresRadio" class="radio" checked="checked" />Stores</label><br /> 
                        <label><input value="EventsRadio" name="ctl00$ctl00$ContentPlaceHolder1$MagicLeftNavigation$type" type="radio" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_EventsRadio" class="radio" />Events</label><br />
                        <input name="ctl00$ctl00$ContentPlaceHolder1$MagicLeftNavigation$Address" type="text" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Address" class="textbox" onfocus="FocusMagicLocatorTextBox(event, this);" onblur="UnfocusMagicLocatorTextBox(event, this);" value="City" />
                        <input type="submit" name="ctl00$ctl00$ContentPlaceHolder1$MagicLeftNavigation$Search" value="Search" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Search" class="submit" />
                    </fieldset>
                
</div>
            </li>
            
            

            
            
        </ul>
    </div><!-- /leftNav -->
</div><!-- /leftColumn -->



		        </div><!-- /MasterMainContent -->
        		
		        <!-- Footer -->
		        <div id="footerWrap">
		            <div id="footer">
				        <div id="ctl00_ctl00_MagicFooter_pnlFooter">
	
<div id="footerNav">
    <ul>
        <li><a href="http://company.wizards.com/about/working" title="Click to visit 'About Us' page.">About Us </a> </li>
        <li><a href="http://company.wizards.com/about/careers" title="Click to visit 'Jobs' page.">Jobs</a>  </li>
        <li><a href="http://wizards.custhelp.com/app/answers/detail/a_id/2236" title="Click to visit 'Submissions' page.">Submissions</a></li>
        <li><a href="http://locator.wizards.com" title="Click to visit the Store and Event Locator.">Find a Store</a> </li>
        <li><a href="http://company.wizards.com/press" title="Click to visit 'Press' page.">Press</a> </li>
        <li><a href="http://wizards.custhelp.com/" title="Click to visit 'Help' page.">Help</a> </li>
        <li class="last"><a href="/Magic/Languages.aspx" id="ctl00_ctl00_MagicFooter_LanguageLink" title="Click to visit 'Select Language/Country' page.">Select Language/Country</a></li>
        <li class="last"><img src="http://www.wizards.com/mtg/images/nav/language_select.gif" alt="Language Selector" /></li>
    </ul>
</div><!-- /footerNav -->

</div>




<div id="footerText">
    <p>
        © 1995-2013 Wizards of the Coast LLC, a subsidiary of Hasbro, Inc. All Rights Reserved.<br />

        
            <a href="http://company.wizards.com/tou" title="Click to visit 'Terms of Use' page.">Terms of Use</a> | <a href="http://company.wizards.com/privacy" title="Click to visit 'Privacy Statement' page.">Privacy Statement</a> | <a href="http://company.wizards.com/conduct" title="Click to visit 'Code of Conduct page.">Code of Conduct</a>
        

        
    </p>
</div><!-- /footerText -->

		            </div><!-- /footer -->
		            <ul id="ctl00_ctl00_affiliates" class="affiliates">
		                <li>
		                    <a href="http://www.hasbro.com/" title="Click to visit 'Hasbro.com' website." target="_blank">
		                        <img src="http://www.wizards.com/images/welcome0106_hasbro.gif" alt="Hasbro Logo" />
		                    </a>
		                </li>
		                <li>
		                    <a href="http://company.wizards.com/privacy" id="ctl00_ctl00_esrbLogo" target="_blank" title="Click to view 'Privacy Statement' page.">
		                        <img src="http://www.wizards.com/global/images/ectppswizards.gif" alt="ESRB Logo" />
		                    </a>
		                </li>
		            </ul>
		            
		        </div><!-- /footerWrap -->
        		
	        </div><!-- /wrap -->
	    </div><!-- /glowStatic -->
	</div><!-- /glow -->
</div><!-- /container -->

</form>
    <!-- HBX recommended (last possible include) 
    <script type="text/javascript" src="/Assets/scripts/hbx_dynamic.js"></script>
    <script type="text/javascript" src="/Assets/scripts/hbx.js"></script>
    -->
    
<script type="text/javascript">
Event.observe(window, 'load', SetupAdvertisements);
</script>

</body>
</html>

  id: 635082
  mime_type: text/html
  raw_url: https://web.archive.org/web/20130101171348id_/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/li/223
  status_code: 200
  time: 2013-01-01 17:13:48
  url: http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/li/223
  view_url: https://web.archive.org/web/20130101171348/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/li/223
