cdx:
  digest: 5W3MZMRMIOYL74HFM572WDRINSRADSQB
  hash_raw_url: f13eca6eee5f3c3b201ed3010270f2795e8824defa2f0d5966e0cf32af36d4ce
  id: 334750
  key: com,wizards)/magic/magazine/article.aspx?x=mtg/daily/arcana/1124
  length: 13534
  mime_type: text/html
  raw_url: https://web.archive.org/web/20130101174240id_/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/arcana/1124
  status_code: 200
  timestamp: 2013-01-01 17:42:40
  url: http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/arcana/1124
  view_url: https://web.archive.org/web/20130101174240/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/arcana/1124
memento:
  hash_raw_url: f13eca6eee5f3c3b201ed3010270f2795e8824defa2f0d5966e0cf32af36d4ce
  html_content: 
  id: 334750
  mime_type: text/html
  raw_url: https://web.archive.org/web/20130101174240id_/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/arcana/1124
  status_code: 200
  time: 2013-01-01 17:42:40
  url: http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/arcana/1124
  view_url: https://web.archive.org/web/20130101174240/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/arcana/1124
