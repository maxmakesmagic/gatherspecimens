cdx:
  digest: 2VLRW7E7EOGEIUFFB4ENYTDDPL74VZ3D
  hash_raw_url: 09fe53061bb5285c02a0f4576ac0bc8c0bd6eddbc3e90a2f5cfd333a9d2a1b0a
  id: 384603
  key: com,wizards)/magic/magazine/article.aspx?x=mtg/daily/deck/1113
  length: 15149
  mime_type: text/html
  raw_url: https://web.archive.org/web/20130101180018id_/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/deck/1113
  status_code: 200
  timestamp: 2013-01-01 18:00:18
  url: http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/deck/1113
  view_url: https://web.archive.org/web/20130101180018/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/deck/1113
memento:
  hash_raw_url: 09fe53061bb5285c02a0f4576ac0bc8c0bd6eddbc3e90a2f5cfd333a9d2a1b0a
  html_content: 
  id: 384603
  mime_type: text/html
  raw_url: https://web.archive.org/web/20130101180018id_/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/deck/1113
  status_code: 200
  time: 2013-01-01 18:00:18
  url: http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/deck/1113
  view_url: https://web.archive.org/web/20130101180018/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtg/daily/deck/1113
