cdx:
  digest: JUAHY33YPOQXJ3NWKFVVEEQFUFFYB7PC
  hash_raw_url: 85f7280e2bcbbdc8f42fa5b6aa6d2e853a5a5f30ebb03f3a37245b0df274648f
  id: 704844
  key: com,wizards)/magic/magazine/article.aspx?x=mtg/daily/twtw/1
  length: 15598
  mime_type: text/html
  raw_url: https://web.archive.org/web/20080901041942id_/http://www.wizards.com/magic/Magazine/Article.aspx?x=mtg/daily/twtw/1
  status_code: 200
  timestamp: 2008-09-01 04:19:42
  url: http://www.wizards.com/magic/Magazine/Article.aspx?x=mtg/daily/twtw/1
  view_url: https://web.archive.org/web/20080901041942/http://www.wizards.com/magic/Magazine/Article.aspx?x=mtg/daily/twtw/1
memento:
  hash_raw_url: 85f7280e2bcbbdc8f42fa5b6aa6d2e853a5a5f30ebb03f3a37245b0df274648f
  html_content: 

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head><link href="/Assets/site.css" type="text/css" rel="stylesheet" /><link href="/magic/styles.css" type="text/css" rel="stylesheet" /><link href="/Magic/Magazine/article.css" type="text/css" rel="stylesheet" /><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><meta name="Description" content="Wizards of the Coast" /><meta name="Keywords" content="magic, trading card games, dungeons, dragons, neopets, miniatures, roleplaying games, star wars, d20, d20 Modern, xiaolin showdown, kids next door, hecatomb, axis &amp; allies, avalon hill, mirrorstone, dreamblade, robo rally" /><title>
	Daily MTG : Magic: The Gathering
</title>
    <script type="text/javascript" src="/Assets/scripts/prototype.js"></script>
    <script type="text/javascript" src="/Assets/scripts/navigation.js"></script>
    <script type="text/javascript" src="/Assets/scripts/global.js"></script>
    <script type="text/javaScript" src="/Assets/scripts/hbx_onpage_standard.js"></script>
    <script type="text/javascript" src="/Assets/scripts/hbx.js"></script>
    <script type="text/javascript" src="/Assets/scripts/miscellaneous.js"></script>
    <link href="/Assets/print.css" type="text/css" rel="stylesheet" media="print" />
    <!--[if IE]><link href="/global/print_ie7.css" type="text/css" rel="stylesheet" media="print" /><![endif] -->
<script src="/magic/navigation.js" type="text/javascript"></script></head>
<body>
<form name="aspnetForm" method="post" action="Article.aspx?x=mtg%2fdaily%2ftwtw%2f1" id="aspnetForm">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwULLTEyMjQwNTkzMDRkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYCBT9jdGwwMCRjdGwwMCRDb250ZW50UGxhY2VIb2xkZXIxJE1hZ2ljTGVmdE5hdmlnYXRpb24kU3RvcmVzUmFkaW8FP2N0bDAwJGN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkTWFnaWNMZWZ0TmF2aWdhdGlvbiRFdmVudHNSYWRpbxPzCK/L2eSoZDCITfdSp3e8Z7vg" />


<script type="text/javascript">
//<![CDATA[




function ClientIDs() {}
ClientIDs.form1 = 'aspnetForm';
ClientIDs.header = 'ctl00_ctl00_header';
ClientIDs.searchControlTextBox = 'ctl00_ctl00_ctl07_searchControlTextBox';
ClientIDs.searchControlSubmitButton = 'ctl00_ctl00_ctl07_searchControlSubmitButton';
ClientIDs.ContentPlaceHolder1 = 'ctl00_ctl00_ContentPlaceHolder1';
ClientIDs.MagicTopNavigation = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation';
ClientIDs.topNavigation = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_topNavigation';
ClientIDs.multiverse = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_multiverse';
ClientIDs.tcg = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_tcg';
ClientIDs.magazine = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_magazine';
ClientIDs.dg = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_dg';
ClientIDs.publishing = 'ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_publishing';
ClientIDs.HeaderAdSpace = 'ctl00_ctl00_ContentPlaceHolder1_HeaderAdSpace';
ClientIDs.mainContent = 'ctl00_ctl00_ContentPlaceHolder1_mainContent';
ClientIDs.Article = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article';
ClientIDs.articleTop = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_articleTop';
ClientIDs.ArticleType = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_ArticleType';
ClientIDs.headerPanel = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_headerPanel';
ClientIDs.ArticleHeading = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_ArticleHeading';
ClientIDs.ArticleByline = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_ArticleByline';
ClientIDs.linksPanel = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_linksPanel';
ClientIDs.EmailFriend = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_EmailFriend';
ClientIDs.MessageBoard = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_MessageBoard';
ClientIDs.PrintFriendly = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_PrintFriendly';
ClientIDs.AuthorImage = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_AuthorImage';
ClientIDs.archiveSection = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_archiveSection';
ClientIDs.TypeArchive = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_TypeArchive';
ClientIDs.AuthorArchive = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_AuthorArchive';
ClientIDs.contentBlock = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_contentBlock';
ClientIDs.footerPanel = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_footerPanel';
ClientIDs.MessageBoardFooter = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_MessageBoardFooter';
ClientIDs.AuthorEmailFoooter = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_AuthorEmailFoooter';
ClientIDs.TypeArchiveFooter = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_TypeArchiveFooter';
ClientIDs.ErrorMessage = 'ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_ErrorMessage';
ClientIDs.SideAdSpace = 'ctl00_ctl00_ContentPlaceHolder1_SideAdSpace';
ClientIDs.sideContent = 'ctl00_ctl00_ContentPlaceHolder1_sideContent';
ClientIDs.MagicLeftNavigation = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation';
ClientIDs.leftNav = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_leftNav';
ClientIDs.planeswalkers = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_planeswalkers';
ClientIDs.colors = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_colors';
ClientIDs.planes = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_planes';
ClientIDs.newToMagic = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_newToMagic';
ClientIDs.products = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_products';
ClientIDs.tournaments = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_tournaments';
ClientIDs.resources = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_resources';
ClientIDs.columns = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_columns';
ClientIDs.features = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_features';
ClientIDs.news = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_news';
ClientIDs.event = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_event';
ClientIDs.downloads = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_downloads';
ClientIDs.mol = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_mol';
ClientIDs.MagicLocator = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_MagicLocator';
ClientIDs.StoresRadio = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_StoresRadio';
ClientIDs.EventsRadio = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_EventsRadio';
ClientIDs.Address = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Address';
ClientIDs.Search = 'ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Search';
ClientIDs.MagicFooter = 'ctl00_ctl00_MagicFooter';
var textBoxHash = new Hash( {  } );//]]>
</script>


<div id="container">
    <div id="glow">
        <div id="glowStatic">
	        <div id="wrap">
        		
		        <div class="hidden"><a href="#MasterMainContent" title="skip to content">skip to content</a></div>
        		
		        <div id="ctl00_ctl00_header">
        			
			        <div id="mainNav">
				        <!-- Top-level menus (if we were using them) -->
				        <a href="/" title="Click to return to the Wizards.com home page.">Wizards of the Coast</a>
			        </div><!-- /mainNav -->

			        <!-- Wizards Logo -->
			        <h1 id="WizardsLogo">
				        <a href="/" title="Click to return to the Wizards.com home page.">
				            <img src="/Assets/images/wotc_logo.gif" alt="Wizards of the Coast" />
				        </a>				                     
			        </h1>
			               			
		        </div><!-- /header -->
        		
		        <!-- Main Content -->
		        <div id="MasterMainContent">
			        <!-- this needs to be here for IE6 for some strange reason -->
   			        
<div class="searchControl">
    <p>
        <input name="ctl00$ctl00$ctl07$searchControlTextBox" type="text" id="ctl00_ctl00_ctl07_searchControlTextBox" maxlength="100" class="textBox" onfocus="FocusSearchTextBox(event, this);" onblur="UnfocusSearchTextBox(event, this);" value="Search Wizards.com" />
        <input type="submit" name="ctl00$ctl00$ctl07$searchControlSubmitButton" value="Search" id="ctl00_ctl00_ctl07_searchControlSubmitButton" class="submitButton" />
        
    </p>
</div>
			        

	<div id="bannerGraphic">
	    <h2 id="MagicLogo">
	        <a href="/Magic/" title="Click to return to the Magic: The Gathering home page.">
	            <img src="/Magic/Assets/magic_logo.gif" alt="Magic: The Gathering" />
	        </a>
	    </h2>
	</div>
	
	<div id="wrapper">
	
	    


<div id="topNav">
    <ul id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_topNavigation">
        <li id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_multiverse">
            <a href="../Multiverse/Default.aspx" class="multiverse" title="The Multiverse">
                The Multiverse
            </a>
        </li>
        <li id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_tcg">
            <a href="../TCG/Default.aspx" class="tcg" title="Trading Card Game">
                Trading Card Game
            </a>
        </li>
        <li id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_magazine" class="active">
            <a href="Default.aspx" title="Daily MTG" class="magazine">
                Daily MTG
            </a>
        </li>
        <li id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_dg">
            <a href="../Digital/Default.aspx" class="dg" title="Digital Games">
                Digital Games
            </a>
        </li>
        <li id="ctl00_ctl00_ContentPlaceHolder1_MagicTopNavigation_publishing">
            <a href="../Publishing/Default.aspx" class="publishing" title="Publishing">
                Publishing
            </a>
        </li>
    </ul>
</div><!-- /topNav -->
        
        <div id="ctl00_ctl00_ContentPlaceHolder1_HeaderAdSpace">
	
            <div id="adspaceRow">
                <p id="topAdvertisement"></p>
            </div>
        
</div>
        
		<div id="centerColumn">
		    
    
    <div id="content">
        <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_articleTop" class="article-top"><h3><img src="/Magic/Magazine/Images/article_The_Week_That_Was.gif" alt="The_Week_That_Was" /></h3></div>
<div class="center-content">

    <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_Article">
	
        <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_headerPanel" class="heading">
            <div class="description">
                <h4>Back to School</h4>
                <h5 class="byline">Brian David-Marshall<br />Friday, August 29, 2008</h5>
            </div>
            <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_linksPanel" class="links">
                <ul id="heading-links">
                    <li><a href="/global/emailtofriend.asp?url=/Magic/Magazine/Article.aspx?x=mtg_daily_twtw_1&amp;headline=Back to School" target="_blank" onclick="window.open('/global/emailtofriend.asp?url=/Magic/Magazine/Article.aspx?x=mtg_daily_twtw_1&amp;headline=Back to School', 'emailWindow', 'left=150, top=50, screenX=200, screenY=100, resizable=yes, scrollbars=no, toolbar=no, width=480, height=540'); return false" title="Click to send email to a friend."><img src="/Magic/Assets/icon_email.gif" alt="Email" /></a></li>
                    <li><a href="http://forums.gleemax.com/showthread.php?t=1081161" title="Click to visit the message boards."><img src="/Magic/Assets/icon_boards.gif" alt="Boards" /></a></li>
                    <li><a id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_PrintFriendly" title="Click to view printer friendly page." href="/magic/Magazine/Article.aspx?x=mtg/daily/twtw/1&amp;print=true"><img src="/Magic/Assets/icon_print.gif" alt="Print" /></a></li>
                </ul>
                <div id="author-image">
                    <img src="/magic/images/mtgcom/authorpics/authorpic_briandavid-marshall.jpg" alt="Author Image" />
                </div>
                <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_archiveSection">
					<ul id="archive-links">
					    <li><a href="/Magic/Magazine/Archive.aspx?tag=The Week That Was&description=The Week That Was" title="Click to visit the 'The Week That Was' archive.">The Week That Was Archive</a></li>
					    <li><a href="/Magic/Magazine/Archive.aspx?author=Brian David-Marshall" title="Click to visit the 'Brian David-Marshall' archive.">Brian David-Marshall Archive</a></li>
					</ul>
                </div>
            </div>
	    </div>
	    <div class="article-content">
            <p>
  <img border="0" align="left" src="/magic/images/dropcap_W.jpg" alt="The letter W!" />e are heading into the unofficial last weekend of summer and <b>Magic</b> players everywhere are packing up their backpacks, getting to know their new dormmates, and preparing for a fall of dreaming up <i>Shards of Alara</i> Block Constructed decks in class. </p>
<p>It is also the last weekend of the <i>Lowryn/Shadowmoor</i> Block Constructed PTQ season. Good luck to everyone trying to close the summer out on a high note. It has been a long time since I road tripped up and down the seaboard to attend PTQs but it is not so long ago that I don't recall the fervor of that final weekend. I have to tip my metaphorical hat to anyone attempting the final weekend run between two PTQs, which here on the East Coast of the U.S. means a long overnight haul to Rochester, N.Y. </p>
<p>
  <table align="right" width="340">
    <tr>
      <td href="">
        <img border="0" src="/magic/images/tournamentcenter/hof/dougherty_pthon06.jpg" width="340" height="255" />
        <br />
        <i>Rob Dougherty's seen a few tournaments in his long career.</i>
      </td>
    </tr>
  </table>
</p>
<p>For those of you not quite ready to lay down your weapons from this season there will be a huge tournament with $5,000 in prizes hosted by Pro Tour Hall of Famer Rob Dougherty in Boxborough, Mass., next weekend. Rob is attempting to create "a great day of <b>Magic</b> fun for casual and competitive players alike!", and in addition to the $5,000 tournament he has created a schedule of events that includes door prizes, a free Booster Draft with event entry for players not taking part in the main tournament, and question and answer sessions throughout the day. Q&amp;A sessions include Dougherty discussing the art of sideboarding, Darwin Kastle talking about his illustrious career, <b>Magic</b> artist Lars Grant-West tackling the subject of creating <b>Magic</b> cards, and me talking about my role as a coverage reporter, columnist, and Pro Tour Historian.</p>
<p>It is definitely not your everyday tournament schedule, in terms of both the large prize being offered in the main event and the ambitious schedule of seminars and side events. </p>
<p>"I feel it is critically important to the success of <b>Magic</b> for there to be large events where the entire <b>Magic</b> community—competitive and casual players alike—get together," explained Dougherty when asked about his decision to host this tournament. "It's great for players to meet and play against new opponents, not just the friends they see every week in their local shop. It's important for judges to get together and share their knowledge, teach new judges, and experience a large event."</p>
<p>Rob explained that recent changes in Organized Play also led to his decision. The changes to the Prerelease program mean that while there will be more events in more areas, there will be fewer large events for players and judges to garner the experience Rob mentioned above. </p>
<p>"I've created the $5K <b>Magic</b> day to fill the void and give the Northeast a regular big event," said Rob. "It is really two events rolled into one. There is the $5K Block Constructed tournament for the competitive power gamers, and there is the <b>Magic</b> Day for the casual love-of-the-game <b>Magic</b> players. Competitive players pay $30 to play in the $5K, and casual players pay a $15 entry fee for the <b>Magic</b> Day, which includes a free Booster Draft. <b>Magic</b> Day activities include a signing with <b>Magic</b> artist Lars Grant-West, Booster Drafts, Gunslinging with Hall of Fame <b>Magic</b> players, raffles, <b>Magic</b> seminars, eight-player Block Constructed side events, and dealers buying and selling cards."</p>
<p>
  <table align="right" width="300">
    <tr>
      <td href="">
        <img border="0" src="/sideboard/images/usnat02/a851.jpg" width="300" height="197" />
        <br />
        <i>Hall of Famer Darwin Kastle will gunsling.</i>
      </td>
    </tr>
  </table>"Wizards really did a great job of making this Block format fun, and being Block Constructed, the cards are relatively easy for players to get," Rob said as he explained his decision for the format of the main event. "That combination has made this block format the most popular Constructed format I've ever seen. My PTQ attendance has gone through the roof. Given all that, it was an easy choice to make my first Boston $5K a Block tournament."</p>
<p>It has been well more than a decade since Dougherty ran his first <b>Magic</b> tournament and just about the full 15 years possible since he first started playing the game. I asked him to describe the changes he has seen in the game over the years.</p>
<p>"Wow have they changed," laughed Dougherty when asked how tournaments and tournament players have evolved over the last decade plus. "I started running <b>Magic</b> tournaments before there was a DCI. There were no DCI numbers, no ranking system, no tournament software. We put people's names on index cards and recorded their wins/losses and opponents on the back. Organized play has come a long way since the Alpha and Beta days of <b>Magic</b>."</p>
<p>"Like the competitors of any sport, tournament <b>Magic</b> payers have gotten much better with time," Dougherty continued. "Players' understanding of the basics like card advantage, tempo, mana ratios and the like are far better now then in the early days of <b>Magic</b>. The explosion of the Internet and coverage of <b>Magic</b> has greatly increased the power level of the average Constructed deck while <b>Magic Online</b> has increased the skill of the average Booster Draft player by an order of magnitude."</p>
<h3>Hall of Fame Ballot</h3>
<p>Of all my Hall of Fame ballots, this year's has been the most agonizing for me and I am turning it in at close to the last minute. The heart of the conflict for me has been how to approach Olivier Ruel, who was suspended once at the start of his career (which I could easily see my way past) and again more recently, which is much more problematic when figuring out my ballot. </p>
<p>I am not a black-and-white kind of guy and would never paint someone's whole career with an early indiscretion. Bob Maher is a perfect example. He was suspended early in his career and was quite forthcoming and contrite about the whole situation. He then spent the rest of his career with nary a blemish to his reputation. If Olivier's only mark was that early suspension way back in 2000, it might give me pause but I would likely have voted for him. </p>
<p>Like I said, I am not a black-and-white guy and I can easily see myself voting—or not voting—for Olivier in the future but it just feels like it is too soon after his last suspension for me to feel right about voting for him this year. I really like Olivier. I look forward to seeing him at tournaments and hope my open ballot does not change that experience, but I can't advocate someone being suspended and then being inducted into the Hall of Fame just a couple years later. It was a very tough decision for me and I am sure it will continue to be a tough decision each year that Olivier—who sits second all-time in lifetime Pro Points—remains on the ballot. </p>
<p>Here is who I did vote for:</p>
<p>
  <table align="right" width="197">
    <tr>
      <td href="">
        <img border="0" src="/mtg/images/daily/twtw/twtw1_rubin.jpg" width="197" height="300" />
        <br />
        <i>Ben Rubin, aka 'Superman'</i>
      </td>
    </tr>
  </table>
  <b>Ben Rubin</b> and <b>Mike Turian</b>: Turian and Rubin were the last two candidates standing when the music stopped last year. The third class of the Hall of Fame was one of the most hotly debated ballots in the short history of the Pro Tour Hall of Fame, with seven players vying for five spots. There is no way these two players should be standing anywhere but on the stage at Worlds during this year's induction ceremony when all the ballots are tallied.</p>
<p>Rubin is one of the most fiercely intelligent people you could ever meet inside or outside of a <b>Magic</b> tournament. He stormed onto the Pro Tour while still in his teens and quickly racked up a pair of Finals finishes. He ended up with four Top 8 appearances overall but the title he came so close to those first two times out continued to elude him on the Pro Tour. He did win a pair of Grand Prixs and was the first player to twice win a Master Series—arguably one of the toughest tournaments in the history of premier events. To make those wins even more impressive: Ben had to defeat none other than Jon Finkel in the semis of <a href="/sideboard/event.asp?event=MASTERSBAR01">one of those Masters</a> and in the finals <a href="/sideboard/event.asp?event=MASTERSCHI00">of the other</a>.</p>
<p>Turian's <a href="/sideboard/article.asp?x=ptny0001/welcome">first of five Pro Tour Top 8s</a> was as a member of the Pro Tour-winning team Potato Nation. While teammates Gary Wise and Scott Johns were both more well-known than him at the time, it was Turian's nickname that became part of the team's name. By the time Turian's career ended to take a job at Wizards in 2004 (while he was still at the top of his game) he was known as one of the game's greatest Limited players and most likeable dream crushers.</p>
<p>
  <table align="right" width="300">
    <tr>
      <td href="">
        <img border="0" src="/sideboard/images/ptsd04/fm1_1.jpg" width="300" height="225" />
        <br />
        <i>Baberowski owns one individual title and two team titles.</i>
      </td>
    </tr>
  </table>
  <b>Dirk Baberowski</b> is a slam dunk Hall of Famer with five Pro Tour Top 8 finishes. He has more Pro Tour wins than anyone else on this year's ballot with a whopping three—tied for second all-time. Two of those wins came as a member of the fearsome Phoenix Foundation and the third came in Chicago during the 1998-99 season. When my team was paired against the Phoenix Foundation at <a href="/sideboard/event.asp?event=PTNY01">Pro Tour New York</a> I was wary of Kai but I was downright terrified of Dirk. Baberowski also had a <a href="/Magic/Magazine/Article.aspx?x=sideboard/events/mastersosa02">Masters win</a> on his resume and finished second at a star-studded <a href="/sideboard/article.asp?x=sb19990711a">European Championship</a> that included three other Hall of Fame players in the Top 8. </p>
<p>From there, <b>Jelger Wiegersma</b> was an easy choice for me. He is one of the most consistent players in the history of the Pro Tour with three Pro Tour Top 8s, including one win as a member of Von Dutch at <a href="/Magic/Magazine/Events.aspx?x=mtgevent/ptsea04/welcome">Pro Tour–Seattle</a>. It is easy to overlook the soft-spoken Dutch player but not if you are looking near the top of the final standings of just about any event he plays in. I suspect that when the player ballots are tallied, Jelger will be one of the highest finishers in that category—you would be hard pressed to find a player on the Pro Tour who questions Jelger's game in any way.</p>
<p>My last vote was a tough one. Masashiro Kuroda, Chris Pikula, Dave Price, Justin Gary, William Jensen, and a handful of others were all considerations for me but in the end I voted for <b>Steven O'Mahoney-Schwartz</b>. Steve is one of the cornerstones in the construction of the New York <b>Magic</b> scene. He began playing in—and dominating—tournaments before Glen Friedman and I ran our first tournament (which he attended), and was the first player through the door when we opened Neutral Ground in 1995. When I was drawing up the business plan to open the store, Steve—then just a teenager—was the first person I consulted. </p>
<p>
  <table align="right" width="300">
    <tr>
      <td href="">
        <img border="0" src="/sideboard/images/usnat02/a843.jpg" width="300" height="197" />
        <br />
        <i>Steve OMS is one of New York's finest.</i>
      </td>
    </tr>
  </table>Steve also made the players around him better and was a boon to the NY community. I always recall him working with players to discuss how they could have built their Friday Night Sealed Deck differently or debating the final choice for a sideboard, all the while being one of the best players in the world—and possibly the best Limited player of all time. He has three Pro Tour Top 8s with finishes of first, second, and third that includes a semifinals finish at the first team Pro Tour alongside his brother Dan O'Mahoney-Schwartz (who is also eligible for the Hall this year) and Jon Finkel.</p>
<h3>Nationals Round-up</h3>
<p>Thanks to Tournament Organizer Gustavo Fischer for providing me with the decklists and metagame breakdown from the recently completed Uruguay National Championship. National Champion Jorge Sierra's Italian Nationals-inspired <a class="nodec" href="javascript:autoCardWindow('Torrent_of_Souls')">Torrent of Souls</a> deck was undefeated in the Constructed rounds and in the Top 8 and looks to be a meaningful Standard deck right now. It marks the second time that Jorge has won his National title. He last won it in 2002.</p>
<table class="deck" border="0" cellpadding="0" cellspacing="0">
  <tr>
    <td class="topleft" />
    <td class="top" />
    <td class="topright" />
  </tr>
  <tr>
    <td class="left" />
    <td class="content" valign="top">
      <table class="deckcontent" border="0" cellpadding="0" cellspacing="0">
        <tr class="decktop">
          <td class="title">
            <div class="main">
              <heading>Jorge Sierra's Torrent Red-Black Tokens</heading>
            </div>
            <div class="sub">Uruguay National Champion</div>
          </td>
          <td class="options" align="right">
            <a target="_blank" href="&#xA;                        /magic/samplehand.asp?x=mtg/daily/twtw/1&amp;decknum=1">
              <img src="/magic/images/samplehand.gif" width="39" height="18" border="0" alt="View a sample hand of this deck" align="right" />
            </a>
          </td>
        </tr>
        <tr>
          <td class="maindeck" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center" colspan="2">
                  <p class="decktitle">Main Deck</p>
                  <p class="cardcount">60 cards
                          </p>
                </td>
              </tr>
              <tr>
                <td valign="top">2 
                            <a class="nodec" href="javascript:autoCardWindow('Auntie[s_Hovel')">Auntie's Hovel</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Graven_Cairns')">Graven Cairns</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Kher_Keep')">Kher Keep</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Mountain')">Mountain</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Pendelhaven')">Pendelhaven</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Sulfurous_Springs')">Sulfurous Springs</a><br />7 
                            <a class="nodec" href="javascript:autoCardWindow('Swamp')">Swamp</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">23 lands</span><br /><br /><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Furystoke_Giant')">Furystoke Giant</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Magus_of_the_Moon')">Magus of the Moon</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Marsh_Flitter')">Marsh Flitter</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Mogg_Fanatic')">Mogg Fanatic</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Mogg_War_Marshal')">Mogg War Marshal</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Nantuko_Husk')">Nantuko Husk</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Shadow_Guildmage')">Shadow Guildmage</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Shriekmaw')">Shriekmaw</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">26 creatures</span></td>
                <td valign="top">4 
                            <a class="nodec" href="javascript:autoCardWindow('Bitterblossom')">Bitterblossom</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Thoughtseize')">Thoughtseize</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Torrent_of_Souls')">Torrent of Souls</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">11 other spells</span></td>
              </tr>
            </table>
          </td>
          <td class="sidebar" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center">
                  <p class="decktitle">Sideboard</p>
                  <p class="cardcount" />
                </td>
              </tr>
              <tr>
                <td valign="top">4 
                            <a class="nodec" href="javascript:autoCardWindow('Avalanche_Riders')">Avalanche Riders</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Demigod_of_Revenge')">Demigod of Revenge</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Faerie_Macabre')">Faerie Macabre</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Fulminator_Mage')">Fulminator Mage</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Terror')">Terror</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">15 sideboard cards</span></td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </td>
    <td class="right" />
  </tr>
  <tr>
    <td class="bottomleft" />
    <td class="bottom" />
    <td class="bottomright" />
  </tr>
</table>
<br />
<table class="deck" border="0" cellpadding="0" cellspacing="0">
  <tr>
    <td class="topleft" />
    <td class="top" />
    <td class="topright" />
  </tr>
  <tr>
    <td class="left" />
    <td class="content" valign="top">
      <table class="deckcontent" border="0" cellpadding="0" cellspacing="0">
        <tr class="decktop">
          <td class="title">
            <div class="main">
              <heading>Joaquin "Pancho" Walter's Reveillark</heading>
            </div>
            <div class="sub">Finalist</div>
          </td>
          <td class="options" align="right">
            <a target="_blank" href="&#xA;                        /magic/samplehand.asp?x=mtg/daily/twtw/1&amp;decknum=2">
              <img src="/magic/images/samplehand.gif" width="39" height="18" border="0" alt="View a sample hand of this deck" align="right" />
            </a>
          </td>
        </tr>
        <tr>
          <td class="maindeck" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center" colspan="2">
                  <p class="decktitle">Main Deck</p>
                  <p class="cardcount">61 cards
                          </p>
                </td>
              </tr>
              <tr>
                <td valign="top">4 
                            <a class="nodec" href="javascript:autoCardWindow('Adarkar_Wastes')">Adarkar Wastes</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Battlefield_Forge')">Battlefield Forge</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Cascade_Bluffs')">Cascade Bluffs</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Mystic_Gate')">Mystic Gate</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Reflecting_Pool')">Reflecting Pool</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Rugged_Prairie')">Rugged Prairie</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Shivan_Reef')">Shivan Reef</a><br />5 
                            <a class="nodec" href="javascript:autoCardWindow('Snow-Covered_Island')">Snow-Covered Island</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Vivid_Creek')">Vivid Creek</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Vivid_Meadow')">Vivid Meadow</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">24 lands</span><br /><br /><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Aven_Riftwatcher')">Aven Riftwatcher</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Body_Double')">Body Double</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Greater_Gargadon')">Greater Gargadon</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Mulldrifter')">Mulldrifter</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Reveillark')">Reveillark</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Sower_of_Temptation')">Sower of Temptation</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Venser,_Shaper_Savant')">Venser, Shaper Savant</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">22 creatures</span></td>
                <td valign="top">2 
                            <a class="nodec" href="javascript:autoCardWindow('Careful_Consideration')">Careful Consideration</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Coldsteel_Heart')">Coldsteel Heart</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Firespout')">Firespout</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Mind_Stone')">Mind Stone</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Prismatic_Lens')">Prismatic Lens</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Rune_Snag')">Rune Snag</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">15 other spells</span></td>
              </tr>
            </table>
          </td>
          <td class="sidebar" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center">
                  <p class="decktitle">Sideboard</p>
                  <p class="cardcount" />
                </td>
              </tr>
              <tr>
                <td valign="top">2 
                            <a class="nodec" href="javascript:autoCardWindow('Crovax,_Ascendant_Hero')">Crovax, Ascendant Hero</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Faerie_Macabre')">Faerie Macabre</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Luminesce')">Luminesce</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Pyroclasm')">Pyroclasm</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Teferi,_Mage_of_Zhalfir')">Teferi, Mage of Zhalfir</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Teferi[s_Moat')">Teferi's Moat</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Trickbind')">Trickbind</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Wrath_of_God')">Wrath of God</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">15 sideboard cards</span></td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </td>
    <td class="right" />
  </tr>
  <tr>
    <td class="bottomleft" />
    <td class="bottom" />
    <td class="bottomright" />
  </tr>
</table>
<br />
<table class="deck" border="0" cellpadding="0" cellspacing="0">
  <tr>
    <td class="topleft" />
    <td class="top" />
    <td class="topright" />
  </tr>
  <tr>
    <td class="left" />
    <td class="content" valign="top">
      <table class="deckcontent" border="0" cellpadding="0" cellspacing="0">
        <tr class="decktop">
          <td class="title">
            <div class="main">
              <heading>Daniel Merlinski's Elfos</heading>
            </div>
            <div class="sub">Top 4</div>
          </td>
          <td class="options" align="right">
            <a target="_blank" href="&#xA;                        /magic/samplehand.asp?x=mtg/daily/twtw/1&amp;decknum=3">
              <img src="/magic/images/samplehand.gif" width="39" height="18" border="0" alt="View a sample hand of this deck" align="right" />
            </a>
          </td>
        </tr>
        <tr>
          <td class="maindeck" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center" colspan="2">
                  <p class="decktitle">Main Deck</p>
                  <p class="cardcount">61 cards
                          </p>
                </td>
              </tr>
              <tr>
                <td valign="top">1 
                            <a class="nodec" href="javascript:autoCardWindow('Fetid_Heath')">Fetid Heath</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Forest')">Forest</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Gilt-Leaf_Palace')">Gilt-Leaf Palace</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Llanowar_Wastes')">Llanowar Wastes</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Mutavault')">Mutavault</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Pendelhaven')">Pendelhaven</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Swamp')">Swamp</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Treetop_Village')">Treetop Village</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Urborg,_Tomb_of_Yawgmoth')">Urborg, Tomb of Yawgmoth</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">23 lands</span><br /><br /><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Boreal_Druid')">Boreal Druid</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Chameleon_Colossus')">Chameleon Colossus</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Civic_Wayfinder')">Civic Wayfinder</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Imperious_Perfect')">Imperious Perfect</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Llanowar_Elves')">Llanowar Elves</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Tarmogoyf')">Tarmogoyf</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Wren[s_Run_Vanquisher')">Wren's Run Vanquisher</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">23 creatures</span></td>
                <td valign="top">2 
                            <a class="nodec" href="javascript:autoCardWindow('Garruk_Wildspeaker')">Garruk Wildspeaker</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Loxodon_Warhammer')">Loxodon Warhammer</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Nameless_Inversion')">Nameless Inversion</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Profane_Command')">Profane Command</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Slaughter_Pact')">Slaughter Pact</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Thoughtseize')">Thoughtseize</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">15 other spells</span></td>
              </tr>
            </table>
          </td>
          <td class="sidebar" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center">
                  <p class="decktitle">Sideboard</p>
                  <p class="cardcount" />
                </td>
              </tr>
              <tr>
                <td valign="top">1 
                            <a class="nodec" href="javascript:autoCardWindow('Faerie_Macabre')">Faerie Macabre</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Kitchen_Finks')">Kitchen Finks</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Mind_Shatter')">Mind Shatter</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Primal_Command')">Primal Command</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Snakeform')">Snakeform</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Sudden_Spoiling')">Sudden Spoiling</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Unknown_Card')">Unknown Card</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">15 sideboard cards</span></td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </td>
    <td class="right" />
  </tr>
  <tr>
    <td class="bottomleft" />
    <td class="bottom" />
    <td class="bottomright" />
  </tr>
</table>
<br />
<table class="deck" border="0" cellpadding="0" cellspacing="0">
  <tr>
    <td class="topleft" />
    <td class="top" />
    <td class="topright" />
  </tr>
  <tr>
    <td class="left" />
    <td class="content" valign="top">
      <table class="deckcontent" border="0" cellpadding="0" cellspacing="0">
        <tr class="decktop">
          <td class="title">
            <div class="main">
              <heading>Leandro Cabrera's Reveillark</heading>
            </div>
            <div class="sub">Top 4</div>
          </td>
          <td class="options" align="right">
            <a target="_blank" href="&#xA;                        /magic/samplehand.asp?x=mtg/daily/twtw/1&amp;decknum=4">
              <img src="/magic/images/samplehand.gif" width="39" height="18" border="0" alt="View a sample hand of this deck" align="right" />
            </a>
          </td>
        </tr>
        <tr>
          <td class="maindeck" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center" colspan="2">
                  <p class="decktitle">Main Deck</p>
                  <p class="cardcount">60 cards
                          </p>
                </td>
              </tr>
              <tr>
                <td valign="top">2 
                            <a class="nodec" href="javascript:autoCardWindow('Adarkar_Wastes')">Adarkar Wastes</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Cascade_Bluffs')">Cascade Bluffs</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Island')">Island</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Mystic_Gate')">Mystic Gate</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Reflecting_Pool')">Reflecting Pool</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Shivan_Reef')">Shivan Reef</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Vivid_Crag')">Vivid Crag</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Vivid_Creek')">Vivid Creek</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Vivid_Meadow')">Vivid Meadow</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">24 lands</span><br /><br /><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Body_Double')">Body Double</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Bonded_Fetch')">Bonded Fetch</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Greater_Gargadon')">Greater Gargadon</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Kitchen_Finks')">Kitchen Finks</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Mulldrifter')">Mulldrifter</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Reveillark')">Reveillark</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Sower_of_Temptation')">Sower of Temptation</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Venser,_Shaper_Savant')">Venser, Shaper Savant</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">24 creatures</span></td>
                <td valign="top">2 
                            <a class="nodec" href="javascript:autoCardWindow('Careful_Consideration')">Careful Consideration</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Coldsteel_Heart')">Coldsteel Heart</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Firespout')">Firespout</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Prismatic_Lens')">Prismatic Lens</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Rune_Snag')">Rune Snag</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">12 other spells</span></td>
              </tr>
            </table>
          </td>
          <td class="sidebar" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center">
                  <p class="decktitle">Sideboard</p>
                  <p class="cardcount" />
                </td>
              </tr>
              <tr>
                <td valign="top">2 
                            <a class="nodec" href="javascript:autoCardWindow('Crovax,_Ascendant_Hero')">Crovax, Ascendant Hero</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Kitchen_Finks')">Kitchen Finks</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Luminesce')">Luminesce</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Pact_of_Negation')">Pact of Negation</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Remove_Soul')">Remove Soul</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Trickbind')">Trickbind</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Wispmare')">Wispmare</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Wrath_of_God')">Wrath of God</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">15 sideboard cards</span></td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </td>
    <td class="right" />
  </tr>
  <tr>
    <td class="bottomleft" />
    <td class="bottom" />
    <td class="bottomright" />
  </tr>
</table>
<br />
<table class="deck" border="0" cellpadding="0" cellspacing="0">
  <tr>
    <td class="topleft" />
    <td class="top" />
    <td class="topright" />
  </tr>
  <tr>
    <td class="left" />
    <td class="content" valign="top">
      <table class="deckcontent" border="0" cellpadding="0" cellspacing="0">
        <tr class="decktop">
          <td class="title">
            <div class="main">
              <heading>Alejandro Betschart's Swath Storm aka The Red Deck That Wins</heading>
            </div>
            <div class="sub">Top 8</div>
          </td>
          <td class="options" align="right">
            <a target="_blank" href="&#xA;                        /magic/samplehand.asp?x=mtg/daily/twtw/1&amp;decknum=5">
              <img src="/magic/images/samplehand.gif" width="39" height="18" border="0" alt="View a sample hand of this deck" align="right" />
            </a>
          </td>
        </tr>
        <tr>
          <td class="maindeck" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center" colspan="2">
                  <p class="decktitle">Main Deck</p>
                  <p class="cardcount">60 cards
                          </p>
                </td>
              </tr>
              <tr>
                <td valign="top">4 
                            <a class="nodec" href="javascript:autoCardWindow('Fungal_Reaches')">Fungal Reaches</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Molten_Slagheap')">Molten Slagheap</a><br />8 
                            <a class="nodec" href="javascript:autoCardWindow('Mountain')">Mountain</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Spinerock_Knoll')">Spinerock Knoll</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">20 lands</span><br /><br /><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">0 creatures</span></td>
                <td valign="top">4 
                            <a class="nodec" href="javascript:autoCardWindow('Empty_the_Warrens')">Empty the Warrens</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Grapeshot')">Grapeshot</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Ignite_Memories')">Ignite Memories</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Lotus_Bloom')">Lotus Bloom</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Manamorphose')">Manamorphose</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Pyromancer[s_Swath')">Pyromancer's Swath</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Rift_Bolt')">Rift Bolt</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Rite_of_Flame')">Rite of Flame</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Shard_Volley')">Shard Volley</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Shock')">Shock</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Tarfire')">Tarfire</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">40 other spells</span></td>
              </tr>
            </table>
          </td>
          <td class="sidebar" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center">
                  <p class="decktitle">Sideboard</p>
                  <p class="cardcount" />
                </td>
              </tr>
              <tr>
                <td valign="top">3 
                            <a class="nodec" href="javascript:autoCardWindow('Demigod_of_Revenge')">Demigod of Revenge</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Guttural_Response')">Guttural Response</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Ignite_Memories')">Ignite Memories</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Magus_of_the_Moon')">Magus of the Moon</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Martyr_of_Ashes')">Martyr of Ashes</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">15 sideboard cards</span></td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </td>
    <td class="right" />
  </tr>
  <tr>
    <td class="bottomleft" />
    <td class="bottom" />
    <td class="bottomright" />
  </tr>
</table>
<br />
<table class="deck" border="0" cellpadding="0" cellspacing="0">
  <tr>
    <td class="topleft" />
    <td class="top" />
    <td class="topright" />
  </tr>
  <tr>
    <td class="left" />
    <td class="content" valign="top">
      <table class="deckcontent" border="0" cellpadding="0" cellspacing="0">
        <tr class="decktop">
          <td class="title">
            <div class="main">
              <heading>Guillermo Gruszka's Faeries</heading>
            </div>
            <div class="sub">Top 8</div>
          </td>
          <td class="options" align="right">
            <a target="_blank" href="&#xA;                        /magic/samplehand.asp?x=mtg/daily/twtw/1&amp;decknum=6">
              <img src="/magic/images/samplehand.gif" width="39" height="18" border="0" alt="View a sample hand of this deck" align="right" />
            </a>
          </td>
        </tr>
        <tr>
          <td class="maindeck" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center" colspan="2">
                  <p class="decktitle">Main Deck</p>
                  <p class="cardcount">60 cards
                          </p>
                </td>
              </tr>
              <tr>
                <td valign="top">1 
                            <a class="nodec" href="javascript:autoCardWindow('Faerie_Conclave')">Faerie Conclave</a><br />5 
                            <a class="nodec" href="javascript:autoCardWindow('Island')">Island</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Mutavault')">Mutavault</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Pendelhaven')">Pendelhaven</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('River_of_Tears')">River of Tears</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Secluded_Glen')">Secluded Glen</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Sunken_Ruins')">Sunken Ruins</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Swamp')">Swamp</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Underground_River')">Underground River</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">25 lands</span><br /><br /><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Mistbind_Clique')">Mistbind Clique</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Scion_of_Oona')">Scion of Oona</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Spellstutter_Sprite')">Spellstutter Sprite</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Vendilion_Clique')">Vendilion Clique</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">14 creatures</span></td>
                <td valign="top">4 
                            <a class="nodec" href="javascript:autoCardWindow('Ancestral_Vision')">Ancestral Vision</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Bitterblossom')">Bitterblossom</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Cryptic_Command')">Cryptic Command</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Nameless_Inversion')">Nameless Inversion</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Rune_Snag')">Rune Snag</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Slaughter_Pact')">Slaughter Pact</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Terror')">Terror</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">21 other spells</span></td>
              </tr>
            </table>
          </td>
          <td class="sidebar" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center">
                  <p class="decktitle">Sideboard</p>
                  <p class="cardcount" />
                </td>
              </tr>
              <tr>
                <td valign="top">3 
                            <a class="nodec" href="javascript:autoCardWindow('Bottle_Gnomes')">Bottle Gnomes</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Damnation')">Damnation</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Murderous_Redcap')">Murderous Redcap</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Razormane_Masticore')">Razormane Masticore</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Thoughtseize')">Thoughtseize</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">15 sideboard cards</span></td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </td>
    <td class="right" />
  </tr>
  <tr>
    <td class="bottomleft" />
    <td class="bottom" />
    <td class="bottomright" />
  </tr>
</table>
<br />
<table class="deck" border="0" cellpadding="0" cellspacing="0">
  <tr>
    <td class="topleft" />
    <td class="top" />
    <td class="topright" />
  </tr>
  <tr>
    <td class="left" />
    <td class="content" valign="top">
      <table class="deckcontent" border="0" cellpadding="0" cellspacing="0">
        <tr class="decktop">
          <td class="title">
            <div class="main">
              <heading>Joaquín Larrosa's Merfolk (Yes, the Flashfreezes were maindecked!)</heading>
            </div>
            <div class="sub">Top 8</div>
          </td>
          <td class="options" align="right">
            <a target="_blank" href="&#xA;                        /magic/samplehand.asp?x=mtg/daily/twtw/1&amp;decknum=7">
              <img src="/magic/images/samplehand.gif" width="39" height="18" border="0" alt="View a sample hand of this deck" align="right" />
            </a>
          </td>
        </tr>
        <tr>
          <td class="maindeck" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center" colspan="2">
                  <p class="decktitle">Main Deck</p>
                  <p class="cardcount">60 cards
                          </p>
                </td>
              </tr>
              <tr>
                <td valign="top">19 
                            <a class="nodec" href="javascript:autoCardWindow('Island')">Island</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Mutavault')">Mutavault</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">23 lands</span><br /><br /><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Cursecatcher')">Cursecatcher</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Lord_of_Atlantis')">Lord of Atlantis</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Merrow_Reejerey')">Merrow Reejerey</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Silvergill_Adept')">Silvergill Adept</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Sower_of_Temptation')">Sower of Temptation</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Stonybrook_Banneret')">Stonybrook Banneret</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Venser,_Shaper_Savant')">Venser, Shaper Savant</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">25 creatures</span></td>
                <td valign="top">4 
                            <a class="nodec" href="javascript:autoCardWindow('Ancestral_Vision')">Ancestral Vision</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Cryptic_Command')">Cryptic Command</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Flashfreeze')">Flashfreeze</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">12 other spells</span></td>
              </tr>
            </table>
          </td>
          <td class="sidebar" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center">
                  <p class="decktitle">Sideboard</p>
                  <p class="cardcount" />
                </td>
              </tr>
              <tr>
                <td valign="top">4 
                            <a class="nodec" href="javascript:autoCardWindow('Psionic_Blast')">Psionic Blast</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Sower_of_Temptation')">Sower of Temptation</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Teferi,_Mage_of_Zhalfir')">Teferi, Mage of Zhalfir</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Trickbind')">Trickbind</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Unsummon')">Unsummon</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Vendilion_Clique')">Vendilion Clique</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">15 sideboard cards</span></td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </td>
    <td class="right" />
  </tr>
  <tr>
    <td class="bottomleft" />
    <td class="bottom" />
    <td class="bottomright" />
  </tr>
</table>
<br />
<table class="deck" border="0" cellpadding="0" cellspacing="0">
  <tr>
    <td class="topleft" />
    <td class="top" />
    <td class="topright" />
  </tr>
  <tr>
    <td class="left" />
    <td class="content" valign="top">
      <table class="deckcontent" border="0" cellpadding="0" cellspacing="0">
        <tr class="decktop">
          <td class="title">
            <div class="main">
              <heading>Rafael Peralta's Mana Ramp/QnT Hybrid</heading>
            </div>
            <div class="sub">Top 8</div>
          </td>
          <td class="options" align="right">
            <a target="_blank" href="&#xA;                        /magic/samplehand.asp?x=mtg/daily/twtw/1&amp;decknum=8">
              <img src="/magic/images/samplehand.gif" width="39" height="18" border="0" alt="View a sample hand of this deck" align="right" />
            </a>
          </td>
        </tr>
        <tr>
          <td class="maindeck" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center" colspan="2">
                  <p class="decktitle">Main Deck</p>
                  <p class="cardcount">59 cards
                          </p>
                </td>
              </tr>
              <tr>
                <td valign="top">1 
                            <a class="nodec" href="javascript:autoCardWindow('Auntie[s_Hovel')">Auntie's Hovel</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Fire-Lit_Thicket')">Fire-Lit Thicket</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Forest')">Forest</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Fungal_Reaches')">Fungal Reaches</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Gilt-Leaf_Palace')">Gilt-Leaf Palace</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Graven_Cairns')">Graven Cairns</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Karplusan_Forest')">Karplusan Forest</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Llanowar_Wastes')">Llanowar Wastes</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Swamp')">Swamp</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Urborg,_Tomb_of_Yawgmoth')">Urborg, Tomb of Yawgmoth</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Vivid_Crag')">Vivid Crag</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Vivid_Grove')">Vivid Grove</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Vivid_Marsh')">Vivid Marsh</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">21 lands</span><br /><br /><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Bogardan_Hellkite')">Bogardan Hellkite</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Chameleon_Colossus')">Chameleon Colossus</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Oona,_Queen_of_the_Fae')">Oona, Queen of the Fae</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Shriekmaw')">Shriekmaw</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Siege-Gang_Commander')">Siege-Gang Commander</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Wall_of_Roots')">Wall of Roots</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">13 creatures</span></td>
                <td valign="top">4 
                            <a class="nodec" href="javascript:autoCardWindow('Coalition_Relic')">Coalition Relic</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Condemn')">Condemn</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Firespout')">Firespout</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Garruk_Wildspeaker')">Garruk Wildspeaker</a><br />4 
                            <a class="nodec" href="javascript:autoCardWindow('Harmonize')">Harmonize</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Loxodon_Warhammer')">Loxodon Warhammer</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Makeshift_Mannequin')">Makeshift Mannequin</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Mind_Shatter')">Mind Shatter</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Profane_Command')">Profane Command</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">25 other spells</span></td>
              </tr>
            </table>
          </td>
          <td class="sidebar" valign="top">
            <table class="cardgroup">
              <tr>
                <td align="center">
                  <p class="decktitle">Sideboard</p>
                  <p class="cardcount" />
                </td>
              </tr>
              <tr>
                <td valign="top">3 
                            <a class="nodec" href="javascript:autoCardWindow('Bottle_Gnomes')">Bottle Gnomes</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Detritivore')">Detritivore</a><br />3 
                            <a class="nodec" href="javascript:autoCardWindow('Guttural_Response')">Guttural Response</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Loxodon_Warhammer')">Loxodon Warhammer</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Puppeteer_Clique')">Puppeteer Clique</a><br />2 
                            <a class="nodec" href="javascript:autoCardWindow('Razormane_Masticore')">Razormane Masticore</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Squall_Line')">Squall Line</a><br />1 
                            <a class="nodec" href="javascript:autoCardWindow('Unknown_Card')">Unknown Card</a><br /><hr size="1" width="50%" align="left" class="decktotals" /><span class="decktotals">16 sideboard cards</span></td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </td>
    <td class="right" />
  </tr>
  <tr>
    <td class="bottomleft" />
    <td class="bottom" />
    <td class="bottomright" />
  </tr>
</table>
<br />
<p>Here's how the Standard metagame shaped up:</p>
<p>Merfolk 4<br /> Mono-red 4<br /> Reveillark 3<br /> Black-green Elves 3<br /> Mana Ramp 3<br /> Red-green Aggro 3<br /> Faeries 2<br /> Swath Storm 2<br /> Black-red Tokens/Torrent 2<br /> Quick 'n' Toast 2<br /> White-green Elves 1<br /> Mono-green Elves 1<br /> Mono-green Warriors 1<br /> Zur the Enchanter 1<br /> Mono-white Martyr 1</p>
<p>By deck style:</p>
<p>Red Aggro (Mono-red, Red-green, Red-black): 9<br /> Board Control (Reveillark, QnT, Mana Ramp): 8<br /> Aggro/Control Blue/x (Faeries and Merfolk): 6<br /> Green/x Aggro (Elves, Warriors): 6<br /> Combo (Swath, Swans): 2<br /> Other (Zur, Martyr): 2</p>
<p>We hope to bring you more Nationals updates in the coming weeks as the national championship season winds down.</p>
<h3>Firestarter: <i>Lorwyn/Shadowmoor</i> Finals</h3>
<p>Are you playing in a PTQ this weekend? Better yet, are you playing in two? What deck are you taking and why? Head to the forums and let me know what your <b>Magic</b> plans for the last weekend of the summer are!</p>
        </div>
        <div id="ctl00_ctl00_ContentPlaceHolder1_mainContent_Article_footerPanel" class="article-footer">
            <ul class="footer-links">
                <li><a href="http://forums.gleemax.com/showthread.php?t=1081161" title="Click to visit the message boards."><img src="/Magic/Assets/icon_discuss.gif" alt="" /><span class="text">Discuss on the message boards</span></a></li>
                <li class="email"><a href="/company/emailtoauthor.asp?author=Brian David-Marshall&amp;headline=Back to School" target="_blank" onclick="window.open('/company/emailtoauthor.asp?author=Brian David-Marshall&amp;headline=Back to School', 'authorEmailWindow', 'left=150, top=50, screenX=200, screenY=100, resizable=yes, scrollbars=no, toolbar=no, width=455, height=500'); return false" title="Click to send email to the author."><img alt="Email the Author" src="/Magic/Assets/icon_respond.gif" /> <span class="text">Respond via email</span></a></li>
                <li><a href="/Magic/Magazine/Archive.aspx?tag=The Week That Was&description=The Week That Was" title="Click to visit the 'The Week That Was' Archive."><img src="/mtg/images/magazine/archive/TheWeekThatWas_small.jpg" alt="" /><span class="text">The Week That Was Archive</span></a></li>
            </ul>
        </div>
    
</div>
    
    
    
</div>
<div class="article-bottom"></div>
    </div><!-- /content -->
    

		</div><!-- /centerColumn -->
		
		<div id="ctl00_ctl00_ContentPlaceHolder1_SideAdSpace">
	
	        <div id="rightColumn">
               <div class="sideAd">
                    <p id="rightAdvertisement"></p>
                </div>
                
		        

	        </div><!-- /rightColumn -->
	    
</div>
		
	</div><!-- /wrapper -->
	
	


<div id="leftColumn">
    <div id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_leftNav">
        
        
        <ul id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_magazine" class="tier1 magazine">
            <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_columns" class="parent active">
                <a href="/Magic/Magazine/Archive.aspx?tag=Column" class="columns" title="Columns">
                    <span></span>Columns
                </a>
                <ul>
                    <li>
                        <a href="Archive.aspx?tag=Making Magic&description=Making Magic" title="Making Magic">
                            Making Magic
                        </a>
                    </li>
                    <li>
                        <a href="Archive.aspx?tag=Limited Information&description=Limited Information" title="Limited Information">
                            Limited Information
                        </a>
                    </li>
                    <li>
                        <a href="Archive.aspx?tag=Serious Fun&description=Serious Fun" title="Serious Fun">
                            Serious Fun
                        </a>
                    </li>
                    <li>
                        <a href="Archive.aspx?tag=Savor the Flavor&description=Taste the Magic" title="Savor the Flavor">
                            Savor the Flavor
                        </a>
                    </li>
                    <li>
                        <a href="Archive.aspx?tag=From the Lab&description=House of Cards" title="From the Lab">
                            From the Lab
                        </a>
                    </li>
                    <li>
                        <a href="Archive.aspx?tag=Top Decks&description=Swimming With Sharks" title="Top Decks">
                            Top Decks
                        </a>
                    </li>
                    <li>
                        <a href="Archive.aspx?tag=Building on a Budget&description=Building on a Budget" title="Building on a Budget">
                            Building on a Budget
                        </a>
                    </li>
                    <li>
                        <a href="Archive.aspx?tag=Latest Developments&description=Latest Developments" title="Latest Developments">
                            Latest Developments
                        </a>
                    </li>
                    <li>
                        <a href="Archive.aspx?tag=The Week That Was&description=The Week That Was" title="The Week That Was">
                            The Week That Was
                        </a>
                    </li>
                </ul>
            </li>
            <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_features">
                <a href="Features.aspx?tag=Features" class="features" title="Features">
                    Features
                </a>
            </li>
            <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_news">
                <a href="News.aspx?tag=News" class="news" title="News">
                    News
                </a>
            </li>
            <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_event" class="parent">
                <a href="Events.aspx" class="event" title="Event Coverage">
                    <span></span>Event Coverage
                </a>
                <ul>
                    <li>
                        <a href="Events.aspx?x=mtgevent/coverage" title="Archive">
                            Archive
                        </a>
                    </li>
                    <li>
                        <a href="Events.aspx?x=mtg/daily/eventcoverage/decklists" title="Decklists">
                            Decklists
                        </a>
                    </li>
                    <li>
                        <a href="Events.aspx?x=mtgevent/webcast/home" title="Webcast">
                            Webcast
                        </a>
                    </li>
                    <li>
                        <a href="Events.aspx?x=mtgevent/hof/welcome" title="Pro Tour Hall of Fame">
                            Pro Tour Hall of Fame
                        </a>
                    </li>
                    <li>
                        <a href="Events.aspx?x=protour/standings/poy08" title="Player of the Year">
                            Player of the Year
                        </a>
                    </li>
                    <li>
                        <a href="Events.aspx?x=protour/standings/roy08" title="Rookie of the Year">
                            Rookie of the Year
                        </a>
                    </li>
                    <li>
                        <a href="Events.aspx?x=mtg/daily/eventcoverage/statistics" title="Webcast">
                            Statistics
                        </a>
                    </li>
                </ul>
            </li>
            
            <li id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_downloads" class="parent">
                <a href="Downloads.aspx" class="downloads" title="Downloads">
                    <span></span>Downloads
                </a>
                <ul>
                    <li>
                        <a href="Downloads.aspx?mtg/daily/downloads/wallpapers" title="Wallpapers">
                            Wallpapers
                        </a>
                    </li>
                    <li>
                        <a href="Archive.aspx?tag=podcast&description=Podcast" title="Podcasts">
                            Podcasts
                        </a>
                    </li>
                    <li>
                        <a href="Downloads.aspx?x=mtgevent/webcast/archive" title="Video">
                            Video
                        </a>
                    </li>
                </ul>
            </li>
        </ul>
        
        
        <ul class="tier2">
            <li>
                <a href="http://ww2.wizards.com/gatherer/" target="_blank" 
                    title="Click to visit the Gatherer Magic Card Database." class="gatherer">
                    <img src="/handlers/ResourceService.ashx?type=global&id=MagicChrome&key=ln_gatherer" 
                        alt="Gatherer: The Magic Card Database" />
                </a>
            </li>
            <li>
                <a href="http://forums.gleemax.com/forumdisplay.php?f=131" target="_blank" 
                    title="Click to visit the Forums." class="forums">
                    <img src="/handlers/ResourceService.ashx?type=global&id=MagicChrome&key=ln_forums" 
                        alt="Forums: Connect with the Magic Community" />
                </a>
            </li>
            <li class="locator">
                <div id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_MagicLocator">
	
                    <em>Magic Locator</em>
                    <fieldset>
                        <label><input value="StoresRadio" name="ctl00$ctl00$ContentPlaceHolder1$MagicLeftNavigation$type" type="radio" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_StoresRadio" class="radio" checked="checked" />Stores</label><br /> 
                        <label><input value="EventsRadio" name="ctl00$ctl00$ContentPlaceHolder1$MagicLeftNavigation$type" type="radio" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_EventsRadio" class="radio" />Events</label><br />
                        <input name="ctl00$ctl00$ContentPlaceHolder1$MagicLeftNavigation$Address" type="text" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Address" class="textbox" onfocus="FocusMagicLocatorTextBox(event, this);" onblur="UnfocusMagicLocatorTextBox(event, this);" value="City" />
                        <input type="submit" name="ctl00$ctl00$ContentPlaceHolder1$MagicLeftNavigation$Search" value="Search" id="ctl00_ctl00_ContentPlaceHolder1_MagicLeftNavigation_Search" class="submit" />
                    </fieldset>
                
</div>
            </li>
        </ul>
    </div><!-- /leftNav -->
</div><!-- /leftColumn -->



		        </div><!-- /MasterMainContent -->
        		
		        <!-- Footer -->
		        <div id="footerWrap">
		            <div id="footer">
				        

<div id="footerNav">
    <ul>
        <li><a href="http://www.wizards.com/default.asp?x=aboutus/aboutwizards" title="Click to visit 'About Us' page.">About Us</a></li>
        <li><a href="http://www.wizards.com/default.asp?x=aboutus/jobs" title="Click to visit 'Jobs' page.">Jobs</a></li>
        <li><a href="http://www.wizards.com/default.asp?x=newtothegame" title="Click to visit 'New to the Game?' page.">New to the Game?</a></li>
        <li><a href="http://www.wizards.com/default.asp?x=findastore" title="Click to visit 'Find a Store' page.">Find a Store</a></li>
        <li><a href="http://www.wizards.com/default.asp?x=aboutus/press" title="Click to visit 'Press' page.">Press</a></li>
        <li><a href="http://wizards.custhelp.com/" title="Click to visit 'Help' page.">Help</a></li>
        <li><a href="/Magic/Languages.aspx" title="Click to visit 'Select Language/Country' page.">Select Language/Country</a></li>
        <li><img src="/mtg/images/nav/language_select.gif" alt="Language Selector" /></li>
    </ul>
</div><!-- /footerNav -->
<div id="footerText">
    <p>
        © 1995-2008 Wizards of the Coast, Inc., a subsidiary of Hasbro, Inc. All Rights Reserved.<br />
        <a href="http://www.wizards.com/default.asp?x=copyrightnotice" title="Click to visit 'Terms of Use' page.">Terms of Use</a> | <a href="http://www.wizards.com/default.asp?x=privacystatement" title="Click to visit 'Privacy Statement' page.">Privacy Statement</a>
    </p>
</div><!-- /footerText -->

		            </div><!-- /footer -->
		            <ul id="affiliates">
		                <li>
		                    <a href="http://www.hasbro.com/" title="Click to visit 'Hasbro.com' website." target="_blank">
		                        <img src="http://www.wizards.com/images/welcome0106_hasbro.gif" alt="Hasbro Logo" />
		                    </a>
		                </li>
		                <li>
		                    <a href="http://ww2.wizards.com/Company/Default.aspx?doc=Privacy" target="_blank" title="Click to view 'Privacy Statement' page.">
		                        <img src="http://www.wizards.com/global/images/ectppswizards.gif" alt="ESRB Logo" />
		                    </a>
		                </li>
		            </ul>
		        </div><!-- /footerWrap -->
        		
	        </div><!-- /wrap -->
	    </div><!-- /glowStatic -->
	</div><!-- /glow -->
</div><!-- /container -->


<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="/wEWBwKMl+TYAwLou77+AgLC6tbtCwLQiaCwDwKkk8qOBQKJyNzvAgKK8LikCGmj80iTADp/S7ChrTsgeIFgOBvC" /></form>
</body>
</html>

  id: 704844
  mime_type: text/html
  raw_url: https://web.archive.org/web/20080901041942id_/http://www.wizards.com/magic/Magazine/Article.aspx?x=mtg/daily/twtw/1
  status_code: 200
  time: 2008-09-01 04:19:42
  url: http://www.wizards.com/magic/Magazine/Article.aspx?x=mtg/daily/twtw/1
  view_url: https://web.archive.org/web/20080901041942/http://www.wizards.com/magic/Magazine/Article.aspx?x=mtg/daily/twtw/1
