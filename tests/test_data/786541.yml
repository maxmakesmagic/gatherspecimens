cdx:
  digest: JZDC2KLMXTYM2A6TKI7E6KG35O5VMIG4
  hash_raw_url: a44ef5af290bae61f1474f2b700ab1d84dcce19a8011c18ad3f9f2e7dcb742fe
  id: 786541
  key: com,wizards)/magic/magazine/article.aspx?x=mtgcom/daily/cm82
  length: 13386
  mime_type: text/html
  raw_url: https://web.archive.org/web/20080827084002id_/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtgcom/daily/cm82
  status_code: 200
  timestamp: 2008-08-27 08:40:02
  url: http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtgcom/daily/cm82
  view_url: https://web.archive.org/web/20080827084002/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtgcom/daily/cm82
memento:
  hash_raw_url: a44ef5af290bae61f1474f2b700ab1d84dcce19a8011c18ad3f9f2e7dcb742fe
  html_content: DQoNCjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiLS8vVzNDLy9EVEQgWEhUTUwgMS4wIFN0cmljdC8vRU4iDQogICAgICAgICJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS1zdHJpY3QuZHRkIj4NCg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPg0KPGhlYWQ+PGxpbmsgaHJlZj0iL0Fzc2V0cy9zaXRlLmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCIgLz48bGluayBocmVmPSIvbWFnaWMvc3R5bGVzLmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCIgLz48bGluayBocmVmPSIvTWFnaWMvTWFnYXppbmUvYXJ0aWNsZS5jc3MiIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiIC8+PG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiIC8+PG1ldGEgbmFtZT0iRGVzY3JpcHRpb24iIGNvbnRlbnQ9IldpemFyZHMgb2YgdGhlIENvYXN0IiAvPjxtZXRhIG5hbWU9IktleXdvcmRzIiBjb250ZW50PSJtYWdpYywgdHJhZGluZyBjYXJkIGdhbWVzLCBkdW5nZW9ucywgZHJhZ29ucywgbmVvcGV0cywgbWluaWF0dXJlcywgcm9sZXBsYXlpbmcgZ2FtZXMsIHN0YXIgd2FycywgZDIwLCBkMjAgTW9kZXJuLCB4aWFvbGluIHNob3dkb3duLCBraWRzIG5leHQgZG9vciwgaGVjYXRvbWIsIGF4aXMgJmFtcDsgYWxsaWVzLCBhdmFsb24gaGlsbCwgbWlycm9yc3RvbmUsIGRyZWFtYmxhZGUsIHJvYm8gcmFsbHkiIC8+PHRpdGxlPg0KCURhaWx5IE1URyA6IE1hZ2ljOiBUaGUgR2F0aGVyaW5nDQo8L3RpdGxlPg0KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9Bc3NldHMvc2NyaXB0cy9wcm90b3R5cGUuanMiPjwvc2NyaXB0Pg0KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9Bc3NldHMvc2NyaXB0cy9uYXZpZ2F0aW9uLmpzIj48L3NjcmlwdD4NCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvQXNzZXRzL3NjcmlwdHMvZ2xvYmFsLmpzIj48L3NjcmlwdD4NCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YVNjcmlwdCIgc3JjPSIvQXNzZXRzL3NjcmlwdHMvaGJ4X29ucGFnZV9zdGFuZGFyZC5qcyI+PC9zY3JpcHQ+DQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL0Fzc2V0cy9zY3JpcHRzL2hieC5qcyI+PC9zY3JpcHQ+DQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL0Fzc2V0cy9zY3JpcHRzL21pc2NlbGxhbmVvdXMuanMiPjwvc2NyaXB0Pg0KICAgIDxsaW5rIGhyZWY9Ii9Bc3NldHMvcHJpbnQuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0IiBtZWRpYT0icHJpbnQiIC8+DQogICAgPCEtLVtpZiBJRV0+PGxpbmsgaHJlZj0iL2dsb2JhbC9wcmludF9pZTcuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0IiBtZWRpYT0icHJpbnQiIC8+PCFbZW5kaWZdIC0tPg0KPHNjcmlwdCBzcmM9Ii9tYWdpYy9uYXZpZ2F0aW9uLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0PjwvaGVhZD4NCjxib2R5Pg0KPGZvcm0gbmFtZT0iYXNwbmV0Rm9ybSIgbWV0aG9kPSJwb3N0IiBhY3Rpb249IkFydGljbGUuYXNweD94PW10Z2NvbSUyZmRhaWx5JTJmY204MiIgaWQ9ImFzcG5ldEZvcm0iPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX19WSUVXU1RBVEUiIGlkPSJfX1ZJRVdTVEFURSIgdmFsdWU9Ii93RVBEd1VMTFRFeU1qUXdOVGt6TURSa0dBRUZIbDlmUTI5dWRISnZiSE5TWlhGMWFYSmxVRzl6ZEVKaFkydExaWGxmWHhZQ0JUOWpkR3d3TUNSamRHd3dNQ1JEYjI1MFpXNTBVR3hoWTJWSWIyeGtaWEl4SkUxaFoybGpUR1ZtZEU1aGRtbG5ZWFJwYjI0a1UzUnZjbVZ6VW1Ga2FXOEZQMk4wYkRBd0pHTjBiREF3SkVOdmJuUmxiblJRYkdGalpVaHZiR1JsY2pFa1RXRm5hV05NWldaMFRtRjJhV2RoZEdsdmJpUkZkbVZ1ZEhOU1lXUnBienRCRjZ6Zmdac2pMWnEyczFoOU9wcXNrNmNXIiAvPg0KDQoNCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCi8vPCFbQ0RBVEFbDQoNCg0KDQoNCmZ1bmN0aW9uIENsaWVudElEcygpIHt9DQpDbGllbnRJRHMuZm9ybTEgPSAnYXNwbmV0Rm9ybSc7DQpDbGllbnRJRHMuaGVhZGVyID0gJ2N0bDAwX2N0bDAwX2hlYWRlcic7DQpDbGllbnRJRHMuc2VhcmNoQ29udHJvbFRleHRCb3ggPSAnY3RsMDBfY3RsMDBfY3RsMDdfc2VhcmNoQ29udHJvbFRleHRCb3gnOw0KQ2xpZW50SURzLnNlYXJjaENvbnRyb2xTdWJtaXRCdXR0b24gPSAnY3RsMDBfY3RsMDBfY3RsMDdfc2VhcmNoQ29udHJvbFN1Ym1pdEJ1dHRvbic7DQpDbGllbnRJRHMuQ29udGVudFBsYWNlSG9sZGVyMSA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxJzsNCkNsaWVudElEcy5NYWdpY1RvcE5hdmlnYXRpb24gPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY1RvcE5hdmlnYXRpb24nOw0KQ2xpZW50SURzLnRvcE5hdmlnYXRpb24gPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY1RvcE5hdmlnYXRpb25fdG9wTmF2aWdhdGlvbic7DQpDbGllbnRJRHMubXVsdGl2ZXJzZSA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljVG9wTmF2aWdhdGlvbl9tdWx0aXZlcnNlJzsNCkNsaWVudElEcy50Y2cgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY1RvcE5hdmlnYXRpb25fdGNnJzsNCkNsaWVudElEcy5tYWdhemluZSA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljVG9wTmF2aWdhdGlvbl9tYWdhemluZSc7DQpDbGllbnRJRHMuZGcgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY1RvcE5hdmlnYXRpb25fZGcnOw0KQ2xpZW50SURzLnB1Ymxpc2hpbmcgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY1RvcE5hdmlnYXRpb25fcHVibGlzaGluZyc7DQpDbGllbnRJRHMuSGVhZGVyQWRTcGFjZSA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX0hlYWRlckFkU3BhY2UnOw0KQ2xpZW50SURzLm1haW5Db250ZW50ID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnQnOw0KQ2xpZW50SURzLkFydGljbGUgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9tYWluQ29udGVudF9BcnRpY2xlJzsNCkNsaWVudElEcy5hcnRpY2xlVG9wID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9hcnRpY2xlVG9wJzsNCkNsaWVudElEcy5BcnRpY2xlVHlwZSA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX21haW5Db250ZW50X0FydGljbGVfQXJ0aWNsZVR5cGUnOw0KQ2xpZW50SURzLmhlYWRlclBhbmVsID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9oZWFkZXJQYW5lbCc7DQpDbGllbnRJRHMuQXJ0aWNsZUhlYWRpbmcgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9tYWluQ29udGVudF9BcnRpY2xlX0FydGljbGVIZWFkaW5nJzsNCkNsaWVudElEcy5BcnRpY2xlQnlsaW5lID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9BcnRpY2xlQnlsaW5lJzsNCkNsaWVudElEcy5saW5rc1BhbmVsID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9saW5rc1BhbmVsJzsNCkNsaWVudElEcy5FbWFpbEZyaWVuZCA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX21haW5Db250ZW50X0FydGljbGVfRW1haWxGcmllbmQnOw0KQ2xpZW50SURzLk1lc3NhZ2VCb2FyZCA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX21haW5Db250ZW50X0FydGljbGVfTWVzc2FnZUJvYXJkJzsNCkNsaWVudElEcy5QcmludEZyaWVuZGx5ID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9QcmludEZyaWVuZGx5JzsNCkNsaWVudElEcy5BdXRob3JJbWFnZSA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX21haW5Db250ZW50X0FydGljbGVfQXV0aG9ySW1hZ2UnOw0KQ2xpZW50SURzLmFyY2hpdmVTZWN0aW9uID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9hcmNoaXZlU2VjdGlvbic7DQpDbGllbnRJRHMuVHlwZUFyY2hpdmUgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9tYWluQ29udGVudF9BcnRpY2xlX1R5cGVBcmNoaXZlJzsNCkNsaWVudElEcy5BdXRob3JBcmNoaXZlID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9BdXRob3JBcmNoaXZlJzsNCkNsaWVudElEcy5jb250ZW50QmxvY2sgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9tYWluQ29udGVudF9BcnRpY2xlX2NvbnRlbnRCbG9jayc7DQpDbGllbnRJRHMuZm9vdGVyUGFuZWwgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9tYWluQ29udGVudF9BcnRpY2xlX2Zvb3RlclBhbmVsJzsNCkNsaWVudElEcy5NZXNzYWdlQm9hcmRGb290ZXIgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9tYWluQ29udGVudF9BcnRpY2xlX01lc3NhZ2VCb2FyZEZvb3Rlcic7DQpDbGllbnRJRHMuQXV0aG9yRW1haWxGb29vdGVyID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9BdXRob3JFbWFpbEZvb290ZXInOw0KQ2xpZW50SURzLlR5cGVBcmNoaXZlRm9vdGVyID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9UeXBlQXJjaGl2ZUZvb3Rlcic7DQpDbGllbnRJRHMuRXJyb3JNZXNzYWdlID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9FcnJvck1lc3NhZ2UnOw0KQ2xpZW50SURzLlNpZGVBZFNwYWNlID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfU2lkZUFkU3BhY2UnOw0KQ2xpZW50SURzLnNpZGVDb250ZW50ID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfc2lkZUNvbnRlbnQnOw0KQ2xpZW50SURzLk1hZ2ljTGVmdE5hdmlnYXRpb24gPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uJzsNCkNsaWVudElEcy5sZWZ0TmF2ID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9sZWZ0TmF2JzsNCkNsaWVudElEcy5wbGFuZXN3YWxrZXJzID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9wbGFuZXN3YWxrZXJzJzsNCkNsaWVudElEcy5jb2xvcnMgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX2NvbG9ycyc7DQpDbGllbnRJRHMucGxhbmVzID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9wbGFuZXMnOw0KQ2xpZW50SURzLm5ld1RvTWFnaWMgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX25ld1RvTWFnaWMnOw0KQ2xpZW50SURzLnByb2R1Y3RzID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9wcm9kdWN0cyc7DQpDbGllbnRJRHMudG91cm5hbWVudHMgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX3RvdXJuYW1lbnRzJzsNCkNsaWVudElEcy5yZXNvdXJjZXMgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX3Jlc291cmNlcyc7DQpDbGllbnRJRHMuY29sdW1ucyA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljTGVmdE5hdmlnYXRpb25fY29sdW1ucyc7DQpDbGllbnRJRHMuZmVhdHVyZXMgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX2ZlYXR1cmVzJzsNCkNsaWVudElEcy5uZXdzID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9uZXdzJzsNCkNsaWVudElEcy5ldmVudCA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljTGVmdE5hdmlnYXRpb25fZXZlbnQnOw0KQ2xpZW50SURzLmRvd25sb2FkcyA9ICdjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljTGVmdE5hdmlnYXRpb25fZG93bmxvYWRzJzsNCkNsaWVudElEcy5tb2wgPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX21vbCc7DQpDbGllbnRJRHMuTWFnaWNMb2NhdG9yID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9NYWdpY0xvY2F0b3InOw0KQ2xpZW50SURzLlN0b3Jlc1JhZGlvID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9TdG9yZXNSYWRpbyc7DQpDbGllbnRJRHMuRXZlbnRzUmFkaW8gPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX0V2ZW50c1JhZGlvJzsNCkNsaWVudElEcy5BZGRyZXNzID0gJ2N0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9BZGRyZXNzJzsNCkNsaWVudElEcy5TZWFyY2ggPSAnY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX1NlYXJjaCc7DQpDbGllbnRJRHMuTWFnaWNGb290ZXIgPSAnY3RsMDBfY3RsMDBfTWFnaWNGb290ZXInOw0KdmFyIHRleHRCb3hIYXNoID0gbmV3IEhhc2goIHsgIH0gKTsvL11dPg0KPC9zY3JpcHQ+DQoNCg0KPGRpdiBpZD0iY29udGFpbmVyIj4NCiAgICA8ZGl2IGlkPSJnbG93Ij4NCiAgICAgICAgPGRpdiBpZD0iZ2xvd1N0YXRpYyI+DQoJICAgICAgICA8ZGl2IGlkPSJ3cmFwIj4NCiAgICAgICAgCQkNCgkJICAgICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iPjxhIGhyZWY9IiNNYXN0ZXJNYWluQ29udGVudCIgdGl0bGU9InNraXAgdG8gY29udGVudCI+c2tpcCB0byBjb250ZW50PC9hPjwvZGl2Pg0KICAgICAgICAJCQ0KCQkgICAgICAgIDxkaXYgaWQ9ImN0bDAwX2N0bDAwX2hlYWRlciI+DQogICAgICAgIAkJCQ0KCQkJICAgICAgICA8ZGl2IGlkPSJtYWluTmF2Ij4NCgkJCQkgICAgICAgIDwhLS0gVG9wLWxldmVsIG1lbnVzIChpZiB3ZSB3ZXJlIHVzaW5nIHRoZW0pIC0tPg0KCQkJCSAgICAgICAgPGEgaHJlZj0iLyIgdGl0bGU9IkNsaWNrIHRvIHJldHVybiB0byB0aGUgV2l6YXJkcy5jb20gaG9tZSBwYWdlLiI+V2l6YXJkcyBvZiB0aGUgQ29hc3Q8L2E+DQoJCQkgICAgICAgIDwvZGl2PjwhLS0gL21haW5OYXYgLS0+DQoNCgkJCSAgICAgICAgPCEtLSBXaXphcmRzIExvZ28gLS0+DQoJCQkgICAgICAgIDxoMSBpZD0iV2l6YXJkc0xvZ28iPg0KCQkJCSAgICAgICAgPGEgaHJlZj0iLyIgdGl0bGU9IkNsaWNrIHRvIHJldHVybiB0byB0aGUgV2l6YXJkcy5jb20gaG9tZSBwYWdlLiI+DQoJCQkJICAgICAgICAgICAgPGltZyBzcmM9Ii9Bc3NldHMvaW1hZ2VzL3dvdGNfbG9nby5naWYiIGFsdD0iV2l6YXJkcyBvZiB0aGUgQ29hc3QiIC8+DQoJCQkJICAgICAgICA8L2E+CQkJCSAgICAgICAgICAgICAgICAgICAgIA0KCQkJICAgICAgICA8L2gxPg0KCQkJICAgICAgICAgICAgICAgCQkJDQoJCSAgICAgICAgPC9kaXY+PCEtLSAvaGVhZGVyIC0tPg0KICAgICAgICAJCQ0KCQkgICAgICAgIDwhLS0gTWFpbiBDb250ZW50IC0tPg0KCQkgICAgICAgIDxkaXYgaWQ9Ik1hc3Rlck1haW5Db250ZW50Ij4NCgkJCSAgICAgICAgPCEtLSB0aGlzIG5lZWRzIHRvIGJlIGhlcmUgZm9yIElFNiBmb3Igc29tZSBzdHJhbmdlIHJlYXNvbiAtLT4NCiAgIAkJCSAgICAgICAgDQo8ZGl2IGNsYXNzPSJzZWFyY2hDb250cm9sIj4NCiAgICA8cD4NCiAgICAgICAgPGlucHV0IG5hbWU9ImN0bDAwJGN0bDAwJGN0bDA3JHNlYXJjaENvbnRyb2xUZXh0Qm94IiB0eXBlPSJ0ZXh0IiBpZD0iY3RsMDBfY3RsMDBfY3RsMDdfc2VhcmNoQ29udHJvbFRleHRCb3giIG1heGxlbmd0aD0iMTAwIiBjbGFzcz0idGV4dEJveCIgb25mb2N1cz0iRm9jdXNTZWFyY2hUZXh0Qm94KGV2ZW50LCB0aGlzKTsiIG9uYmx1cj0iVW5mb2N1c1NlYXJjaFRleHRCb3goZXZlbnQsIHRoaXMpOyIgdmFsdWU9IlNlYXJjaCBXaXphcmRzLmNvbSIgLz4NCiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iY3RsMDAkY3RsMDAkY3RsMDckc2VhcmNoQ29udHJvbFN1Ym1pdEJ1dHRvbiIgdmFsdWU9IlNlYXJjaCIgaWQ9ImN0bDAwX2N0bDAwX2N0bDA3X3NlYXJjaENvbnRyb2xTdWJtaXRCdXR0b24iIGNsYXNzPSJzdWJtaXRCdXR0b24iIC8+DQogICAgICAgIA0KICAgIDwvcD4NCjwvZGl2Pg0KCQkJICAgICAgICANCg0KCTxkaXYgaWQ9ImJhbm5lckdyYXBoaWMiPg0KCSAgICA8aDIgaWQ9Ik1hZ2ljTG9nbyI+DQoJICAgICAgICA8YSBocmVmPSIvTWFnaWMvIiB0aXRsZT0iQ2xpY2sgdG8gcmV0dXJuIHRvIHRoZSBNYWdpYzogVGhlIEdhdGhlcmluZyBob21lIHBhZ2UuIj4NCgkgICAgICAgICAgICA8aW1nIHNyYz0iL01hZ2ljL0Fzc2V0cy9tYWdpY19sb2dvLmdpZiIgYWx0PSJNYWdpYzogVGhlIEdhdGhlcmluZyIgLz4NCgkgICAgICAgIDwvYT4NCgkgICAgPC9oMj4NCgk8L2Rpdj4NCgkNCgk8ZGl2IGlkPSJ3cmFwcGVyIj4NCgkNCgkgICAgDQoNCg0KPGRpdiBpZD0idG9wTmF2Ij4NCiAgICA8dWwgaWQ9ImN0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNUb3BOYXZpZ2F0aW9uX3RvcE5hdmlnYXRpb24iPg0KICAgICAgICA8bGkgaWQ9ImN0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNUb3BOYXZpZ2F0aW9uX211bHRpdmVyc2UiPg0KICAgICAgICAgICAgPGEgaHJlZj0iLi4vTXVsdGl2ZXJzZS9EZWZhdWx0LmFzcHgiIGNsYXNzPSJtdWx0aXZlcnNlIiB0aXRsZT0iVGhlIE11bHRpdmVyc2UiPg0KICAgICAgICAgICAgICAgIFRoZSBNdWx0aXZlcnNlDQogICAgICAgICAgICA8L2E+DQogICAgICAgIDwvbGk+DQogICAgICAgIDxsaSBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY1RvcE5hdmlnYXRpb25fdGNnIj4NCiAgICAgICAgICAgIDxhIGhyZWY9Ii4uL1RDRy9EZWZhdWx0LmFzcHgiIGNsYXNzPSJ0Y2ciIHRpdGxlPSJUcmFkaW5nIENhcmQgR2FtZSI+DQogICAgICAgICAgICAgICAgVHJhZGluZyBDYXJkIEdhbWUNCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgPC9saT4NCiAgICAgICAgPGxpIGlkPSJjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljVG9wTmF2aWdhdGlvbl9tYWdhemluZSIgY2xhc3M9ImFjdGl2ZSI+DQogICAgICAgICAgICA8YSBocmVmPSJEZWZhdWx0LmFzcHgiIHRpdGxlPSJEYWlseSBNVEciIGNsYXNzPSJtYWdhemluZSI+DQogICAgICAgICAgICAgICAgRGFpbHkgTVRHDQogICAgICAgICAgICA8L2E+DQogICAgICAgIDwvbGk+DQogICAgICAgIDxsaSBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY1RvcE5hdmlnYXRpb25fZGciPg0KICAgICAgICAgICAgPGEgaHJlZj0iLi4vRGlnaXRhbC9EZWZhdWx0LmFzcHgiIGNsYXNzPSJkZyIgdGl0bGU9IkRpZ2l0YWwgR2FtZXMiPg0KICAgICAgICAgICAgICAgIERpZ2l0YWwgR2FtZXMNCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgPC9saT4NCiAgICAgICAgPGxpIGlkPSJjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljVG9wTmF2aWdhdGlvbl9wdWJsaXNoaW5nIj4NCiAgICAgICAgICAgIDxhIGhyZWY9Ii4uL1B1Ymxpc2hpbmcvRGVmYXVsdC5hc3B4IiBjbGFzcz0icHVibGlzaGluZyIgdGl0bGU9IlB1Ymxpc2hpbmciPg0KICAgICAgICAgICAgICAgIFB1Ymxpc2hpbmcNCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgPC9saT4NCiAgICA8L3VsPg0KPC9kaXY+PCEtLSAvdG9wTmF2IC0tPg0KICAgICAgICANCiAgICAgICAgPGRpdiBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9IZWFkZXJBZFNwYWNlIj4NCgkNCiAgICAgICAgICAgIDxkaXYgaWQ9ImFkc3BhY2VSb3ciPg0KICAgICAgICAgICAgICAgIDxwIGlkPSJ0b3BBZHZlcnRpc2VtZW50Ij48L3A+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgDQo8L2Rpdj4NCiAgICAgICAgDQoJCTxkaXYgaWQ9ImNlbnRlckNvbHVtbiI+DQoJCSAgICANCiAgICANCiAgICA8ZGl2IGlkPSJjb250ZW50Ij4NCiAgICAgICAgPGRpdiBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9tYWluQ29udGVudF9BcnRpY2xlX2FydGljbGVUb3AiIGNsYXNzPSJhcnRpY2xlLXRvcCI+PGgzPjxpbWcgc3JjPSIvTWFnaWMvTWFnYXppbmUvSW1hZ2VzL2FydGljbGVfSG91c2Vfb2ZfQ2FyZHMuZ2lmIiBhbHQ9IkhvdXNlX29mX0NhcmRzIiAvPjwvaDM+PC9kaXY+DQo8ZGl2IGNsYXNzPSJjZW50ZXItY29udGVudCI+DQoNCiAgICA8ZGl2IGlkPSJjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX21haW5Db250ZW50X0FydGljbGVfQXJ0aWNsZSI+DQoJDQogICAgICAgIDxkaXYgaWQ9ImN0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfbWFpbkNvbnRlbnRfQXJ0aWNsZV9oZWFkZXJQYW5lbCIgY2xhc3M9ImhlYWRpbmciPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICAgICAgICAgIDxoND5LYWVydmVrIHRoZSBIYWlybGVzczwvaDQ+DQogICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJieWxpbmUiPkNocmlzIE1pbGxhcjxiciAvPldlZG5lc2RheSwgQXVndXN0IDAxLCAyMDA3PC9oNT4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9tYWluQ29udGVudF9BcnRpY2xlX2xpbmtzUGFuZWwiIGNsYXNzPSJsaW5rcyI+DQogICAgICAgICAgICAgICAgPHVsIGlkPSJoZWFkaW5nLWxpbmtzIj4NCiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9nbG9iYWwvZW1haWx0b2ZyaWVuZC5hc3A/dXJsPS9NYWdpYy9NYWdhemluZS9BcnRpY2xlLmFzcHg/eD1tdGdjb21fZGFpbHlfY204MiZhbXA7aGVhZGxpbmU9S2FlcnZlayB0aGUgSGFpcmxlc3MiIHRhcmdldD0iX2JsYW5rIiBvbmNsaWNrPSJ3aW5kb3cub3BlbignL2dsb2JhbC9lbWFpbHRvZnJpZW5kLmFzcD91cmw9L01hZ2ljL01hZ2F6aW5lL0FydGljbGUuYXNweD94PW10Z2NvbV9kYWlseV9jbTgyJmFtcDtoZWFkbGluZT1LYWVydmVrIHRoZSBIYWlybGVzcycsICdlbWFpbFdpbmRvdycsICdsZWZ0PTE1MCwgdG9wPTUwLCBzY3JlZW5YPTIwMCwgc2NyZWVuWT0xMDAsIHJlc2l6YWJsZT15ZXMsIHNjcm9sbGJhcnM9bm8sIHRvb2xiYXI9bm8sIHdpZHRoPTQ4MCwgaGVpZ2h0PTU0MCcpOyByZXR1cm4gZmFsc2UiIHRpdGxlPSJDbGljayB0byBzZW5kIGVtYWlsIHRvIGEgZnJpZW5kLiI+PGltZyBzcmM9Ii9NYWdpYy9Bc3NldHMvaWNvbl9lbWFpbC5naWYiIGFsdD0iRW1haWwiIC8+PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vYm9hcmRzMS53aXphcmRzLmNvbS9zaG93dGhyZWFkLnBocD90PTg5NzM5MSIgdGl0bGU9IkNsaWNrIHRvIHZpc2l0IHRoZSBtZXNzYWdlIGJvYXJkcy4iPjxpbWcgc3JjPSIvTWFnaWMvQXNzZXRzL2ljb25fYm9hcmRzLmdpZiIgYWx0PSJCb2FyZHMiIC8+PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgIDxsaT48YSBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9tYWluQ29udGVudF9BcnRpY2xlX1ByaW50RnJpZW5kbHkiIHRpdGxlPSJDbGljayB0byB2aWV3IHByaW50ZXIgZnJpZW5kbHkgcGFnZS4iIGhyZWY9Ii9NYWdpYy9NYWdhemluZS9BcnRpY2xlLmFzcHg/eD1tdGdjb20vZGFpbHkvY204MiZhbXA7cHJpbnQ9dHJ1ZSI+PGltZyBzcmM9Ii9NYWdpYy9Bc3NldHMvaWNvbl9wcmludC5naWYiIGFsdD0iUHJpbnQiIC8+PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJhdXRob3ItaW1hZ2UiPg0KICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL21hZ2ljL2ltYWdlcy9tdGdjb20vYXV0aG9ycGljcy9hdXRob3JwaWNfY2hyaXNtaWxsYXIuanBnIiBhbHQ9IkF1dGhvciBJbWFnZSIgLz4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX21haW5Db250ZW50X0FydGljbGVfYXJjaGl2ZVNlY3Rpb24iPg0KCQkJCQk8dWwgaWQ9ImFyY2hpdmUtbGlua3MiPg0KCQkJCQkgICAgPGxpPjxhIGhyZWY9Ii9NYWdpYy9NYWdhemluZS9BcmNoaXZlLmFzcHg/dGFnPUhvdXNlIG9mIENhcmRzJmRlc2NyaXB0aW9uPUhvdXNlIG9mIENhcmRzIiB0aXRsZT0iQ2xpY2sgdG8gdmlzaXQgdGhlICdIb3VzZSBvZiBDYXJkcycgYXJjaGl2ZS4iPkhvdXNlIG9mIENhcmRzIEFyY2hpdmU8L2E+PC9saT4NCgkJCQkJICAgIDxsaT48YSBocmVmPSIvTWFnaWMvTWFnYXppbmUvQXJjaGl2ZS5hc3B4P2F1dGhvcj1DaHJpcyBNaWxsYXIiIHRpdGxlPSJDbGljayB0byB2aXNpdCB0aGUgJ0NocmlzIE1pbGxhcicgYXJjaGl2ZS4iPkNocmlzIE1pbGxhciBBcmNoaXZlPC9hPjwvbGk+DQoJCQkJCTwvdWw+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCgkgICAgPC9kaXY+DQoJICAgIDxkaXYgY2xhc3M9ImFydGljbGUtY29udGVudCI+DQogICAgICAgICAgICA8cD4oc25pZmZzKTwvcD4NCjxwPg0KICA8aW1nIGJvcmRlcj0iMCIgYWxpZ249ImxlZnQiIHNyYz0iL21hZ2ljL2ltYWdlcy9kcm9wY2FwX0kuanBnIiBhbHQ9IlRoZSBsZXR0ZXIgSSEiIC8+cyB0aGF0IGxvdmUgaW4gdGhlIGFpcj8gSSBob3BlIHNvLiBJIGNhbid0IHJlYWxseSB0ZWxsIGJlY2F1c2Ugb2YgdGhlc2UgcGFpbnQgZnVtZXMuIEVpdGhlciB3YXksIEknbSBmZWVsaW5nIGEgbGl0dGxlIGxpZ2h0LWhlYWRlZC4gQXMgbWFueSBvZiB5b3UgYXJlIHdlbGwgYXdhcmUsIGl0J3Mgc3VtbWVyIHRpbWUgc28gV2VkZGluZyBTZWFzb24gaXMgZnVsbHkgdW5kZXJ3YXkgaW4gbXkgbmVjayBvZiB0aGUgd29vZHMuIEl0IGNvaW5jaWRlcyB3aXRoIEtpdGNoZW4gQ2FiaW5ldCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1BhaW4nKSI+UGFpbjwvYT50aW5nIFNlYXNvbiwgYXBwYXJlbnRseS4gSSBicmluZyB0aGlzIHVwIGJlY2F1c2UgSSBzcGVudCB0aGlzIHBhc3Qgd2Vla2VuZCBhdHRlbmRpbmcgdGhlIHdlZGRpbmcgb2YgbXkgZnJpZW5kIEdyZWcgKHdobyB5b3UgbWlnaHQgcmVtZW1iZXIgYXMgdGhlIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnVGVyb2hbc19GYWl0aGZ1bCcpIj5UZXJvaCdzIEZhaXRoZnVsPC9hPiBsb3ZlciBmcm9tIG15IFJlamVjdCBSYXJlIERyYWZ0IGFydGljbGVzKSBhbmQgaGlzIGxvdmVseSB3aWZlIFNhcmFoLjwvcD4NCjxwPkFzIEkndmUgbWVudGlvbmVkIGJlZm9yZSwgbXkgZ2FtaW5nIGdyb3VwIGlzIHVuZm9ydHVuYXRlbHkgc3ByZWFkIG92ZXIgdGhlIHByb3ZpbmNlLCBidXQgd2Ugc3RpbGwgbWFuYWdlIHRvIG1lZXQgdXAgZXZlcnkgZmV3IG1vbnRocyBmb3IgYW4gaW50ZW5zZSB3ZWVrZW5kIG9mIDxiPk1hZ2ljOiBUaGUgR2F0aGVyaW5nPC9iPiwgc2xlZXAgZGVwcml2YXRpb24sIGFuZCBhbiBlbWJhcnJhc3NpbmcgYW1vdW50IG9mIFNuZWFrIEtpbmcuIFdlIHVzdWFsbHkgcGxheSBzb21lIGtpbmQgb2YgdG91cm5hbWVudCAoUmVqZWN0IFJhcmUgRHJhZnQsIEhpZ2hsYW5kZXIsIHBsYWluLW9sZCB3aGF0ZXZlcidzLXJlY2VudCBib29zdGVyIGRyYWZ0KSB0byBnaXZlIHRoZSB3ZWVrZW5kIHNvbWUgc3RydWN0dXJlLiBUbyBhZGQgYSBsaXR0bGUgc29tZXRoaW5nIGV4dHJhIHRvIHRoZSBwcm9jZWVkaW5ncywgdG8gc2hhcnBlbiBldmVyeW9uZSdzIGNvbXBldGl0aXZlIGluc3RpbmN0cywgd2UgdXN1YWxseSBlc3RhYmxpc2ggc29tZSBraW5kIG9mIHByaXplIHBheW91dC4gQXQgb3VyIGxhc3QgZ2V0IHRvZ2V0aGVyLCB3ZSBwbGF5ZWQgYSBsaXR0bGUgPGk+VGltZSBTcGlyYWw8L2k+IFNlYWxlZCBEZWNrLCBidXQgdG8ga2VlcCBjb3N0cyBkb3duLCB3ZSBkZWNpZGVkIHRoYXQgd2Ugd291bGRuJ3QgcGxheSBmb3IgcHJpemVzLiBJIGtub3csIGl0IGdvZXMgYWdhaW5zdCBldmVyeXRoaW5nIGtpdGNoZW4gdGFibGUgPGI+TWFnaWM8L2I+IGlzIHN1cHBvc2VkIHRvIGJlIGFib3V0LiBCcmFnZ2luZyByaWdodHMganVzdCBhcmVuJ3QgZW5vdWdoLCBzaW5jZSB3ZSBhbGwgdGFsayBhIGJpdCBvZiB0cmFzaCBhbnl3YXkgYW5kIHdpdGhvdXQgcGVybWlzc2lvbiE8L3A+DQo8cD4NCiAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdUaGVfVW5zcGVha2FibGUnKSI+DQogICAgPGltZyBib3JkZXI9IjAiIHNyYz0iL21hZ2ljL2ltYWdlcy9jYXJkYXJ0L0NISy9UaGVfVW5zcGVha2FibGUuanBnIiBhbHQ9IlRoZV9VbnNwZWFrYWJsZSIgYWxpZ249InJpZ2h0IiAvPg0KICA8L2E+V2UgZXZlbnR1YWxseSBkZWNpZGVkIHRoYXQgd2Ugd291bGQgbmVlZCBzb21lIHN0YWtlcyBhZnRlciBhbGwsIGFuZCBzaW5jZSB3ZSBrbmV3IEdyZWcgd2FzIGdldHRpbmcgaGl0Y2hlZCBzb29uLCBldmVyeW9uZSAoZXhjZXB0IEdyZWcsIEkgZ3Vlc3MpIGFncmVlZCB0aGF0IHRoZSB3aW5uZXIgb2YgdGhlIHRvdXJuYW1lbnQgd291bGQgZ2V0IHRvIGNob29zZSB0aGUgbmFtZSBmb3IgR3JlZydzIGZpcnN0LWJvcm4gY2hpbGQuIE5vIHByaXplIG1vbmV5LCBubyBQcm8gcG9pbnRzLiBJdCdzIGtpbmQgb2YgbGlrZSB0aGUgPGI+TWFnaWM8L2I+IEludml0YXRpb25hbCwgZXhjZXB0IHlvdSByZWFsbHkgZ2V0IHRvIHNjcmV3IG92ZXIgeW91ciBmcmllbmQuIEZvciBhIG51bWJlciBvZiByZWFzb25zLCBJIG9mZmVyZWQgdXAgRXJvbi4uLiB0aGUgUmVsZW50bGVzcyEgKGFsbCBwdW5jdHVhdGlvbiBpbmNsdWRlZCkuIEdvb2QgZm9yIGEgYm95LCBnaXJsLCBvciBMZWdlbmRhcnkgUm9ndWUsIEkgdGhpbmsuIFdpdGggbGl0dGxlIHByb21wdGluZywgR3JlZyBoaW1zZWxmIHN1Z2dlc3RlZCBLYWVydmVrIHRoZSBIYWlybGVzcywgYnV0IG5vdGVkIHRoYXQgaGUgd291bGQgaGF2ZSB0byBydW4gaXQgYnkgU2FyYWggZmlyc3QuIFR3byBvZiB0aGUgb3RoZXIgZ3V5cywgSnVzdGluIGFuZCBXaWxsLCBwdXQgdGhlaXIgaGVhZHMgdG9nZXRoZXIgYW5kIGNhbWUgdXAgd2l0aCBbU29tZXRoaW5nIFJlYWxseSBPZmZlbnNpdmVdIEpyLiwgd2hpY2ggc3Ryb25nbHkgc3VnZ2VzdGVkIHRoYXQgR3JlZyB3YXMgW1NvbWV0aGluZyBSZWFsbHkgT2ZmZW5zaXZlXS4gPC9wPg0KPHA+SW4gdGhlIGVuZCwgZGVzcGl0ZSBzb21lIHBvc3NpYmxlIGNvbGx1c2lvbiBhbW9uZyBoaXMgb3Bwb25lbnRzLCBzb21lIFRpbSBEb25hZ2h5LXN0eWxlIHJlZmVyZWVpbmcsIGFuZCB0aGUgdW5kZW5pYWJsZSBhcHBlYWwgb2YgaGF2aW5nIGEgY2hpbGQgbmFtZWQgW1NvbWV0aGluZyBSZWFsbHkgT2ZmZW5zaXZlXSBKci4sIEdyZWcgd29uIHRoZSBldmVudCBhbmQgY3J1c2hlZCBhbGwgb2Ygb3VyIGRyZWFtcy4gU28gS2FlcnZlayB0aGUgSGFpcmxlc3MgaXQgaXMgKHBlbmRpbmcgYXBwcm92YWwpLjwvcD4NCjxwPldpdGggYW4gYXNzaXN0IGZyb20gbXkgZnJpZW5kcyBUb2RkIGFuZCBXaWxsLCBhbmQgaW4gdGhlIHNwaXJpdCBvZiBLaXRjaGVuIENhYmluZXQgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdQYWluJykiPlBhaW48L2E+dGluZyBTZWFzb24gKG9yIFdlZGRpbmcgU2Vhc29uKSwgSSdtIGdvaW5nIHRvIHRha2UgYSBsb29rIGF0IHNvbWUgb3RoZXIgY3JlYXR1cmVzIHRoYXQgd2VyZSBtZWFudCB0byBiZSB0b2dldGhlci48L3A+DQo8aDM+TGlrZSBhbiBFYm9ueSBIb3JzZSBhbmQgYSBCbGFjayBDYXJyaWFnZTwvaDM+DQo8cD5TaW5jZSA8YSBocmVmPSIvTWFnaWMvTWFnYXppbmUvQXJ0aWNsZS5hc3B4P3g9bXRnY29tL2RhaWx5L2NtODEiPlggV2VlazwvYT4gd2FzIHRvbyBzaG9ydCwgYW5kIHNpbmNlIEkgcmVhbGx5IGxpa2UgdGhlIGlkZWEgb2YgdGhlIDxpPlRlbnRoIEVkaXRpb248L2k+IFN1cGVyIExpbWl0ZWQgTGVhZ3VlIHRoYXQgQWFyb24gd3JvdGUgYWJvdXQgPGEgaHJlZj0iL01hZ2ljL01hZ2F6aW5lL0FydGljbGUuYXNweD94PW10Z2NvbS9kYWlseS9hZjE4MSI+bGFzdCBGcmlkYXk8L2E+LCBJJ20gZ29pbmcgdG8gbGltaXQgbXlzZWxmIHRvIGNyZWF0dXJlcyBmcm9tIDxpPlRlbnRoPC9pPi4gSGVjaywgSSBtaWdodCBldmVuIGZsZXNoIG91dCBzb21lIG9mIHRoZXNlIGNyZWF0dXJlIGNvbWJvcywgYnV0IHdoZW4gSSBkbywgaXQnbGwgYmUgd2l0aCBjYXJkcyBmcm9tIHRoZSBsYXRlc3QgY29yZSBzZXQuPC9wPg0KPHA+DQogIDxiPg0KICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnVmVkYWxrZW5fTWFzdGVybWluZCcpIj5WZWRhbGtlbiBNYXN0ZXJtaW5kPC9hPiArIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnVHJlYXN1cmVfSHVudGVyJykiPlRyZWFzdXJlIEh1bnRlcjwvYT48L2I+DQo8L3A+DQo8cD4NCiAgPHRhYmxlIGFsaWduPSJjZW50ZXIiIGNlbGxzcGFjaW5nPSIxNSI+DQogICAgPHRyPg0KICAgICAgPHRkIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJtYWdpYy1jYXJkIG1hZ2ljLWNhcmQtYmxhY2sgbWFnaWMtY2FyZC1jZW50ZXIiPg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYXJ0Ij4NCiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1ZlZGFsa2VuX01hc3Rlcm1pbmQnKSI+DQogICAgICAgICAgICAgIDxpbWcgYm9yZGVyPSIwIiB3aWR0aD0iMjAwIiBoZWlnaHQ9IjI4NSIgc3JjPSIvZ2xvYmFsL2ltYWdlcy9tYWdpYy9nZW5lcmFsL1ZlZGFsa2VuX01hc3Rlcm1pbmQuanBnIiBhbHQ9IlZlZGFsa2VuIE1hc3Rlcm1pbmQiIC8+DQogICAgICAgICAgICA8L2E+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC90ZD4NCiAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgPGRpdiBjbGFzcz0ibWFnaWMtY2FyZCBtYWdpYy1jYXJkLWJsYWNrIG1hZ2ljLWNhcmQtY2VudGVyIj4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWFydCI+DQogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdUcmVhc3VyZV9IdW50ZXInKSI+DQogICAgICAgICAgICAgIDxpbWcgYm9yZGVyPSIwIiB3aWR0aD0iMjAwIiBoZWlnaHQ9IjI4NSIgc3JjPSIvZ2xvYmFsL2ltYWdlcy9tYWdpYy9nZW5lcmFsL1RyZWFzdXJlX0h1bnRlci5qcGciIGFsdD0iVHJlYXN1cmUgSHVudGVyIiAvPg0KICAgICAgICAgICAgPC9hPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvdGQ+DQogICAgPC90cj4NCiAgPC90YWJsZT4NCjwvcD4NCjxwPk9idmlvdXNseSwgYmVjYXVzZSBpdCBjYW4gcmV0dXJuIHBlcm1hbmVudHMgeW91IGNvbnRyb2wgdG8gdGhlaXIgb3duZXIncyBoYW5kLCB0aGUgTWFzdGVybWluZCBjb21ib3Mgd2l0aCBhbnkgY3JlYXR1cmUgdGhhdCBoYXMgYSBuaWNlIGNvbWVzLWludG8tcGxheSBhYmlsaXR5LiBJIHBpY2tlZCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1RyZWFzdXJlX0h1bnRlcicpIj5UcmVhc3VyZSBIdW50ZXI8L2E+IG92ZXIgY2FyZHMgbGlrZSA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ05la3JhdGFhbCcpIj5OZWtyYXRhYWw8L2E+LCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0hpZ2h3YXlfUm9iYmVyJykiPkhpZ2h3YXkgUm9iYmVyPC9hPiwgb3IgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdTYWdlX093bCcpIj5TYWdlIE93bDwvYT4gYmVjYXVzZSBpdCdzIGEgZnJlc2ggYWRkaXRpb24gdG8gdGhlIENvcmUgU2V0IGFuZCBiZWNhdXNlIEkgZmVlbCBiYWQgdGhhdCB0aGUgaW50cmVwaWQgYXJjaGFlb2xvZ2lzdCB3YXMgbGVmdCBvdXQgb2YgPGk+T2R5c3NleTwvaT4uIFlvdSBzZWUsIGluIHRoYXQgc2V0LCB0aGVyZSB3YXMgYSBjeWNsZSBvZiBjcmVhdHVyZXMgdGhhdCByZXR1cm4gc29tZXRoaW5nIGZyb20geW91ciBncmF2ZXlhcmQgdG8geW91ciBoYW5kLiBSZXByaW50cyA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1Njcml2ZW5lcicpIj5TY3JpdmVuZXI8L2E+LCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0FuYXJjaGlzdCcpIj5BbmFyY2hpc3Q8L2E+LCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0NhcnRvZ3JhcGhlcicpIj5DYXJ0b2dyYXBoZXI8L2E+LCBhbmQgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdHcmF2ZWRpZ2dlcicpIj5HcmF2ZWRpZ2dlcjwvYT4gd2VyZSBqb2luZWQgYnkgdG90YWwgbm9vYiA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0F1cmFtYW5jZXInKSI+QXVyYW1hbmNlcjwvYT4gYW5kIG5vdCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1RyZWFzdXJlX0h1bnRlcicpIj5UcmVhc3VyZSBIdW50ZXI8L2E+IChvciwgSSBndWVzcywgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdNb25rX0lkZWFsaXN0JykiPk1vbmsgSWRlYWxpc3Q8L2E+KS4gTWF5YmUgbm93IGhlJ2xsIGdldCBoaXMgZGF5IGluIHRoZSBzdW4uPC9wPg0KPHA+T2YgY291cnNlLCB0aGVzZSB0d28gY2FyZHMgZG9uJ3QgZG8gYSBoZWNrIG9mIGEgbG90IG9uIHRoZWlyIG93bi4gWW91IG5lZWQgc29tZSBhcnRpZmFjdHMgaW4geW91ciBncmF2ZXlhcmQgdG8gbWF4aW1pemUgdGhlaXIgZWZmZWN0aXZlbmVzcy4gTHVja2lseSwgdGhlcmUgYXJlIGEgZmV3IGFydGlmYWN0cyBpbiA8aT5UZW50aDwvaT4gdGhhdCB5b3Ugc2FjcmlmaWNlIGZvciBhIHByb2ZpdCwgc3VjaCBhcyA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0Nocm9tYXRpY19TdGFyJykiPkNocm9tYXRpYyBTdGFyPC9hPiAoZHJhdyBhIGNhcmQhKSwgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdNaW5kX1N0b25lJykiPk1pbmQgU3RvbmU8L2E+IChkcmF3IGEgY2FyZCEpLCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0JvdHRsZV9Hbm9tZXMnKSI+Qm90dGxlIEdub21lczwvYT4gKGdhaW4gbGlmZSEpLCBhbmQgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDb21wb3NpdGVfR29sZW0nKSI+Q29tcG9zaXRlIEdvbGVtPC9hPiAoYWRkIDxub2JyPjxpbWcgc3JjPSIvaW1hZ2VzL1N5bWJvbHMvd2hpdGVfbWFuYS5naWYiIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgYWx0PSJXaGl0ZSBNYW5hIiBib3JkZXI9IjAiIC8+PGltZyBzcmM9Ii9pbWFnZXMvU3ltYm9scy9ibHVlX21hbmEuZ2lmIiB3aWR0aD0iMTIiIGhlaWdodD0iMTIiIGFsdD0iQmx1ZSBNYW5hIiBib3JkZXI9IjAiIC8+PGltZyBzcmM9Ii9pbWFnZXMvU3ltYm9scy9ibGFja19tYW5hLmdpZiIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBhbHQ9IkJsYWNrIE1hbmEiIGJvcmRlcj0iMCIgLz48aW1nIHNyYz0iL2ltYWdlcy9TeW1ib2xzL3JlZF9tYW5hLmdpZiIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBhbHQ9IlJlZCBNYW5hIiBib3JkZXI9IjAiIC8+PGltZyBzcmM9Ii9pbWFnZXMvU3ltYm9scy9ncmVlbl9tYW5hLmdpZiIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBhbHQ9IkdyZWVuIE1hbmEiIGJvcmRlcj0iMCIgLz48L25vYnI+IHRvIHlvdXIgbWFuYSBwb29sISkuIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnVHJlYXN1cmVfSHVudGVyJykiPlRyZWFzdXJlIEh1bnRlcjwvYT4gaXMgYWxzbyBmaW5lIGlmIHlvdSdyZSBqdXN0IHVzaW5nIGhpbSBsaWtlIGEgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdHcmF2ZWRpZ2dlcicpIj5HcmF2ZWRpZ2dlcjwvYT4gdG8gcmV0dXJuIGEgZmFsbGVuIGFydGlmYWN0IGNyZWF0dXJlIGxpa2UgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdSYXpvcm1hbmVfTWFzdGljb3JlJykiPlJhem9ybWFuZSBNYXN0aWNvcmU8L2E+IG9yIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnSnVnZ2VybmF1dCcpIj5KdWdnZXJuYXV0PC9hPi4gPC9wPg0KPHA+DQogIDxiPg0KICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnRm9nX0VsZW1lbnRhbCcpIj5Gb2cgRWxlbWVudGFsPC9hPiArIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnVmVkYWxrZW5fTWFzdGVybWluZCcpIj5WZWRhbGtlbiBNYXN0ZXJtaW5kPC9hPjwvYj4NCjwvcD4NCjxwPg0KICA8dGFibGUgYWxpZ249ImNlbnRlciIgY2VsbHNwYWNpbmc9IjE1Ij4NCiAgICA8dHI+DQogICAgICA8dGQgYWxpZ249ImNlbnRlciI+DQogICAgICAgIDxkaXYgY2xhc3M9Im1hZ2ljLWNhcmQgbWFnaWMtY2FyZC1ibGFjayBtYWdpYy1jYXJkLWNlbnRlciI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1hcnQiPg0KICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnRm9nX0VsZW1lbnRhbCcpIj4NCiAgICAgICAgICAgICAgPGltZyBib3JkZXI9IjAiIHdpZHRoPSIyMDAiIGhlaWdodD0iMjg1IiBzcmM9Ii9nbG9iYWwvaW1hZ2VzL21hZ2ljL2dlbmVyYWwvRm9nX0VsZW1lbnRhbC5qcGciIGFsdD0iRm9nIEVsZW1lbnRhbCIgLz4NCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L3RkPg0KICAgICAgPHRkIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJtYWdpYy1jYXJkIG1hZ2ljLWNhcmQtYmxhY2sgbWFnaWMtY2FyZC1jZW50ZXIiPg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYXJ0Ij4NCiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1ZlZGFsa2VuX01hc3Rlcm1pbmQnKSI+DQogICAgICAgICAgICAgIDxpbWcgYm9yZGVyPSIwIiB3aWR0aD0iMjAwIiBoZWlnaHQ9IjI4NSIgc3JjPSIvZ2xvYmFsL2ltYWdlcy9tYWdpYy9nZW5lcmFsL1ZlZGFsa2VuX01hc3Rlcm1pbmQuanBnIiBhbHQ9IlZlZGFsa2VuIE1hc3Rlcm1pbmQiIC8+DQogICAgICAgICAgICA8L2E+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC90ZD4NCiAgICA8L3RyPg0KICA8L3RhYmxlPg0KPC9wPg0KPHA+QmVzaWRlcyB3b3JraW5nIHdlbGwgd2l0aCBjcmVhdHVyZXMgd2l0aCBjb21lcy1pbnRvLXBsYXkgYWJpbGl0aWVzLCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1ZlZGFsa2VuX01hc3Rlcm1pbmQnKSI+VmVkYWxrZW4gTWFzdGVybWluZDwvYT4gY2FuIGFsc28gdGVhbSB1cCB3aXRoIGNyZWF0dXJlcyB3aXRoIGEgc2hvcnQgbGlmZXNwYW4sIGkuZS4gY3JlYXR1cmVzIHRoYXQgbWFrZSB5b3Ugc2FjcmlmaWNlIHRoZW0gYXQgc29tZSBwb2ludCBpbiB0aGUgZ2FtZS4gPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdGb2dfRWxlbWVudGFsJykiPkZvZyBFbGVtZW50YWw8L2E+IGlzIGEgc2VyaW91c2x5IHVuZGVyY29zdGVkIDQvNCBmbHllciwgd2l0aCB0aGUgY2F0Y2ggYmVpbmcgdGhhdCB5b3UgaGF2ZSB0byBzYWNyaWZpY2UgaXQgaWYgZXZlciBnZXRzIGludm9sdmVkIGluIGNvbWJhdC4gV2l0aCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1ZlZGFsa2VuX01hc3Rlcm1pbmQnKSI+VmVkYWxrZW4gTWFzdGVybWluZDwvYT4gb24gdGhlIHRhYmxlLCB5b3UgY2FuIGF0dGFjayB3aXRoIHlvdXIgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdGb2dfRWxlbWVudGFsJykiPkZvZyBFbGVtZW50YWw8L2E+LCBoYXZlIGhpbSBkZWFsIGhpcyBkYW1hZ2UsIHRoZW4gYm91bmNlIGhpbSBiZWZvcmUgImVuZCBvZiBjb21iYXQuIiBGb3IgPG5vYnI+PGltZyBzcmM9Ii9pbWFnZXMvU3ltYm9scy9TeW1ib2xfMl9tYW5hLmdpZiIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBhbHQ9IjIgTWFuYSIgYm9yZGVyPSIwIiAvPjxpbWcgc3JjPSIvaW1hZ2VzL1N5bWJvbHMvYmx1ZV9tYW5hLmdpZiIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBhbHQ9IkJsdWUgTWFuYSIgYm9yZGVyPSIwIiAvPjxpbWcgc3JjPSIvaW1hZ2VzL1N5bWJvbHMvYmx1ZV9tYW5hLmdpZiIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBhbHQ9IkJsdWUgTWFuYSIgYm9yZGVyPSIwIiAvPjwvbm9icj4gcGVyIHR1cm4sIHlvdSBjYW4gaGF2ZSB0aGUgc2lkZXdheXMgZmFjZSBwbGF5IG9mZmVuc2UgYW5kIGRlZmVuc2UuIFlvdSBjYW4gcGVyZm9ybSBzaW1pbGFyIHNlbGYtZGVzdHJ1Y3Rpb24tZG9kZ2luZyB0cmlja3Mgd2l0aCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1ZlZGFsa2VuX01hc3Rlcm1pbmQnKSI+VmVkYWxrZW4gTWFzdGVybWluZDwvYT4gYW5kIGVpdGhlciA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1NwYXJrX0VsZW1lbnRhbCcpIj5TcGFyayBFbGVtZW50YWw8L2E+IG9yIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnTG95YWxfU2VudHJ5JykiPkxveWFsIFNlbnRyeTwvYT4uPC9wPg0KPHA+DQogIDxiPg0KICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ3JhZnR5X1BhdGhtYWdlJykiPkNyYWZ0eSBQYXRobWFnZTwvYT4gKyA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1NjYWxwZWxleGlzJykiPlNjYWxwZWxleGlzPC9hPjwvYj4NCjwvcD4NCjxwPg0KICA8dGFibGUgYWxpZ249ImNlbnRlciIgY2VsbHNwYWNpbmc9IjE1Ij4NCiAgICA8dHI+DQogICAgICA8dGQgYWxpZ249ImNlbnRlciI+DQogICAgICAgIDxkaXYgY2xhc3M9Im1hZ2ljLWNhcmQgbWFnaWMtY2FyZC1ibGFjayBtYWdpYy1jYXJkLWNlbnRlciI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1hcnQiPg0KICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ3JhZnR5X1BhdGhtYWdlJykiPg0KICAgICAgICAgICAgICA8aW1nIGJvcmRlcj0iMCIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyODUiIHNyYz0iL2dsb2JhbC9pbWFnZXMvbWFnaWMvZ2VuZXJhbC9DcmFmdHlfUGF0aG1hZ2UuanBnIiBhbHQ9IkNyYWZ0eSBQYXRobWFnZSIgLz4NCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L3RkPg0KICAgICAgPHRkIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJtYWdpYy1jYXJkIG1hZ2ljLWNhcmQtYmxhY2sgbWFnaWMtY2FyZC1jZW50ZXIiPg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYXJ0Ij4NCiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1NjYWxwZWxleGlzJykiPg0KICAgICAgICAgICAgICA8aW1nIGJvcmRlcj0iMCIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyODUiIHNyYz0iL2dsb2JhbC9pbWFnZXMvbWFnaWMvZ2VuZXJhbC9TY2FscGVsZXhpcy5qcGciIGFsdD0iU2NhbHBlbGV4aXMiIC8+DQogICAgICAgICAgICA8L2E+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC90ZD4NCiAgICA8L3RyPg0KICA8L3RhYmxlPg0KPC9wPg0KPHA+QXMgc29tZW9uZSB3aG8gdXNlZCB0byBwbGF5IHdpdGggPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdEcmFnb25fV2hlbHAnKSI+RHJhZ29uIFdoZWxwPC9hPnMgYW5kIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnRHdhcnZlbl9XYXJyaW9ycycpIj5Ed2FydmVuIFdhcnJpb3JzPC9hPiwgSSBoYXZlIGEgYml0IG9mIGEgc29mdCBzcG90IGZvciA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0NyYWZ0eV9QYXRobWFnZScpIj5DcmFmdHkgUGF0aG1hZ2U8L2E+LiBJdCBtYWtlcyBjcmVhdHVyZXMgd2l0aCBwb3dlciAyIG9yIGxlc3MgdW5ibG9ja2FibGUgdW50aWwgZW5kIG9mIHR1cm4sIGFuZCB0aGVyZSBhcmUgYXQgbGVhc3QgdHdvIGdvb2Qgd2F5cyB0byB0YWtlIGFkdmFudGFnZSBvZiB0aGlzLiBUaGUgZmlyc3QgaXMgdG8gdXNlIGNyZWF0dXJlcyB3aXRoIGEgbG93IGluaXRpYWwgcG93ZXIgdGhhdCBjYW4gcHVtcCB0aGVtc2VsdmVzIHVwIHNvbWVob3cuIENyZWF0dXJlcyBsaWtlIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnTG9vbWluZ19TaGFkZScpIj5Mb29taW5nIFNoYWRlPC9hPiwgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdOYW50dWtvX0h1c2snKSI+TmFudHVrbyBIdXNrPC9hPiwgYW5kIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnRnVybmFjZV9XaGVscCcpIj5GdXJuYWNlIFdoZWxwPC9hPnMgYWxsIGZpdCBpbiB0aGlzIGNhdGVnb3J5LCBzdGFydGluZyBvdXQgc21hbGwsIGJ1dCBjYXBhYmxlIG9mIGRvaW5nIGxhcmdlIGFtb3VudHMgb2YgY29tYmF0IGRhbWFnZS4gVGhlIHNlY29uZCB3YXkgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDcmFmdHlfUGF0aG1hZ2UnKSI+Q3JhZnR5IFBhdGhtYWdlPC9hPiBpcyB0byBjb21iaW5lIGl0IHdpdGggY3JlYXR1cmVzIHRoYXQgZG8gZGV2YXN0YXRpbmcgdGhpbmdzIHdoZW4gdGhleSBkZWFsIGNvbWJhdCBkYW1hZ2UgdG8geW91ciBvcHBvbmVudC4gQSBoaXQgZnJvbSBhIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnU2NhbHBlbGV4aXMnKSI+U2NhbHBlbGV4aXM8L2E+IGlzIHBlcmhhcHMgdGhlIG1vc3QgZGV2YXN0YXRpbmcgb2YgdGhlbSBhbGwsIGJ1dCB0aGVyZSBhcmUgc3RpbGwgcGxlbnR5IG9mIG90aGVyIGNyZWF0dXJlcyB0aGF0IGFyZSB3b3J0aCBsb29raW5nIGF0ICh3aGljaCBJIHdpbGwgZ2V0IHRvIHNob3J0bHkpLjwvcD4NCjxwPg0KICA8Yj4NCiAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1B1cHBldGVlcicpIj5QdXBwZXRlZXI8L2E+ICsgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdLYW1haGwsX1BpdF9GaWdodGVyJykiPkthbWFobCwgUGl0IEZpZ2h0ZXI8L2E+PC9iPg0KPC9wPg0KPHA+DQogIDx0YWJsZSBhbGlnbj0iY2VudGVyIiBjZWxsc3BhY2luZz0iMTUiPg0KICAgIDx0cj4NCiAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgPGRpdiBjbGFzcz0ibWFnaWMtY2FyZCBtYWdpYy1jYXJkLWJsYWNrIG1hZ2ljLWNhcmQtY2VudGVyIj4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWFydCI+DQogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdQdXBwZXRlZXInKSI+DQogICAgICAgICAgICAgIDxpbWcgYm9yZGVyPSIwIiB3aWR0aD0iMjAwIiBoZWlnaHQ9IjI4NSIgc3JjPSIvZ2xvYmFsL2ltYWdlcy9tYWdpYy9nZW5lcmFsL1B1cHBldGVlci5qcGciIGFsdD0iUHVwcGV0ZWVyIiAvPg0KICAgICAgICAgICAgPC9hPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvdGQ+DQogICAgICA8dGQgYWxpZ249ImNlbnRlciI+DQogICAgICAgIDxkaXYgY2xhc3M9Im1hZ2ljLWNhcmQgbWFnaWMtY2FyZC1ibGFjayBtYWdpYy1jYXJkLWNlbnRlciI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1hcnQiPg0KICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnS2FtYWhsLF9QaXRfRmlnaHRlcicpIj4NCiAgICAgICAgICAgICAgPGltZyBib3JkZXI9IjAiIHdpZHRoPSIyMDAiIGhlaWdodD0iMjg1IiBzcmM9Ii9nbG9iYWwvaW1hZ2VzL21hZ2ljL2dlbmVyYWwvS2FtYWhsX1BpdF9GaWdodGVyLmpwZyIgYWx0PSJLYW1haGwsIFBpdCBGaWdodGVyIiAvPg0KICAgICAgICAgICAgPC9hPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvdGQ+DQogICAgPC90cj4NCiAgPC90YWJsZT4NCjwvcD4NCjxwPg0KICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1B1cHBldGVlcicpIj5QdXBwZXRlZXI8L2E+IGlzIGp1c3QgZmluZSBvbiBpdHMgb3duLiBJdCBjYW4gdGFwIGRvd24gb3Bwb3NpbmcgYmxvY2tlcnMgb3IgZ2l2ZSB5b3VyIGNyZWF0dXJlcyBhIG1ha2VzaGlmdCB2aWdpbGFuY2UsIGFsbG93aW5nIHRoZW0gdG8gYm90aCBhdHRhY2sgYW5kIGJsb2NrLiBPZiBjb3Vyc2UsIGl0J3MgZG91Ymx5IGV4Y2l0aW5nIHdoZW4geW91IHBhaXIgaXQgd2l0aCBhIGNyZWF0dXJlIHRoYXQgaGFzIGEgcG93ZXJmdWwgdGFwIGFiaWxpdHkuIEkgcGlja2VkIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnS2FtYWhsLF9QaXRfRmlnaHRlcicpIj5LYW1haGwsIFBpdCBGaWdodGVyPC9hPiwgYnV0IGl0IGNvdWxkIGhhdmUganVzdCBhcyBlYXNpbHkgaGF2ZSBiZWVuIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQXJjYW5pc190aGVfT21uaXBvdGVudCcpIj5BcmNhbmlzIHRoZSBPbW5pcG90ZW50PC9hPi4gQnV0IHdoeSBub3QgdXNlIGJvdGg/IEZvciBleGFtcGxlLCB5b3UgY291bGQgYnVpbGQgc29tZXRoaW5nIGFsb25nIHRoZXNlIGxpbmVzOjwvcD4NCjxwPg0KICA8dGFibGUgY2xhc3M9ImRlY2siIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj4NCiAgICA8dHI+DQogICAgICA8dGQgY2xhc3M9InRvcGxlZnQiIC8+DQogICAgICA8dGQgY2xhc3M9InRvcCIgLz4NCiAgICAgIDx0ZCBjbGFzcz0idG9wcmlnaHQiIC8+DQogICAgPC90cj4NCiAgICA8dHI+DQogICAgICA8dGQgY2xhc3M9ImxlZnQiIC8+DQogICAgICA8dGQgY2xhc3M9ImNvbnRlbnQiIHZhbGlnbj0idG9wIj4NCiAgICAgICAgPHRhYmxlIGNsYXNzPSJkZWNrY29udGVudCIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiPg0KICAgICAgICAgIDx0ciBjbGFzcz0iZGVja3RvcCI+DQogICAgICAgICAgICA8dGQgY2xhc3M9InRpdGxlIj4NCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWFpbiI+DQogICAgICAgICAgICAgICAgPGhlYWRpbmc+VHdpdGNoIENpdHk8L2hlYWRpbmc+DQogICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWIiPjwvZGl2Pg0KICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgIDx0ZCBjbGFzcz0ib3B0aW9ucyIgYWxpZ249InJpZ2h0Ij4NCiAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9IiYjeEE7ICAgICAgICAgICAgICAgICAgICAgICAgL21hZ2ljL3NhbXBsZWhhbmQuYXNwP3g9bXRnY29tL2RhaWx5L2NtODImYW1wO2RlY2tudW09MSI+DQogICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9tYWdpYy9pbWFnZXMvc2FtcGxlaGFuZC5naWYiIHdpZHRoPSIzOSIgaGVpZ2h0PSIxOCIgYm9yZGVyPSIwIiBhbHQ9IlZpZXcgYSBzYW1wbGUgaGFuZCBvZiB0aGlzIGRlY2siIGFsaWduPSJyaWdodCIgLz4NCiAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICA8YSBocmVmPSIvbWFnaWMvZGVja3MvaG91c2VvZmNhcmRzL2NtODJfVHdpdGNoLmRlYyI+DQogICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9tYWdpYy9pbWFnZXMvY29uc29sZS9pY29uX2RlY2Rvd25sb2FkLmdpZiIgd2lkdGg9IjQxIiBoZWlnaHQ9IjE3IiBib3JkZXI9IjAiIGFsdD0iRG93bmxvYWQgdGhpcyBkZWNrIGFzIGEgTWFnaWMgT25saW5lIC5kZWMgZmlsZSIgYWxpZ249InJpZ2h0IiAvPg0KICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICA8L3RkPg0KICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPHRyPg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJtYWluZGVjayIgY29sc3Bhbj0iMiIgdmFsaWduPSJ0b3AiPg0KICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImNhcmRncm91cCI+DQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIGNvbHNwYW49IjMiPg0KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGVja3RpdGxlIj5NYWluIERlY2s8L3A+DQogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkY291bnQiPjYwIGNhcmRzDQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPjExwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0lzbGFuZCcpIj5Jc2xhbmQ8L2E+PGJyIC8+OcKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdNb3VudGFpbicpIj5Nb3VudGFpbjwvYT48YnIgLz40wqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1NoaXZhbl9SZWVmJykiPlNoaXZhbiBSZWVmPC9hPjxiciAvPjxociBzaXplPSIxIiB3aWR0aD0iNTAlIiBhbGlnbj0ibGVmdCIgY2xhc3M9ImRlY2t0b3RhbHMiIC8+PHNwYW4gY2xhc3M9ImRlY2t0b3RhbHMiPjI0IGxhbmRzPC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPjLCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQXJjYW5pc190aGVfT21uaXBvdGVudCcpIj5BcmNhbmlzIHRoZSBPbW5pcG90ZW50PC9hPjxiciAvPjLCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnSG9yc2VzaG9lX0NyYWInKSI+SG9yc2VzaG9lIENyYWI8L2E+PGJyIC8+MsKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdLYW1haGwsX1BpdF9GaWdodGVyJykiPkthbWFobCwgUGl0IEZpZ2h0ZXI8L2E+PGJyIC8+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdNZXJmb2xrX0xvb3RlcicpIj5NZXJmb2xrIExvb3RlcjwvYT48YnIgLz4xwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ09yY2lzaF9BcnRpbGxlcnknKSI+T3JjaXNoIEFydGlsbGVyeTwvYT48YnIgLz4zwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1Byb2RpZ2FsX1B5cm9tYW5jZXInKSI+UHJvZGlnYWwgUHlyb21hbmNlcjwvYT48YnIgLz40wqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1B1cHBldGVlcicpIj5QdXBwZXRlZXI8L2E+PGJyIC8+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdTYWdlX093bCcpIj5TYWdlIE93bDwvYT48YnIgLz48aHIgc2l6ZT0iMSIgd2lkdGg9IjUwJSIgYWxpZ249ImxlZnQiIGNsYXNzPSJkZWNrdG90YWxzIiAvPjxzcGFuIGNsYXNzPSJkZWNrdG90YWxzIj4yMiBjcmVhdHVyZXM8L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249InRvcCI+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdBcmNhbmVfVGVhY2hpbmdzJykiPkFyY2FuZSBUZWFjaGluZ3M8L2E+PGJyIC8+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDYW5jZWwnKSI+Q2FuY2VsPC9hPjxiciAvPjTCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnSW5jaW5lcmF0ZScpIj5JbmNpbmVyYXRlPC9hPjxiciAvPjLCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnVHdpdGNoJykiPlR3aXRjaDwvYT48YnIgLz48aHIgc2l6ZT0iMSIgd2lkdGg9IjUwJSIgYWxpZ249ImxlZnQiIGNsYXNzPSJkZWNrdG90YWxzIiAvPjxzcGFuIGNsYXNzPSJkZWNrdG90YWxzIj4xNCBvdGhlciBzcGVsbHM8L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICA8L3RyPg0KICAgICAgICA8L3RhYmxlPg0KICAgICAgPC90ZD4NCiAgICAgIDx0ZCBjbGFzcz0icmlnaHQiIC8+DQogICAgPC90cj4NCiAgICA8dHI+DQogICAgICA8dGQgY2xhc3M9ImJvdHRvbWxlZnQiIC8+DQogICAgICA8dGQgY2xhc3M9ImJvdHRvbSIgLz4NCiAgICAgIDx0ZCBjbGFzcz0iYm90dG9tcmlnaHQiIC8+DQogICAgPC90cj4NCiAgPC90YWJsZT4NCjwvcD4NCjxwPkFsbW9zdCBldmVyeSBjcmVhdHVyZSBpbiB0aGUgZGVjayB0YXBzIGZvciBzb21lIGVmZmVjdC4gVGhlIG9uZXMgdGhhdCBkb24ndCB0dXJuIHNpZGV3YXlzIHRvIHBpbmcgb3IgZHJhdyB5b3UgY2FyZHMgbWFrZSBncmVhdCB0YXJnZXRzIGZvciA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0FyY2FuZV9UZWFjaGluZ3MnKSI+QXJjYW5lIFRlYWNoaW5nczwvYT4gKGVzcGVjaWFsbHkgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdIb3JzZXNob2VfQ3JhYicpIj5Ib3JzZXNob2UgQ3JhYjwvYT4pLjwvcD4NCjxwPg0KICA8Yj4NCiAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1NlZWRib3JuX011c2UnKSI+U2VlZGJvcm4gTXVzZTwvYT4gKyA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0NvbG9zc3VzX29mX1NhcmRpYScpIj5Db2xvc3N1cyBvZiBTYXJkaWE8L2E+PC9iPg0KPC9wPg0KPHA+DQogIDx0YWJsZSBhbGlnbj0iY2VudGVyIiBjZWxsc3BhY2luZz0iMTUiPg0KICAgIDx0cj4NCiAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgPGRpdiBjbGFzcz0ibWFnaWMtY2FyZCBtYWdpYy1jYXJkLWJsYWNrIG1hZ2ljLWNhcmQtY2VudGVyIj4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWFydCI+DQogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdTZWVkYm9ybl9NdXNlJykiPg0KICAgICAgICAgICAgICA8aW1nIGJvcmRlcj0iMCIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyODUiIHNyYz0iL2dsb2JhbC9pbWFnZXMvbWFnaWMvZ2VuZXJhbC9TZWVkYm9ybl9NdXNlLmpwZyIgYWx0PSJTZWVkYm9ybiBNdXNlIiAvPg0KICAgICAgICAgICAgPC9hPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvdGQ+DQogICAgICA8dGQgYWxpZ249ImNlbnRlciI+DQogICAgICAgIDxkaXYgY2xhc3M9Im1hZ2ljLWNhcmQgbWFnaWMtY2FyZC1ibGFjayBtYWdpYy1jYXJkLWNlbnRlciI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1hcnQiPg0KICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ29sb3NzdXNfb2ZfU2FyZGlhJykiPg0KICAgICAgICAgICAgICA8aW1nIGJvcmRlcj0iMCIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyODUiIHNyYz0iL2dsb2JhbC9pbWFnZXMvbWFnaWMvZ2VuZXJhbC9Db2xvc3N1c19vZl9TYXJkaWEuanBnIiBhbHQ9IkNvbG9zc3VzIG9mIFNhcmRpYSIgLz4NCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L3RkPg0KICAgIDwvdHI+DQogIDwvdGFibGU+DQo8L3A+DQo8cD4NCiAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDb2xvc3N1c19vZl9TYXJkaWEnKSI+Q29sb3NzdXMgb2YgU2FyZGlhPC9hPiBpcyBhIGh1Z2UgbHVtYmVyaW5nIGJlYXN0IHRoYXQgcmVxdWlyZXMgYSBjb25zdGFudCBpbmZsdXggb2YgZW5lcmd5IHRvIGtlZXAgaXQgcHJpbWVkIGFuZCByZWFkeSB0byBhdHRhY2suIEhlIGRvZXNuJ3QgdW50YXAgaW4gdGhlIHVzdWFsIHdheSwgc28gaWYgeW91IHNlbmQgaGltIGludG8gdGhlIFJlZCBab25lLCB5b3UnbGwgbmVlZCB0byBpbnZlc3QgYW5vdGhlciBuaW5lIG1hbmEgdG8gZ2V0IGhpbSB0byBnbyBiYWNrIHRoZXJlIGEgc2Vjb25kIHRpbWUuIFdobydzIGdvdCBuaW5lIG1hbmEgdG8gc3BhcmU/IE5vdCBtZS4gVGhhdCdzIHdoeSBJIHRob3VnaHQgSSdkIHR1cm4gdG8gPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdTZWVkYm9ybl9NdXNlJykiPlNlZWRib3JuIE11c2U8L2E+LCB3aG8gdW50YXBzIHRoZSBDb2xvc3N1cyBmb3IgZnJlZSBkdXJpbmcgeW91ciBvcHBvbmVudCdzIHVudGFwIHN0ZXAuIFlvdSBjb3VsZCBqdXN0IGFzIGVhc2lseSB1c2UgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdQdXBwZXRlZXInKSI+UHVwcGV0ZWVyPC9hPiBhZ2FpbiwgYnV0IEkgZmlndXJlZCB0aGF0IHB1dHRpbmcgdGhlIENvbG9zc3VzIGluIGEgZ3JlZW4gZGVjayBtYWtlcyBtb3JlIHNlbnNlLiBUaGlzIHdheSwgeW91ciBQbGFuIEIgKHVudGFwcGluZyB0aGUgQ29sb3NzdXMgd2l0aCBhY3R1YWwgbWFuYSkgaXMgbXVjaCBtb3JlIGZlYXNpYmxlLjwvcD4NCjxwPkJlc2lkZXMgc2F2aW5nIHlvdSBtYW5hIHdpdGggPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDb2xvc3N1c19vZl9TYXJkaWEnKSI+Q29sb3NzdXMgb2YgU2FyZGlhPC9hPiwgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdTZWVkYm9ybl9NdXNlJykiPlNlZWRib3JuIE11c2U8L2E+IGZvcm1zIGEgdmVyeSBwb3dlcmZ1bCB0cmlvIHdpdGggPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdFbHZpc2hfUGlwZXInKSI+RWx2aXNoIFBpcGVyPC9hPiBhbmQgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDaXRhbnVsX0ZsdXRlJykiPkNpdGFudWwgRmx1dGU8L2E+LCBhbGxvd2luZyB5b3UgdG8gcHV0IGEgY3JlYXR1cmUgZnJvbSB5b3VyIGxpYnJhcnkgaW50byBwbGF5IGR1cmluZyBlYWNoIHBsYXllcidzIHR1cm4uIEhlcmUncyBhIHNhbXBsZSBkZWNrbGlzdDo8L3A+DQo8cD4NCiAgPHRhYmxlIGNsYXNzPSJkZWNrIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCI+DQogICAgPHRyPg0KICAgICAgPHRkIGNsYXNzPSJ0b3BsZWZ0IiAvPg0KICAgICAgPHRkIGNsYXNzPSJ0b3AiIC8+DQogICAgICA8dGQgY2xhc3M9InRvcHJpZ2h0IiAvPg0KICAgIDwvdHI+DQogICAgPHRyPg0KICAgICAgPHRkIGNsYXNzPSJsZWZ0IiAvPg0KICAgICAgPHRkIGNsYXNzPSJjb250ZW50IiB2YWxpZ249InRvcCI+DQogICAgICAgIDx0YWJsZSBjbGFzcz0iZGVja2NvbnRlbnQiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj4NCiAgICAgICAgICA8dHIgY2xhc3M9ImRlY2t0b3AiPg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0aXRsZSI+DQogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1haW4iPg0KICAgICAgICAgICAgICAgIDxoZWFkaW5nPlBhY2tlZCBMaWtlIFNhcmRpYW5zPC9oZWFkaW5nPg0KICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViIj48L2Rpdj4NCiAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICA8dGQgY2xhc3M9Im9wdGlvbnMiIGFsaWduPSJyaWdodCI+DQogICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSImI3hBOyAgICAgICAgICAgICAgICAgICAgICAgIC9tYWdpYy9zYW1wbGVoYW5kLmFzcD94PW10Z2NvbS9kYWlseS9jbTgyJmFtcDtkZWNrbnVtPTIiPg0KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvbWFnaWMvaW1hZ2VzL3NhbXBsZWhhbmQuZ2lmIiB3aWR0aD0iMzkiIGhlaWdodD0iMTgiIGJvcmRlcj0iMCIgYWx0PSJWaWV3IGEgc2FtcGxlIGhhbmQgb2YgdGhpcyBkZWNrIiBhbGlnbj0icmlnaHQiIC8+DQogICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgPGEgaHJlZj0iL21hZ2ljL2RlY2tzL2hvdXNlb2ZjYXJkcy9jbTgyX1NhcmRpYW5zLmRlYyI+DQogICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9tYWdpYy9pbWFnZXMvY29uc29sZS9pY29uX2RlY2Rvd25sb2FkLmdpZiIgd2lkdGg9IjQxIiBoZWlnaHQ9IjE3IiBib3JkZXI9IjAiIGFsdD0iRG93bmxvYWQgdGhpcyBkZWNrIGFzIGEgTWFnaWMgT25saW5lIC5kZWMgZmlsZSIgYWxpZ249InJpZ2h0IiAvPg0KICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICA8L3RkPg0KICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPHRyPg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJtYWluZGVjayIgY29sc3Bhbj0iMiIgdmFsaWduPSJ0b3AiPg0KICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImNhcmRncm91cCI+DQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIGNvbHNwYW49IjMiPg0KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGVja3RpdGxlIj5NYWluIERlY2s8L3A+DQogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkY291bnQiPjYwIGNhcmRzDQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPjE5wqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0ZvcmVzdCcpIj5Gb3Jlc3Q8L2E+PGJyIC8+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdUcmVldG9wX1ZpbGxhZ2UnKSI+VHJlZXRvcCBWaWxsYWdlPC9hPjxiciAvPjxociBzaXplPSIxIiB3aWR0aD0iNTAlIiBhbGlnbj0ibGVmdCIgY2xhc3M9ImRlY2t0b3RhbHMiIC8+PHNwYW4gY2xhc3M9ImRlY2t0b3RhbHMiPjIzIGxhbmRzPC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPjHCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQXZhdGFyX29mX01pZ2h0JykiPkF2YXRhciBvZiBNaWdodDwvYT48YnIgLz4zwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0NpdmljX1dheWZpbmRlcicpIj5DaXZpYyBXYXlmaW5kZXI8L2E+PGJyIC8+M8KgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDb2xvc3N1c19vZl9TYXJkaWEnKSI+Q29sb3NzdXMgb2YgU2FyZGlhPC9hPjxiciAvPjTCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnRWx2aXNoX1BpcGVyJykiPkVsdmlzaCBQaXBlcjwvYT48YnIgLz40wqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0xsYW5vd2FyX0VsdmVzJykiPkxsYW5vd2FyIEVsdmVzPC9hPjxiciAvPjHCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnTW9saW1vLF9NYXJvLVNvcmNlcmVyJykiPk1vbGltbywgTWFyby1Tb3JjZXJlcjwvYT48YnIgLz4xwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1BsYXRpbnVtX0FuZ2VsJykiPlBsYXRpbnVtIEFuZ2VsPC9hPjxiciAvPjHCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnUmF6b3JtYW5lX01hc3RpY29yZScpIj5SYXpvcm1hbmUgTWFzdGljb3JlPC9hPjxiciAvPjHCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnUmhveCcpIj5SaG94PC9hPjxiciAvPjPCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnU2VlZGJvcm5fTXVzZScpIj5TZWVkYm9ybiBNdXNlPC9hPjxiciAvPjPCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnU2t5c2hyb3VkX1JhbmdlcicpIj5Ta3lzaHJvdWQgUmFuZ2VyPC9hPjxiciAvPjHCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnVmVyZGFudF9Gb3JjZScpIj5WZXJkYW50IEZvcmNlPC9hPjxiciAvPjHCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnVmlyaWRpYW5fU2hhbWFuJykiPlZpcmlkaWFuIFNoYW1hbjwvYT48YnIgLz48aHIgc2l6ZT0iMSIgd2lkdGg9IjUwJSIgYWxpZ249ImxlZnQiIGNsYXNzPSJkZWNrdG90YWxzIiAvPjxzcGFuIGNsYXNzPSJkZWNrdG90YWxzIj4yNyBjcmVhdHVyZXM8L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249InRvcCI+M8KgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDaXRhbnVsX0ZsdXRlJykiPkNpdGFudWwgRmx1dGU8L2E+PGJyIC8+McKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdKYXllbWRhZV9Ub21lJykiPkpheWVtZGFlIFRvbWU8L2E+PGJyIC8+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdPdmVyZ3Jvd3RoJykiPk92ZXJncm93dGg8L2E+PGJyIC8+McKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdSb2Rfb2ZfUnVpbicpIj5Sb2Qgb2YgUnVpbjwvYT48YnIgLz4xwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1RoZV9IaXZlJykiPlRoZSBIaXZlPC9hPjxiciAvPjxociBzaXplPSIxIiB3aWR0aD0iNTAlIiBhbGlnbj0ibGVmdCIgY2xhc3M9ImRlY2t0b3RhbHMiIC8+PHNwYW4gY2xhc3M9ImRlY2t0b3RhbHMiPjEwIG90aGVyIHNwZWxsczwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICA8L3RkPg0KICAgICAgICAgIDwvdHI+DQogICAgICAgIDwvdGFibGU+DQogICAgICA8L3RkPg0KICAgICAgPHRkIGNsYXNzPSJyaWdodCIgLz4NCiAgICA8L3RyPg0KICAgIDx0cj4NCiAgICAgIDx0ZCBjbGFzcz0iYm90dG9tbGVmdCIgLz4NCiAgICAgIDx0ZCBjbGFzcz0iYm90dG9tIiAvPg0KICAgICAgPHRkIGNsYXNzPSJib3R0b21yaWdodCIgLz4NCiAgICA8L3RyPg0KICA8L3RhYmxlPg0KPC9wPg0KPHA+DQogIDxiPg0KICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnU2Npb25fb2ZfdGhlX1dpbGQnKSI+U2Npb24gb2YgdGhlIFdpbGQ8L2E+ICsgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdTaWVnZS1HYW5nX0NvbW1hbmRlcicpIj5TaWVnZS1HYW5nIENvbW1hbmRlcjwvYT48L2I+DQo8L3A+DQo8cD4NCiAgPHRhYmxlIGFsaWduPSJjZW50ZXIiIGNlbGxzcGFjaW5nPSIxNSI+DQogICAgPHRyPg0KICAgICAgPHRkIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJtYWdpYy1jYXJkIG1hZ2ljLWNhcmQtYmxhY2sgbWFnaWMtY2FyZC1jZW50ZXIiPg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYXJ0Ij4NCiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1NjaW9uX29mX3RoZV9XaWxkJykiPg0KICAgICAgICAgICAgICA8aW1nIGJvcmRlcj0iMCIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyODUiIHNyYz0iL2dsb2JhbC9pbWFnZXMvbWFnaWMvZ2VuZXJhbC9TY2lvbl9vZl90aGVfV2lsZC5qcGciIGFsdD0iU2Npb24gb2YgdGhlIFdpbGQiIC8+DQogICAgICAgICAgICA8L2E+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC90ZD4NCiAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgPGRpdiBjbGFzcz0ibWFnaWMtY2FyZCBtYWdpYy1jYXJkLWJsYWNrIG1hZ2ljLWNhcmQtY2VudGVyIj4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWFydCI+DQogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdTaWVnZS1HYW5nX0NvbW1hbmRlcicpIj4NCiAgICAgICAgICAgICAgPGltZyBib3JkZXI9IjAiIHdpZHRoPSIyMDAiIGhlaWdodD0iMjg1IiBzcmM9Ii9nbG9iYWwvaW1hZ2VzL21hZ2ljL2dlbmVyYWwvU2llZ2VfR2FuZ19Db21tYW5kZXIuanBnIiBhbHQ9IlNpZWdlLUdhbmcgQ29tbWFuZGVyIiAvPg0KICAgICAgICAgICAgPC9hPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvdGQ+DQogICAgPC90cj4NCiAgPC90YWJsZT4NCjwvcD4NCjxwPlRoaXMgb25lIGlzIHByZXR0eSBzdHJhaWdodGZvcndhcmQuIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnU2Npb25fb2ZfdGhlX1dpbGQnKSI+U2Npb24gb2YgdGhlIFdpbGQ8L2E+J3MgcG93ZXIgYW5kIHRvdWdobmVzcyBhcmUgZGV0ZXJtaW5lZCBieSB0aGUgbnVtYmVyIG9mIGNyZWF0dXJlcyB5b3UgY29udHJvbC4gPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdTaWVnZS1HYW5nX0NvbW1hbmRlcicpIj5TaWVnZS1HYW5nIENvbW1hbmRlcjwvYT4gcHJvZHVjZXMgZm91ciBjcmVhdHVyZXMgd2l0aCBhIHNpbmdsZSBjYXJkLiBJdCdzIGxpa2UgdGhlIG9sZCBLZWxkb24gV2FybG9yZCArIFRoYWxsaWRzIHRlYW0tdXAsIGJ1dCBpbiByZXZlcnNlLjwvcD4NCjxwPg0KICA8Yj4NCiAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1N0YW1wZWRpbmdfV2lsZGViZWVzdHMnKSI+U3RhbXBlZGluZyBXaWxkZWJlZXN0czwvYT4gKyA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0thdnVfQ2xpbWJlcicpIj5LYXZ1IENsaW1iZXI8L2E+PC9iPg0KPC9wPg0KPHA+DQogIDx0YWJsZSBhbGlnbj0iY2VudGVyIiBjZWxsc3BhY2luZz0iMTUiPg0KICAgIDx0cj4NCiAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgPGRpdiBjbGFzcz0ibWFnaWMtY2FyZCBtYWdpYy1jYXJkLWJsYWNrIG1hZ2ljLWNhcmQtY2VudGVyIj4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWFydCI+DQogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdTdGFtcGVkaW5nX1dpbGRlYmVlc3RzJykiPg0KICAgICAgICAgICAgICA8aW1nIGJvcmRlcj0iMCIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyODUiIHNyYz0iL2dsb2JhbC9pbWFnZXMvbWFnaWMvZ2VuZXJhbC9TdGFtcGVkaW5nX1dpbGRlYmVlc3RzLmpwZyIgYWx0PSJTdGFtcGVkaW5nIFdpbGRlYmVlc3RzIiAvPg0KICAgICAgICAgICAgPC9hPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvdGQ+DQogICAgICA8dGQgYWxpZ249ImNlbnRlciI+DQogICAgICAgIDxkaXYgY2xhc3M9Im1hZ2ljLWNhcmQgbWFnaWMtY2FyZC1ibGFjayBtYWdpYy1jYXJkLWNlbnRlciI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1hcnQiPg0KICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnS2F2dV9DbGltYmVyJykiPg0KICAgICAgICAgICAgICA8aW1nIGJvcmRlcj0iMCIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyODUiIHNyYz0iL2dsb2JhbC9pbWFnZXMvbWFnaWMvZ2VuZXJhbC9LYXZ1X0NsaW1iZXIuanBnIiBhbHQ9IkthdnUgQ2xpbWJlciIgLz4NCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L3RkPg0KICAgIDwvdHI+DQogIDwvdGFibGU+DQo8L3A+DQo8cD5MaWtlIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnVmVkYWxrZW5fTWFzdGVybWluZCcpIj5WZWRhbGtlbiBNYXN0ZXJtaW5kPC9hPiwgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdTdGFtcGVkaW5nX1dpbGRlYmVlc3RzJykiPlN0YW1wZWRpbmcgV2lsZGViZWVzdHM8L2E+IGlzIGJlc3QgZnJpZW5kcyB3aXRoIGNyZWF0dXJlcyBsaWtlIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnS2F2dV9DbGltYmVyJykiPkthdnUgQ2xpbWJlcjwvYT4gdGhhdCBkbyB0aGluZ3Mgd2hlbiB0aGV5IGNvbWUgaW50byBwbGF5LiBJbiBmYWN0LCB0aGV5IGxvdmUgZWFjaCBvdGhlciBzbyBtdWNoIHRoYXQgc29tZSBhcmUgcXVlc3Rpb25pbmcgd2h5IHRoZXkgZG9uJ3QganVzdCBnZXQgbWFycmllZC4gT25lIG9mIHRoYXQgInNvbWUiIGlzIG1lLCBzbyBJIHNob3VsZCBwcm9iYWJseSBwdXQgdGhlbSBpbiB0aGUgc2FtZSBkZWNrbGlzdCwgd2hpY2ggaXMgYSBzaWduIG9mIHRydWUgY29tbWl0bWVudC4gT2YgYWxsIHRoZSBncmVlbiBjb21lcy1pbnRvLXBsYXkgY3JlYXR1cmVzLCBJIHBpY2tlZCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0thdnVfQ2xpbWJlcicpIj5LYXZ1IENsaW1iZXI8L2E+LCBiZWNhdXNlIHRoZSByZXN0IG9mIHRoZSBnb29kIG9uZXMgaW4gPGk+VGVudGg8L2k+IGFyZSBlbHZlcyBhbmQgSSBkaWRuJ3Qgd2FudCB0byBidWlsZCBhbm90aGVyIGVsZiBkZWNrLiBZb3Uga25vdywgbGlrZSB0aGlzIG9uZTo8L3A+DQo8cD4NCiAgPHRhYmxlIGNsYXNzPSJkZWNrIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCI+DQogICAgPHRyPg0KICAgICAgPHRkIGNsYXNzPSJ0b3BsZWZ0IiAvPg0KICAgICAgPHRkIGNsYXNzPSJ0b3AiIC8+DQogICAgICA8dGQgY2xhc3M9InRvcHJpZ2h0IiAvPg0KICAgIDwvdHI+DQogICAgPHRyPg0KICAgICAgPHRkIGNsYXNzPSJsZWZ0IiAvPg0KICAgICAgPHRkIGNsYXNzPSJjb250ZW50IiB2YWxpZ249InRvcCI+DQogICAgICAgIDx0YWJsZSBjbGFzcz0iZGVja2NvbnRlbnQiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj4NCiAgICAgICAgICA8dHIgY2xhc3M9ImRlY2t0b3AiPg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0aXRsZSI+DQogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1haW4iPg0KICAgICAgICAgICAgICAgIDxoZWFkaW5nPkNvbWVzLUludG8tUGxheSBGcmVlbHk8L2hlYWRpbmc+DQogICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWIiPjwvZGl2Pg0KICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgIDx0ZCBjbGFzcz0ib3B0aW9ucyIgYWxpZ249InJpZ2h0Ij4NCiAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9IiYjeEE7ICAgICAgICAgICAgICAgICAgICAgICAgL21hZ2ljL3NhbXBsZWhhbmQuYXNwP3g9bXRnY29tL2RhaWx5L2NtODImYW1wO2RlY2tudW09MyI+DQogICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9tYWdpYy9pbWFnZXMvc2FtcGxlaGFuZC5naWYiIHdpZHRoPSIzOSIgaGVpZ2h0PSIxOCIgYm9yZGVyPSIwIiBhbHQ9IlZpZXcgYSBzYW1wbGUgaGFuZCBvZiB0aGlzIGRlY2siIGFsaWduPSJyaWdodCIgLz4NCiAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICA8YSBocmVmPSIvbWFnaWMvZGVja3MvaG91c2VvZmNhcmRzL2NtODJfRnJlZWx5LmRlYyI+DQogICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9tYWdpYy9pbWFnZXMvY29uc29sZS9pY29uX2RlY2Rvd25sb2FkLmdpZiIgd2lkdGg9IjQxIiBoZWlnaHQ9IjE3IiBib3JkZXI9IjAiIGFsdD0iRG93bmxvYWQgdGhpcyBkZWNrIGFzIGEgTWFnaWMgT25saW5lIC5kZWMgZmlsZSIgYWxpZ249InJpZ2h0IiAvPg0KICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICA8L3RkPg0KICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPHRyPg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJtYWluZGVjayIgY29sc3Bhbj0iMiIgdmFsaWduPSJ0b3AiPg0KICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImNhcmRncm91cCI+DQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIGNvbHNwYW49IjMiPg0KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGVja3RpdGxlIj5NYWluIERlY2s8L3A+DQogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkY291bnQiPjYwIGNhcmRzDQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPjE5wqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0ZvcmVzdCcpIj5Gb3Jlc3Q8L2E+PGJyIC8+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdUcmVldG9wX1ZpbGxhZ2UnKSI+VHJlZXRvcCBWaWxsYWdlPC9hPjxiciAvPjxociBzaXplPSIxIiB3aWR0aD0iNTAlIiBhbGlnbj0ibGVmdCIgY2xhc3M9ImRlY2t0b3RhbHMiIC8+PHNwYW4gY2xhc3M9ImRlY2t0b3RhbHMiPjIzIGxhbmRzPC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPjTCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ2l2aWNfV2F5ZmluZGVyJykiPkNpdmljIFdheWZpbmRlcjwvYT48YnIgLz40wqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0VsdmlzaF9DaGFtcGlvbicpIj5FbHZpc2ggQ2hhbXBpb248L2E+PGJyIC8+M8KgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdLYXZ1X0NsaW1iZXInKSI+S2F2dSBDbGltYmVyPC9hPjxiciAvPjTCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnTGxhbm93YXJfRWx2ZXMnKSI+TGxhbm93YXIgRWx2ZXM8L2E+PGJyIC8+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdMbGFub3dhcl9TZW50aW5lbCcpIj5MbGFub3dhciBTZW50aW5lbDwvYT48YnIgLz4zwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1NreXNocm91ZF9SYW5nZXInKSI+U2t5c2hyb3VkIFJhbmdlcjwvYT48YnIgLz4zwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1N0YW1wZWRpbmdfV2lsZGViZWVzdHMnKSI+U3RhbXBlZGluZyBXaWxkZWJlZXN0czwvYT48YnIgLz4zwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1ZpcmlkaWFuX1NoYW1hbicpIj5WaXJpZGlhbiBTaGFtYW48L2E+PGJyIC8+PGhyIHNpemU9IjEiIHdpZHRoPSI1MCUiIGFsaWduPSJsZWZ0IiBjbGFzcz0iZGVja3RvdGFscyIgLz48c3BhbiBjbGFzcz0iZGVja3RvdGFscyI+MjggY3JlYXR1cmVzPC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPjTCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ3JlZXBpbmdfTW9sZCcpIj5DcmVlcGluZyBNb2xkPC9hPjxiciAvPjLCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnSHVycmljYW5lJykiPkh1cnJpY2FuZTwvYT48YnIgLz4zwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ092ZXJydW4nKSI+T3ZlcnJ1bjwvYT48YnIgLz48aHIgc2l6ZT0iMSIgd2lkdGg9IjUwJSIgYWxpZ249ImxlZnQiIGNsYXNzPSJkZWNrdG90YWxzIiAvPjxzcGFuIGNsYXNzPSJkZWNrdG90YWxzIj45IG90aGVyIHNwZWxsczwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICA8L3RkPg0KICAgICAgICAgIDwvdHI+DQogICAgICAgIDwvdGFibGU+DQogICAgICA8L3RkPg0KICAgICAgPHRkIGNsYXNzPSJyaWdodCIgLz4NCiAgICA8L3RyPg0KICAgIDx0cj4NCiAgICAgIDx0ZCBjbGFzcz0iYm90dG9tbGVmdCIgLz4NCiAgICAgIDx0ZCBjbGFzcz0iYm90dG9tIiAvPg0KICAgICAgPHRkIGNsYXNzPSJib3R0b21yaWdodCIgLz4NCiAgICA8L3RyPg0KICA8L3RhYmxlPg0KPC9wPg0KPHA+T25lIG9mIG15IGZhdm91cml0ZSBjYXJkcyBldmVyIGlzIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnTGxhbm93YXJfU2VudGluZWwnKSI+TGxhbm93YXIgU2VudGluZWw8L2E+cywgc28gSSB3YXMgZGVsaWdodGVkIHRvIHNlZSB0aGF0IGl0IHdhcyBqb2luaW5nIHRoZSBjb3JlIHNldC4gSXQncyBhIGNhcmQgdGhhdCBJIGhhdmVuJ3QgcGxheWVkIHdpdGggdG9vIG11Y2ggcmVjZW50bHksIHNpbmNlIGFsbW9zdCBhbGwgb2YgbXkgZGVja3MgY3VycmVudGx5IGluIGNpcmN1bGF0aW9uIGFyZSBIaWdobGFuZGVyIChvciBFbGRlciBEcmFnb24gSGlnaGxhbmRlciksIGJ1dCBub3cgdGhhdCBJIGNhbiByZS1wYWlyIGl0IHdpdGggPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdPdmVycnVuJykiPk92ZXJydW48L2E+IChpbiBTdGFuZGFyZCwgbm8gbGVzcykgSSdsbCBiZSBnaXZpbmcgdGhlIHRlYW0gbXVjaCBtb3JlIHBsYXkuPC9wPg0KPHA+DQogIDxiPg0KICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ2VwaGFsaWRfQ29uc3RhYmxlJykiPkNlcGhhbGlkIENvbnN0YWJsZTwvYT4gKyA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0hhdGVfV2VhdmVyJykiPkhhdGUgV2VhdmVyPC9hPjwvYj4NCjwvcD4NCjxwPg0KICA8dGFibGUgYWxpZ249ImNlbnRlciIgY2VsbHNwYWNpbmc9IjE1Ij4NCiAgICA8dHI+DQogICAgICA8dGQgYWxpZ249ImNlbnRlciI+DQogICAgICAgIDxkaXYgY2xhc3M9Im1hZ2ljLWNhcmQgbWFnaWMtY2FyZC1ibGFjayBtYWdpYy1jYXJkLWNlbnRlciI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1hcnQiPg0KICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ2VwaGFsaWRfQ29uc3RhYmxlJykiPg0KICAgICAgICAgICAgICA8aW1nIGJvcmRlcj0iMCIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyODUiIHNyYz0iL2dsb2JhbC9pbWFnZXMvbWFnaWMvZ2VuZXJhbC9DZXBoYWxpZF9Db25zdGFibGUuanBnIiBhbHQ9IkNlcGhhbGlkIENvbnN0YWJsZSIgLz4NCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L3RkPg0KICAgICAgPHRkIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJtYWdpYy1jYXJkIG1hZ2ljLWNhcmQtYmxhY2sgbWFnaWMtY2FyZC1jZW50ZXIiPg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYXJ0Ij4NCiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0hhdGVfV2VhdmVyJykiPg0KICAgICAgICAgICAgICA8aW1nIGJvcmRlcj0iMCIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyODUiIHNyYz0iL2dsb2JhbC9pbWFnZXMvbWFnaWMvZ2VuZXJhbC9IYXRlX1dlYXZlci5qcGciIGFsdD0iSGF0ZSBXZWF2ZXIiIC8+DQogICAgICAgICAgICA8L2E+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC90ZD4NCiAgICA8L3RyPg0KICA8L3RhYmxlPg0KPC9wPg0KPHA+V2hlbiBJIHdhcyBsb29raW5nIGZvciBjcmVhdHVyZXMgdG8gIm1hcnJ5IiB0byA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0NlcGhhbGlkX0NvbnN0YWJsZScpIj5DZXBoYWxpZCBDb25zdGFibGU8L2E+LCBJIGZpZ3VyZWQgSSdkIGVuZCB1cCBmaW5kaW5nIHNvbWV0aGluZyBncmVlbi4gQWZ0ZXIgYWxsLCBncmVlbiBpcyB0aGUgbWFpbiBjb2xvdXIgb2YgY3JlYXR1cmUtcHVtcGluZyBlZmZlY3RzLCBhbmQgdGhlIENvbnN0YWJsZSBsaWtlcyBub3RoaW5nIG1vcmUgdGhhbiB0byBoYXZlIGl0cyBwb3dlciBwdW1wZWQgdXAuIEl0IHR1cm5zIG91dCB0aGF0IGdyZWVuIGRpZG4ndCBoYXZlIGFueSBjcmVhdHVyZXMgdGhhdCB3b3VsZCBkbyB0aGUgdHJpY2sgKGFsdGhvdWdoIGl0IGhhcyBwbGVudHkgb2Ygc3BlbGxzIHRoYXQgd291bGQpLCBidXQgSSB3YXMgdmVyeSBleGNpdGVkIHRvIGZpbmQgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdIYXRlX1dlYXZlcicpIj5IYXRlIFdlYXZlcjwvYT4uPC9wPg0KPHA+QXMgSSBtZW50aW9uZWQgYWJvdmUsIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ3JhZnR5X1BhdGhtYWdlJykiPkNyYWZ0eSBQYXRobWFnZTwvYT4gaXMgYmVzdCB3aXRoIGVpdGhlciBjcmVhdHVyZXMgdGhhdCBjYW4gYmUgcHVtcGVkIHVwIG9yIHdpdGggY3JlYXR1cmVzIHRoYXQgZG8gc29tZXRoaW5nIGJydXRhbCB3ZW50IHRoZXkgY29ubmVjdCB3aXRoIHlvdXIgb3Bwb25lbnQuIFdlbGwsIHdpdGggPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDZXBoYWxpZF9Db25zdGFibGUnKSI+Q2VwaGFsaWQgQ29uc3RhYmxlPC9hPiBhbmQgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdIYXRlX1dlYXZlcicpIj5IYXRlIFdlYXZlcjwvYT4sIHlvdSBjYW4gaGF2ZSBib3RoLiBKdXN0IG1ha2UgdGhlIENvbnN0YWJsZSB1bmJsb2NrYWJsZSwgcHVtcCBpdCB3aXRoIHRoZSBXZWF2ZXIsIGFuZCBib3VuY2UgYSBidW5jaCBvZiBwZXJtYW5lbnRzLjwvcD4NCjxwPg0KICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0hhdGVfV2VhdmVyJykiPkhhdGUgV2VhdmVyPC9hPiBpcyBhbHNvIGdvb2Qgd2l0aCBjaGVhcCBldmFzaXZlIGNyZWF0dXJlcyBsaWtlIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ2xvdWRfU3ByaXRlJykiPkNsb3VkIFNwcml0ZTwvYT4sIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ2xvdWRfRWxlbWVudGFsJykiPkNsb3VkIEVsZW1lbnRhbDwvYT4sIGFuZCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1RoaWV2aW5nX01hZ3BpZScpIj5UaGlldmluZyBNYWdwaWU8L2E+ICh3aGljaCBpcyBhbHNvIGdvb2Qgd2l0aCA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0NyYWZ0eV9QYXRobWFnZScpIj5DcmFmdHkgUGF0aG1hZ2U8L2E+KS4gPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDZXBoYWxpZF9Db25zdGFibGUnKSI+Q2VwaGFsaWQgQ29uc3RhYmxlPC9hPiwgbWVhbndoaWxlLCBjYW4gYmUgc3VwcGxlbWVudGVkIHdpdGggbW9yZSBib3VuY2UgKGxpa2UgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdVbnN1bW1vbicpIj5VbnN1bW1vbjwvYT4gYW5kIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQm9vbWVyYW5nJykiPkJvb21lcmFuZzwvYT4pIG9yIHdpdGggZGlzY2FyZCAobGlrZSA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0h5cG5vdGljX1NwZWN0ZXInKSI+SHlwbm90aWMgU3BlY3RlcjwvYT4pLiBBZGQgaXQgYWxsIHVwIGFuZCB5b3UgbWlnaHQgZ2V0IHNvbWV0aGluZyBsaWtlIHRoaXM6PC9wPg0KPHA+DQogIDx0YWJsZSBjbGFzcz0iZGVjayIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiPg0KICAgIDx0cj4NCiAgICAgIDx0ZCBjbGFzcz0idG9wbGVmdCIgLz4NCiAgICAgIDx0ZCBjbGFzcz0idG9wIiAvPg0KICAgICAgPHRkIGNsYXNzPSJ0b3ByaWdodCIgLz4NCiAgICA8L3RyPg0KICAgIDx0cj4NCiAgICAgIDx0ZCBjbGFzcz0ibGVmdCIgLz4NCiAgICAgIDx0ZCBjbGFzcz0iY29udGVudCIgdmFsaWduPSJ0b3AiPg0KICAgICAgICA8dGFibGUgY2xhc3M9ImRlY2tjb250ZW50IiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCI+DQogICAgICAgICAgPHRyIGNsYXNzPSJkZWNrdG9wIj4NCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idGl0bGUiPg0KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYWluIj4NCiAgICAgICAgICAgICAgICA8aGVhZGluZz5IYXRlLUxlZ2dlZCBGcmVha3M8L2hlYWRpbmc+DQogICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWIiPjwvZGl2Pg0KICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgIDx0ZCBjbGFzcz0ib3B0aW9ucyIgYWxpZ249InJpZ2h0Ij4NCiAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9IiYjeEE7ICAgICAgICAgICAgICAgICAgICAgICAgL21hZ2ljL3NhbXBsZWhhbmQuYXNwP3g9bXRnY29tL2RhaWx5L2NtODImYW1wO2RlY2tudW09NCI+DQogICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9tYWdpYy9pbWFnZXMvc2FtcGxlaGFuZC5naWYiIHdpZHRoPSIzOSIgaGVpZ2h0PSIxOCIgYm9yZGVyPSIwIiBhbHQ9IlZpZXcgYSBzYW1wbGUgaGFuZCBvZiB0aGlzIGRlY2siIGFsaWduPSJyaWdodCIgLz4NCiAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICA8YSBocmVmPSIvbWFnaWMvZGVja3MvaG91c2VvZmNhcmRzL2NtODJfRnJlYWtzLmRlYyI+DQogICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9tYWdpYy9pbWFnZXMvY29uc29sZS9pY29uX2RlY2Rvd25sb2FkLmdpZiIgd2lkdGg9IjQxIiBoZWlnaHQ9IjE3IiBib3JkZXI9IjAiIGFsdD0iRG93bmxvYWQgdGhpcyBkZWNrIGFzIGEgTWFnaWMgT25saW5lIC5kZWMgZmlsZSIgYWxpZ249InJpZ2h0IiAvPg0KICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICA8L3RkPg0KICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPHRyPg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJtYWluZGVjayIgY29sc3Bhbj0iMiIgdmFsaWduPSJ0b3AiPg0KICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImNhcmRncm91cCI+DQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIGNvbHNwYW49IjMiPg0KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGVja3RpdGxlIj5NYWluIERlY2s8L3A+DQogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkY291bnQiPjYwIGNhcmRzDQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPjjCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnSXNsYW5kJykiPklzbGFuZDwvYT48YnIgLz43wqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1N3YW1wJykiPlN3YW1wPC9hPjxiciAvPjTCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnVGVycmFtb3JwaGljX0V4cGFuc2UnKSI+VGVycmFtb3JwaGljIEV4cGFuc2U8L2E+PGJyIC8+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdVbmRlcmdyb3VuZF9SaXZlcicpIj5VbmRlcmdyb3VuZCBSaXZlcjwvYT48YnIgLz48aHIgc2l6ZT0iMSIgd2lkdGg9IjUwJSIgYWxpZ249ImxlZnQiIGNsYXNzPSJkZWNrdG90YWxzIiAvPjxzcGFuIGNsYXNzPSJkZWNrdG90YWxzIj4yMyBsYW5kczwvc3Bhbj48L3RkPg0KICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0idG9wIj40wqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0NlcGhhbGlkX0NvbnN0YWJsZScpIj5DZXBoYWxpZCBDb25zdGFibGU8L2E+PGJyIC8+M8KgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdDbG91ZF9FbGVtZW50YWwnKSI+Q2xvdWQgRWxlbWVudGFsPC9hPjxiciAvPjTCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQ2xvdWRfU3ByaXRlJykiPkNsb3VkIFNwcml0ZTwvYT48YnIgLz4zwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0NyYWZ0eV9QYXRobWFnZScpIj5DcmFmdHkgUGF0aG1hZ2U8L2E+PGJyIC8+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdIYXRlX1dlYXZlcicpIj5IYXRlIFdlYXZlcjwvYT48YnIgLz40wqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ0h5cG5vdGljX1NwZWN0ZXInKSI+SHlwbm90aWMgU3BlY3RlcjwvYT48YnIgLz4zwqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1RoaWV2aW5nX01hZ3BpZScpIj5UaGlldmluZyBNYWdwaWU8L2E+PGJyIC8+PGhyIHNpemU9IjEiIHdpZHRoPSI1MCUiIGFsaWduPSJsZWZ0IiBjbGFzcz0iZGVja3RvdGFscyIgLz48c3BhbiBjbGFzcz0iZGVja3RvdGFscyI+MjUgY3JlYXR1cmVzPC9zcGFuPjwvdGQ+DQogICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiPjTCoA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJub2RlYyIgaHJlZj0iamF2YXNjcmlwdDphdXRvQ2FyZFdpbmRvdygnQm9vbWVyYW5nJykiPkJvb21lcmFuZzwvYT48YnIgLz40wqANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibm9kZWMiIGhyZWY9ImphdmFzY3JpcHQ6YXV0b0NhcmRXaW5kb3coJ1RlcnJvcicpIj5UZXJyb3I8L2E+PGJyIC8+NMKgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5vZGVjIiBocmVmPSJqYXZhc2NyaXB0OmF1dG9DYXJkV2luZG93KCdVbnN1bW1vbicpIj5VbnN1bW1vbjwvYT48YnIgLz48aHIgc2l6ZT0iMSIgd2lkdGg9IjUwJSIgYWxpZ249ImxlZnQiIGNsYXNzPSJkZWNrdG90YWxzIiAvPjxzcGFuIGNsYXNzPSJkZWNrdG90YWxzIj4xMiBvdGhlciBzcGVsbHM8L3NwYW4+PC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICA8L3RyPg0KICAgICAgICA8L3RhYmxlPg0KICAgICAgPC90ZD4NCiAgICAgIDx0ZCBjbGFzcz0icmlnaHQiIC8+DQogICAgPC90cj4NCiAgICA8dHI+DQogICAgICA8dGQgY2xhc3M9ImJvdHRvbWxlZnQiIC8+DQogICAgICA8dGQgY2xhc3M9ImJvdHRvbSIgLz4NCiAgICAgIDx0ZCBjbGFzcz0iYm90dG9tcmlnaHQiIC8+DQogICAgPC90cj4NCiAgPC90YWJsZT4NCjwvcD4NCjxoMz5VcGRhdGUgb2YgdGhlIFBlb3BsZTwvaDM+DQo8cD5UaGVyZSBpcyBzdGlsbCBvbmUgd2VlayB0byBnbyBpbiB0aGUgQXVjdGlvbiBvZiB0aGUgUGVvcGxlIGRlY2tidWlsZGluZyBjaGFsbGVuZ2UhIEZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoaXMgZXhjaXRpbmcgb3Bwb3J0dW5pdHkgdG8gYnVpbGQgYSBkZWNrIGZvciB0aGlzIHllYXIncyA8Yj5NYWdpYzwvYj4gSW52aXRhdGlvbmFsLCBjaGVjayBvdXQgZWl0aGVyIG9mIG15IHR3byBwcmV2aW91cyBhcnRpY2xlczogPGEgaHJlZj0iL01hZ2ljL01hZ2F6aW5lL0FydGljbGUuYXNweD94PW10Z2NvbS9kYWlseS9jbTgwIj5oZXJlPC9hPiBhbmQgPGEgaHJlZj0iL01hZ2ljL01hZ2F6aW5lL0FydGljbGUuYXNweD94PW10Z2NvbS9kYWlseS9jbTgxIj5oZXJlPC9hPi48L3A+DQo8cD5SZWFkIHRoZSBydWxlcywgYnVpbGQgeW91ciBkZWNrLCBhbmQgc2VuZCBpdCB0byBtZSBiZWZvcmUgQXVndXN0IDguIEdvb2QgbHVjayE8L3A+DQo8cD5VbnRpbCBuZXh0IHRpbWUsIGhhdmUgZnVuIG5hbWluZyB0aGluZ3MuPC9wPg0KPHA+Q2hyaXMgTWlsbGFyPC9wPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9tYWluQ29udGVudF9BcnRpY2xlX2Zvb3RlclBhbmVsIiBjbGFzcz0iYXJ0aWNsZS1mb290ZXIiPg0KICAgICAgICAgICAgPHVsIGNsYXNzPSJmb290ZXItbGlua3MiPg0KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vYm9hcmRzMS53aXphcmRzLmNvbS9zaG93dGhyZWFkLnBocD90PTg5NzM5MSIgdGl0bGU9IkNsaWNrIHRvIHZpc2l0IHRoZSBtZXNzYWdlIGJvYXJkcy4iPjxpbWcgc3JjPSIvTWFnaWMvQXNzZXRzL2ljb25fZGlzY3Vzcy5naWYiIGFsdD0iIiAvPjxzcGFuIGNsYXNzPSJ0ZXh0Ij5EaXNjdXNzIG9uIHRoZSBtZXNzYWdlIGJvYXJkczwvc3Bhbj48L2E+PC9saT4NCiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImVtYWlsIj48YSBocmVmPSIvY29tcGFueS9lbWFpbHRvYXV0aG9yLmFzcD9hdXRob3I9Q2hyaXMgTWlsbGFyJmFtcDtoZWFkbGluZT1LYWVydmVrIHRoZSBIYWlybGVzcyIgdGFyZ2V0PSJfYmxhbmsiIG9uY2xpY2s9IndpbmRvdy5vcGVuKCcvY29tcGFueS9lbWFpbHRvYXV0aG9yLmFzcD9hdXRob3I9Q2hyaXMgTWlsbGFyJmFtcDtoZWFkbGluZT1LYWVydmVrIHRoZSBIYWlybGVzcycsICdhdXRob3JFbWFpbFdpbmRvdycsICdsZWZ0PTE1MCwgdG9wPTUwLCBzY3JlZW5YPTIwMCwgc2NyZWVuWT0xMDAsIHJlc2l6YWJsZT15ZXMsIHNjcm9sbGJhcnM9bm8sIHRvb2xiYXI9bm8sIHdpZHRoPTQ1NSwgaGVpZ2h0PTUwMCcpOyByZXR1cm4gZmFsc2UiIHRpdGxlPSJDbGljayB0byBzZW5kIGVtYWlsIHRvIHRoZSBhdXRob3IuIj48aW1nIGFsdD0iRW1haWwgdGhlIEF1dGhvciIgc3JjPSIvTWFnaWMvQXNzZXRzL2ljb25fcmVzcG9uZC5naWYiIC8+IDxzcGFuIGNsYXNzPSJ0ZXh0Ij5SZXNwb25kIHZpYSBlbWFpbDwvc3Bhbj48L2E+PC9saT4NCiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL01hZ2ljL01hZ2F6aW5lL0FyY2hpdmUuYXNweD90YWc9SG91c2Ugb2YgQ2FyZHMmZGVzY3JpcHRpb249SG91c2Ugb2YgQ2FyZHMiIHRpdGxlPSJDbGljayB0byB2aXNpdCB0aGUgJ0hvdXNlIG9mIENhcmRzJyBBcmNoaXZlLiI+PHNwYW4gY2xhc3M9InRleHQiPkhvdXNlIG9mIENhcmRzIEFyY2hpdmU8L3NwYW4+PC9hPjwvbGk+DQogICAgICAgICAgICA8L3VsPg0KICAgICAgICA8L2Rpdj4NCiAgICANCjwvZGl2Pg0KICAgIA0KICAgIA0KICAgIA0KPC9kaXY+DQo8ZGl2IGNsYXNzPSJhcnRpY2xlLWJvdHRvbSI+PC9kaXY+DQogICAgPC9kaXY+PCEtLSAvY29udGVudCAtLT4NCiAgICANCg0KCQk8L2Rpdj48IS0tIC9jZW50ZXJDb2x1bW4gLS0+DQoJCQ0KCQk8ZGl2IGlkPSJjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX1NpZGVBZFNwYWNlIj4NCgkNCgkgICAgICAgIDxkaXYgaWQ9InJpZ2h0Q29sdW1uIj4NCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNpZGVBZCI+DQogICAgICAgICAgICAgICAgICAgIDxwIGlkPSJyaWdodEFkdmVydGlzZW1lbnQiPjwvcD4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICANCgkJICAgICAgICANCg0KCSAgICAgICAgPC9kaXY+PCEtLSAvcmlnaHRDb2x1bW4gLS0+DQoJICAgIA0KPC9kaXY+DQoJCQ0KCTwvZGl2PjwhLS0gL3dyYXBwZXIgLS0+DQoJDQoJDQoNCg0KPGRpdiBpZD0ibGVmdENvbHVtbiI+DQogICAgPGRpdiBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX2xlZnROYXYiPg0KICAgICAgICANCiAgICAgICAgDQogICAgICAgIDx1bCBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX21hZ2F6aW5lIiBjbGFzcz0idGllcjEgbWFnYXppbmUiPg0KICAgICAgICAgICAgPGxpIGlkPSJjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljTGVmdE5hdmlnYXRpb25fY29sdW1ucyIgY2xhc3M9InBhcmVudCBhY3RpdmUiPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9NYWdpYy9NYWdhemluZS9BcmNoaXZlLmFzcHg/dGFnPUNvbHVtbiIgY2xhc3M9ImNvbHVtbnMiIHRpdGxlPSJDb2x1bW5zIj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPkNvbHVtbnMNCiAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgPHVsPg0KICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJBcmNoaXZlLmFzcHg/dGFnPU1ha2luZyBNYWdpYyZkZXNjcmlwdGlvbj1NYWtpbmcgTWFnaWMiIHRpdGxlPSJNYWtpbmcgTWFnaWMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1ha2luZyBNYWdpYw0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJBcmNoaXZlLmFzcHg/dGFnPUxpbWl0ZWQgSW5mb3JtYXRpb24mZGVzY3JpcHRpb249TGltaXRlZCBJbmZvcm1hdGlvbiIgdGl0bGU9IkxpbWl0ZWQgSW5mb3JtYXRpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExpbWl0ZWQgSW5mb3JtYXRpb24NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iQXJjaGl2ZS5hc3B4P3RhZz1TZXJpb3VzIEZ1biZkZXNjcmlwdGlvbj1TZXJpb3VzIEZ1biIgdGl0bGU9IlNlcmlvdXMgRnVuIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXJpb3VzIEZ1bg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJBcmNoaXZlLmFzcHg/dGFnPVNhdm9yIHRoZSBGbGF2b3ImZGVzY3JpcHRpb249VGFzdGUgdGhlIE1hZ2ljIiB0aXRsZT0iU2F2b3IgdGhlIEZsYXZvciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgU2F2b3IgdGhlIEZsYXZvcg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJBcmNoaXZlLmFzcHg/dGFnPUZyb20gdGhlIExhYiZkZXNjcmlwdGlvbj1Ib3VzZSBvZiBDYXJkcyIgdGl0bGU9IkZyb20gdGhlIExhYiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgRnJvbSB0aGUgTGFiDQogICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IkFyY2hpdmUuYXNweD90YWc9VG9wIERlY2tzJmRlc2NyaXB0aW9uPVN3aW1taW5nIFdpdGggU2hhcmtzIiB0aXRsZT0iVG9wIERlY2tzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUb3AgRGVja3MNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iQXJjaGl2ZS5hc3B4P3RhZz1CdWlsZGluZyBvbiBhIEJ1ZGdldCZkZXNjcmlwdGlvbj1CdWlsZGluZyBvbiBhIEJ1ZGdldCIgdGl0bGU9IkJ1aWxkaW5nIG9uIGEgQnVkZ2V0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBCdWlsZGluZyBvbiBhIEJ1ZGdldA0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJBcmNoaXZlLmFzcHg/dGFnPUxhdGVzdCBEZXZlbG9wbWVudHMmZGVzY3JpcHRpb249TGF0ZXN0IERldmVsb3BtZW50cyIgdGl0bGU9IkxhdGVzdCBEZXZlbG9wbWVudHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExhdGVzdCBEZXZlbG9wbWVudHMNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iQXJjaGl2ZS5hc3B4P3RhZz1UaGUgV2VlayBUaGF0IFdhcyZkZXNjcmlwdGlvbj1UaGUgV2VlayBUaGF0IFdhcyIgdGl0bGU9IlRoZSBXZWVrIFRoYXQgV2FzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGUgV2VlayBUaGF0IFdhcw0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgPGxpIGlkPSJjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljTGVmdE5hdmlnYXRpb25fZmVhdHVyZXMiPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9IkZlYXR1cmVzLmFzcHg/dGFnPUZlYXR1cmVzIiBjbGFzcz0iZmVhdHVyZXMiIHRpdGxlPSJGZWF0dXJlcyI+DQogICAgICAgICAgICAgICAgICAgIEZlYXR1cmVzDQogICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgIDxsaSBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX25ld3MiPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ik5ld3MuYXNweD90YWc9TmV3cyIgY2xhc3M9Im5ld3MiIHRpdGxlPSJOZXdzIj4NCiAgICAgICAgICAgICAgICAgICAgTmV3cw0KICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICA8bGkgaWQ9ImN0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9ldmVudCIgY2xhc3M9InBhcmVudCI+DQogICAgICAgICAgICAgICAgPGEgaHJlZj0iRXZlbnRzLmFzcHgiIGNsYXNzPSJldmVudCIgdGl0bGU9IkV2ZW50IENvdmVyYWdlIj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPkV2ZW50IENvdmVyYWdlDQogICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgIDx1bD4NCiAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iRXZlbnRzLmFzcHg/eD1tdGdldmVudC9jb3ZlcmFnZSIgdGl0bGU9IkFyY2hpdmUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFyY2hpdmUNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iRXZlbnRzLmFzcHg/eD1tdGcvZGFpbHkvZXZlbnRjb3ZlcmFnZS9kZWNrbGlzdHMiIHRpdGxlPSJEZWNrbGlzdHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlY2tsaXN0cw0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJFdmVudHMuYXNweD94PW10Z2V2ZW50L3dlYmNhc3QvaG9tZSIgdGl0bGU9IldlYmNhc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdlYmNhc3QNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iRXZlbnRzLmFzcHg/eD1tdGdldmVudC9ob2Yvd2VsY29tZSIgdGl0bGU9IlBybyBUb3VyIEhhbGwgb2YgRmFtZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgUHJvIFRvdXIgSGFsbCBvZiBGYW1lDQogICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IkV2ZW50cy5hc3B4P3g9cHJvdG91ci9zdGFuZGluZ3MvcG95MDgiIHRpdGxlPSJQbGF5ZXIgb2YgdGhlIFllYXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBsYXllciBvZiB0aGUgWWVhcg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJFdmVudHMuYXNweD94PXByb3RvdXIvc3RhbmRpbmdzL3JveTA4IiB0aXRsZT0iUm9va2llIG9mIHRoZSBZZWFyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSb29raWUgb2YgdGhlIFllYXINCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iRXZlbnRzLmFzcHg/eD1tdGcvZGFpbHkvZXZlbnRjb3ZlcmFnZS9zdGF0aXN0aWNzIiB0aXRsZT0iV2ViY2FzdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RhdGlzdGljcw0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8bGkgaWQ9ImN0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9kb3dubG9hZHMiIGNsYXNzPSJwYXJlbnQiPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9IkRvd25sb2Fkcy5hc3B4IiBjbGFzcz0iZG93bmxvYWRzIiB0aXRsZT0iRG93bmxvYWRzIj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPkRvd25sb2Fkcw0KICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICA8dWw+DQogICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IkRvd25sb2Fkcy5hc3B4P210Zy9kYWlseS9kb3dubG9hZHMvd2FsbHBhcGVycyIgdGl0bGU9IldhbGxwYXBlcnMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdhbGxwYXBlcnMNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iQXJjaGl2ZS5hc3B4P3RhZz1wb2RjYXN0JmRlc2NyaXB0aW9uPVBvZGNhc3QiIHRpdGxlPSJQb2RjYXN0cyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgUG9kY2FzdHMNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iRG93bmxvYWRzLmFzcHg/eD1tdGdldmVudC93ZWJjYXN0L2FyY2hpdmUiIHRpdGxlPSJWaWRlbyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgVmlkZW8NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgPC9saT4NCiAgICAgICAgPC91bD4NCiAgICAgICAgDQogICAgICAgIA0KICAgICAgICA8dWwgY2xhc3M9InRpZXIyIj4NCiAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3cyLndpemFyZHMuY29tL2dhdGhlcmVyLyIgdGFyZ2V0PSJfYmxhbmsiIA0KICAgICAgICAgICAgICAgICAgICB0aXRsZT0iQ2xpY2sgdG8gdmlzaXQgdGhlIEdhdGhlcmVyIE1hZ2ljIENhcmQgRGF0YWJhc2UuIiBjbGFzcz0iZ2F0aGVyZXIiPg0KICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2hhbmRsZXJzL1Jlc291cmNlU2VydmljZS5hc2h4P3R5cGU9Z2xvYmFsJmlkPU1hZ2ljQ2hyb21lJmtleT1sbl9nYXRoZXJlciIgDQogICAgICAgICAgICAgICAgICAgICAgICBhbHQ9IkdhdGhlcmVyOiBUaGUgTWFnaWMgQ2FyZCBEYXRhYmFzZSIgLz4NCiAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9mb3J1bXMuZ2xlZW1heC5jb20vZm9ydW1kaXNwbGF5LnBocD9mPTEzMSIgdGFyZ2V0PSJfYmxhbmsiIA0KICAgICAgICAgICAgICAgICAgICB0aXRsZT0iQ2xpY2sgdG8gdmlzaXQgdGhlIEZvcnVtcy4iIGNsYXNzPSJmb3J1bXMiPg0KICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2hhbmRsZXJzL1Jlc291cmNlU2VydmljZS5hc2h4P3R5cGU9Z2xvYmFsJmlkPU1hZ2ljQ2hyb21lJmtleT1sbl9mb3J1bXMiIA0KICAgICAgICAgICAgICAgICAgICAgICAgYWx0PSJGb3J1bXM6IENvbm5lY3Qgd2l0aCB0aGUgTWFnaWMgQ29tbXVuaXR5IiAvPg0KICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICA8bGkgY2xhc3M9ImxvY2F0b3IiPg0KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImN0bDAwX2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfTWFnaWNMZWZ0TmF2aWdhdGlvbl9NYWdpY0xvY2F0b3IiPg0KCQ0KICAgICAgICAgICAgICAgICAgICA8ZW0+TWFnaWMgTG9jYXRvcjwvZW0+DQogICAgICAgICAgICAgICAgICAgIDxmaWVsZHNldD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgdmFsdWU9IlN0b3Jlc1JhZGlvIiBuYW1lPSJjdGwwMCRjdGwwMCRDb250ZW50UGxhY2VIb2xkZXIxJE1hZ2ljTGVmdE5hdmlnYXRpb24kdHlwZSIgdHlwZT0icmFkaW8iIGlkPSJjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljTGVmdE5hdmlnYXRpb25fU3RvcmVzUmFkaW8iIGNsYXNzPSJyYWRpbyIgY2hlY2tlZD0iY2hlY2tlZCIgLz5TdG9yZXM8L2xhYmVsPjxiciAvPiANCiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgdmFsdWU9IkV2ZW50c1JhZGlvIiBuYW1lPSJjdGwwMCRjdGwwMCRDb250ZW50UGxhY2VIb2xkZXIxJE1hZ2ljTGVmdE5hdmlnYXRpb24kdHlwZSIgdHlwZT0icmFkaW8iIGlkPSJjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljTGVmdE5hdmlnYXRpb25fRXZlbnRzUmFkaW8iIGNsYXNzPSJyYWRpbyIgLz5FdmVudHM8L2xhYmVsPjxiciAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IG5hbWU9ImN0bDAwJGN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkTWFnaWNMZWZ0TmF2aWdhdGlvbiRBZGRyZXNzIiB0eXBlPSJ0ZXh0IiBpZD0iY3RsMDBfY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9NYWdpY0xlZnROYXZpZ2F0aW9uX0FkZHJlc3MiIGNsYXNzPSJ0ZXh0Ym94IiBvbmZvY3VzPSJGb2N1c01hZ2ljTG9jYXRvclRleHRCb3goZXZlbnQsIHRoaXMpOyIgb25ibHVyPSJVbmZvY3VzTWFnaWNMb2NhdG9yVGV4dEJveChldmVudCwgdGhpcyk7IiB2YWx1ZT0iQ2l0eSIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9ImN0bDAwJGN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkTWFnaWNMZWZ0TmF2aWdhdGlvbiRTZWFyY2giIHZhbHVlPSJTZWFyY2giIGlkPSJjdGwwMF9jdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX01hZ2ljTGVmdE5hdmlnYXRpb25fU2VhcmNoIiBjbGFzcz0ic3VibWl0IiAvPg0KICAgICAgICAgICAgICAgICAgICA8L2ZpZWxkc2V0Pg0KICAgICAgICAgICAgICAgIA0KPC9kaXY+DQogICAgICAgICAgICA8L2xpPg0KICAgICAgICA8L3VsPg0KICAgIDwvZGl2PjwhLS0gL2xlZnROYXYgLS0+DQo8L2Rpdj48IS0tIC9sZWZ0Q29sdW1uIC0tPg0KDQoNCg0KCQkgICAgICAgIDwvZGl2PjwhLS0gL01hc3Rlck1haW5Db250ZW50IC0tPg0KICAgICAgICAJCQ0KCQkgICAgICAgIDwhLS0gRm9vdGVyIC0tPg0KCQkgICAgICAgIDxkaXYgaWQ9ImZvb3RlcldyYXAiPg0KCQkgICAgICAgICAgICA8ZGl2IGlkPSJmb290ZXIiPg0KCQkJCSAgICAgICAgDQoNCjxkaXYgaWQ9ImZvb3Rlck5hdiI+DQogICAgPHVsPg0KICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy53aXphcmRzLmNvbS9kZWZhdWx0LmFzcD94PWFib3V0dXMvYWJvdXR3aXphcmRzIiB0aXRsZT0iQ2xpY2sgdG8gdmlzaXQgJ0Fib3V0IFVzJyBwYWdlLiI+QWJvdXQgVXM8L2E+PC9saT4NCiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cud2l6YXJkcy5jb20vZGVmYXVsdC5hc3A/eD1hYm91dHVzL2pvYnMiIHRpdGxlPSJDbGljayB0byB2aXNpdCAnSm9icycgcGFnZS4iPkpvYnM8L2E+PC9saT4NCiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cud2l6YXJkcy5jb20vZGVmYXVsdC5hc3A/eD1uZXd0b3RoZWdhbWUiIHRpdGxlPSJDbGljayB0byB2aXNpdCAnTmV3IHRvIHRoZSBHYW1lPycgcGFnZS4iPk5ldyB0byB0aGUgR2FtZT88L2E+PC9saT4NCiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cud2l6YXJkcy5jb20vZGVmYXVsdC5hc3A/eD1maW5kYXN0b3JlIiB0aXRsZT0iQ2xpY2sgdG8gdmlzaXQgJ0ZpbmQgYSBTdG9yZScgcGFnZS4iPkZpbmQgYSBTdG9yZTwvYT48L2xpPg0KICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy53aXphcmRzLmNvbS9kZWZhdWx0LmFzcD94PWFib3V0dXMvcHJlc3MiIHRpdGxlPSJDbGljayB0byB2aXNpdCAnUHJlc3MnIHBhZ2UuIj5QcmVzczwvYT48L2xpPg0KICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL3dpemFyZHMuY3VzdGhlbHAuY29tLyIgdGl0bGU9IkNsaWNrIHRvIHZpc2l0ICdIZWxwJyBwYWdlLiI+SGVscDwvYT48L2xpPg0KICAgICAgICA8bGk+PGEgaHJlZj0iL01hZ2ljL0xhbmd1YWdlcy5hc3B4IiB0aXRsZT0iQ2xpY2sgdG8gdmlzaXQgJ1NlbGVjdCBMYW5ndWFnZS9Db3VudHJ5JyBwYWdlLiI+U2VsZWN0IExhbmd1YWdlL0NvdW50cnk8L2E+PC9saT4NCiAgICAgICAgPGxpPjxpbWcgc3JjPSIvbXRnL2ltYWdlcy9uYXYvbGFuZ3VhZ2Vfc2VsZWN0LmdpZiIgYWx0PSJMYW5ndWFnZSBTZWxlY3RvciIgLz48L2xpPg0KICAgIDwvdWw+DQo8L2Rpdj48IS0tIC9mb290ZXJOYXYgLS0+DQo8ZGl2IGlkPSJmb290ZXJUZXh0Ij4NCiAgICA8cD4NCiAgICAgICAgwqkgMTk5NS0yMDA4IFdpemFyZHMgb2YgdGhlIENvYXN0LCBJbmMuLCBhIHN1YnNpZGlhcnkgb2YgSGFzYnJvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuPGJyIC8+DQogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cud2l6YXJkcy5jb20vZGVmYXVsdC5hc3A/eD1jb3B5cmlnaHRub3RpY2UiIHRpdGxlPSJDbGljayB0byB2aXNpdCAnVGVybXMgb2YgVXNlJyBwYWdlLiI+VGVybXMgb2YgVXNlPC9hPiB8IDxhIGhyZWY9Imh0dHA6Ly93d3cud2l6YXJkcy5jb20vZGVmYXVsdC5hc3A/eD1wcml2YWN5c3RhdGVtZW50IiB0aXRsZT0iQ2xpY2sgdG8gdmlzaXQgJ1ByaXZhY3kgU3RhdGVtZW50JyBwYWdlLiI+UHJpdmFjeSBTdGF0ZW1lbnQ8L2E+DQogICAgPC9wPg0KPC9kaXY+PCEtLSAvZm9vdGVyVGV4dCAtLT4NCg0KCQkgICAgICAgICAgICA8L2Rpdj48IS0tIC9mb290ZXIgLS0+DQoJCSAgICAgICAgICAgIDx1bCBpZD0iYWZmaWxpYXRlcyI+DQoJCSAgICAgICAgICAgICAgICA8bGk+DQoJCSAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5oYXNicm8uY29tLyIgdGl0bGU9IkNsaWNrIHRvIHZpc2l0ICdIYXNicm8uY29tJyB3ZWJzaXRlLiIgdGFyZ2V0PSJfYmxhbmsiPg0KCQkgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3d3dy53aXphcmRzLmNvbS9pbWFnZXMvd2VsY29tZTAxMDZfaGFzYnJvLmdpZiIgYWx0PSJIYXNicm8gTG9nbyIgLz4NCgkJICAgICAgICAgICAgICAgICAgICA8L2E+DQoJCSAgICAgICAgICAgICAgICA8L2xpPg0KCQkgICAgICAgICAgICAgICAgPGxpPg0KCQkgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93dzIud2l6YXJkcy5jb20vQ29tcGFueS9EZWZhdWx0LmFzcHg/ZG9jPVByaXZhY3kiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iQ2xpY2sgdG8gdmlldyAnUHJpdmFjeSBTdGF0ZW1lbnQnIHBhZ2UuIj4NCgkJICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly93d3cud2l6YXJkcy5jb20vZ2xvYmFsL2ltYWdlcy9lY3RwcHN3aXphcmRzLmdpZiIgYWx0PSJFU1JCIExvZ28iIC8+DQoJCSAgICAgICAgICAgICAgICAgICAgPC9hPg0KCQkgICAgICAgICAgICAgICAgPC9saT4NCgkJICAgICAgICAgICAgPC91bD4NCgkJICAgICAgICA8L2Rpdj48IS0tIC9mb290ZXJXcmFwIC0tPg0KICAgICAgICAJCQ0KCSAgICAgICAgPC9kaXY+PCEtLSAvd3JhcCAtLT4NCgkgICAgPC9kaXY+PCEtLSAvZ2xvd1N0YXRpYyAtLT4NCgk8L2Rpdj48IS0tIC9nbG93IC0tPg0KPC9kaXY+PCEtLSAvY29udGFpbmVyIC0tPg0KDQoNCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Il9fRVZFTlRWQUxJREFUSU9OIiBpZD0iX19FVkVOVFZBTElEQVRJT04iIHZhbHVlPSIvd0VXQndLMHRhcVRCQUxvdTc3K0FnTEM2dGJ0Q3dMUWlhQ3dEd0trazhxT0JRS0p5Tnp2QWdLSzhMaWtDQStTeXdZK3FVb2p3aWZpdjdMMUVzazZ0ZWJyIiAvPjwvZm9ybT4NCjwvYm9keT4NCjwvaHRtbD4NCg==
  id: 786541
  mime_type: text/html
  raw_url: https://web.archive.org/web/20080827084002id_/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtgcom/daily/cm82
  status_code: 200
  time: 2008-08-27 08:40:02
  url: http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtgcom/daily/cm82
  view_url: https://web.archive.org/web/20080827084002/http://www.wizards.com/Magic/Magazine/Article.aspx?x=mtgcom/daily/cm82
